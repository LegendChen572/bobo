/*
 * Decompiled with CFR 0.150.
 */
package handling;

import client.messages.commands.SkilledCommand;
import constants.GameSetConstants;
import constants.skills.SkillType;
import handling.WritableIntValueHolder;

/*
 * Exception performing whole class analysis ignored.
 */
public final class SendPacketOpcode
extends Enum<SendPacketOpcode>
implements WritableIntValueHolder {
    public static final /* synthetic */ /* enum */ SendPacketOpcode FIELD_VALUE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SPAWN_PET;
    public static final /* synthetic */ /* enum */ SendPacketOpcode KILL_MONSTER;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PVP_SUMMON;
    public static final /* synthetic */ /* enum */ SendPacketOpcode UPDATE_FAMILIAR;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MAGIC_WHEEL;
    public static final /* synthetic */ /* enum */ SendPacketOpcode IMITATED_NPC_RESULT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode REPORT_TIME;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MOVE_SCREEN;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOW_CONSUME_EFFECT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode REACTOR_DESTROY;
    public static final /* synthetic */ /* enum */ SendPacketOpcode BONUS_EXP_CHANGED;
    public static final /* synthetic */ /* enum */ SendPacketOpcode UPDATE_BEANS;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CATCH_MONSTER;
    public static final /* synthetic */ /* enum */ SendPacketOpcode DISABLE_INNER_ABILITY;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SPAWN_PLAYER;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CLEAR_MID_MSG;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CATCH_MOB;
    public static final /* synthetic */ /* enum */ SendPacketOpcode REPLACE_SKILLS;
    public static final /* synthetic */ /* enum */ SendPacketOpcode BUDDYLIST;
    public static final /* synthetic */ /* enum */ SendPacketOpcode UPDATE_QUEST_INFO;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SPAWN_MONSTER_CONTROL;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CANCEL_MONSTER_STATUS;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SP_RESET;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PET_LOAD_EXCEPTIONLIST;
    public static final /* synthetic */ /* enum */ SendPacketOpcode BBS_OPERATION;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FAIRY_PEND_MSG;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SKILL_MAP;
    public static final /* synthetic */ /* enum */ SendPacketOpcode DAMAGE_SUMMON;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOP_SCANNER_RESULT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode TEMP_STATS;
    public static final /* synthetic */ /* enum */ SendPacketOpcode COCONUT_SCORE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PACHINKO_SHOW;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MULUNG_DOJO_RANKING;
    public static final /* synthetic */ /* enum */ SendPacketOpcode UPDATE_HIRED_MERCHANT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PVP_ICEGAGE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode COOLDOWN;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MAGIC_ATTACK;
    public static final /* synthetic */ /* enum */ SendPacketOpcode HORNTAIL_SHRINE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MID_MSG;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FACIAL_EXPRESSION;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SET_POTION_DISCOUNT_RATE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode LOCK_CHARGE_SKILL;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CHAIR_EXP_RESET;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FOLLOW_REQUEST;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FINISH_GATHER;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MAP_BLOCKED;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MESOBAG_SUCCESS;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PET_FLAG_CHANGE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOW_DRAGON_GLIDE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SPAWN_DOOR;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CYGNUS_INTRO_LOCK;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CRAFT_EFFECT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MARRIAGE_UPDATE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode OWL_RESULT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MARRIAGE_REQUEST;
    public static final /* synthetic */ /* enum */ SendPacketOpcode DRESS_UP_INFO_MODIFIED;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOW_SCROLL_EFFECT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ANDROID_DEACTIVATED;
    public static final /* synthetic */ /* enum */ SendPacketOpcode REMOVE_SPEAK_LIMIT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MONSTER_CARNIVAL_SUMMON;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PVP_HP;
    public static final /* synthetic */ /* enum */ SendPacketOpcode REMOVE_SUMMON;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FISHING_CAUGHT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOW_MONSTER_HP;
    public static final /* synthetic */ /* enum */ SendPacketOpcode AUTO_LOGIN;
    public static final /* synthetic */ /* enum */ SendPacketOpcode DISPLAY_INFO;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MONSTER_CARNIVAL_PARTY_CP;
    public static final /* synthetic */ /* enum */ SendPacketOpcode TREASURE_BOX;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MOVE_SUMMON;
    public static final /* synthetic */ /* enum */ SendPacketOpcode LOGIN_AUTH;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CS_USE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode TIME_BOMB_ATTACK;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FAMILY_JOIN_REQUEST;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PROFESSION_INFO;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOW_POTENTIAL_EFFECT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PVP_KILLED;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SET_BACK_EFFECT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FAME_RESPONSE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ROLL_SNOWBALL;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOW_USER_LOCAL_EFFECT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CONFIRM_SHOP_TRANSACTION;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MONSTER_PROPERTIES;
    public static final /* synthetic */ /* enum */ SendPacketOpcode GIVE_FOREIGN_BUFF;
    public static final /* synthetic */ /* enum */ SendPacketOpcode RELOG_RESPONSE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode STOP_CLOCK;
    public static final /* synthetic */ /* enum */ SendPacketOpcode DRAGON_MOVE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FAMILY_FAMOUS_POINT_INC_RESULT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ADD_NEW_CHAR_ENTRY;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOW_CHAIR;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CASH_SONG;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SILENT_CRUSADE_SHOP;
    public static final /* synthetic */ /* enum */ SendPacketOpcode WEDDING_GIFT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MOB_SKILL_DELAY;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ANTI_MACRO_RESULT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode BOAT_PACKET;
    public static final /* synthetic */ /* enum */ SendPacketOpcode DIRECTION_FACIAL_EXPRESSION;
    public static final /* synthetic */ /* enum */ SendPacketOpcode COMESOON_OPEN;
    public static final /* synthetic */ /* enum */ SendPacketOpcode EXPEDITION_OPERATION;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MOVE_PLAYER;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOW_SPECIAL_ATTACK;
    public static final /* synthetic */ /* enum */ SendPacketOpcode DONATE_BEANS;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CHALKBOARD;
    public static final /* synthetic */ /* enum */ SendPacketOpcode DAMAGE_MONSTER;
    public static final /* synthetic */ /* enum */ SendPacketOpcode UPDATE_STOLEN_SKILLS;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FISHING_BOARD_UPDATE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ULTIMATE_EXPLORER;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MOVE_MONSTER_RESPONSE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode LOGIN_STATUS;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ITEM_POT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SET_MAP_OBJECT_VISIBLE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PHANTOM_CARD;
    public static final /* synthetic */ /* enum */ SendPacketOpcode TESLA_TRIANGLE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode UPDATE_MOUNT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CS_WEB;
    public static final /* synthetic */ /* enum */ SendPacketOpcode UNKNOWN;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PAMS_SONG;
    public static final /* synthetic */ /* enum */ SendPacketOpcode DESTROY_KITE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MARRIAGE_RESULT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode UPDATE_JAGUAR;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FACIAL_EXPRESSION_LOCAL;
    public static final /* synthetic */ /* enum */ SendPacketOpcode HIT_COCONUT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MESSENGER;
    public static final /* synthetic */ /* enum */ SendPacketOpcode DROP_ITEM_FROM_MAPOBJECT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode BOSS_ENV;
    public static final /* synthetic */ /* enum */ SendPacketOpcode NPC_SCRIPTABLEUP;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SESSION_VALUE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PARTY_OPERATION;
    public static final /* synthetic */ /* enum */ SendPacketOpcode RPS_GAME;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ANDROID_MOVE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode LUMINOUS_COMBO;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MONSTER_CARNIVAL_START;
    public static final /* synthetic */ /* enum */ SendPacketOpcode DRAGON_SPAWN;
    public static final /* synthetic */ /* enum */ SendPacketOpcode DAMAGE_PLAYER;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PET_AUTO_MP;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SERVERSTATUS;
    public static final /* synthetic */ /* enum */ SendPacketOpcode NEW_PYRAMID_RESULT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PVP_ENABLED;
    public static final /* synthetic */ /* enum */ SendPacketOpcode UPDATE_STATS;
    public static final /* synthetic */ /* enum */ SendPacketOpcode UPDATE_PARTYMEMBER_HP;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PART_TIME;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PLAYER_NPC;
    public static final /* synthetic */ /* enum */ SendPacketOpcode HOUR_CHANGED;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ITEM_COOLTIME;
    public static final /* synthetic */ /* enum */ SendPacketOpcode TOUCH_FAMILIAR;
    public static final /* synthetic */ /* enum */ SendPacketOpcode GET_MTS_TOKENS;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SERVER_BLOCKED;
    public static final /* synthetic */ /* enum */ SendPacketOpcode NEW_PYRAMID_SCORE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode AVATAR_MEGA;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FAMILY_INFO_RESULT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FOLLOW_EFFECT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode RESULT_INSTANCE_TABLE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode BOAT_EFFECT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FAMILY_CHART_RESULT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CANCEL_BUFF;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SERVERMESSAGE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ARIANT_SCOREBOARD;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MAP_TRANSFER_RESULT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode OPEN_NPC_SHOP;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOW_POTENTIAL_RESET;
    public static final /* synthetic */ /* enum */ SendPacketOpcode OPEN_BAG;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MAPLE_ADMIN_MSG;
    public static final /* synthetic */ /* enum */ SendPacketOpcode GENDER_SET;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FAMILY_JOIN_REQUEST_RESULT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MAP_VALUE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FOLLOW_MOVE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MONSTER_CARNIVAL_DIED;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CLASS_COMPETITION_AUTHKEY_UPDATE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FISHING_KING_RANKING;
    public static final /* synthetic */ /* enum */ SendPacketOpcode AGGRO_RANK_INFO;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SCROLL_GASHAPON_BOX;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SORT_ITEM_RESULT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PVP_MODE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SUMMON_ATTACK;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PAMS_SONG_UI;
    public static final /* synthetic */ /* enum */ SendPacketOpcode LEFT_KNOCK_BACK;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PLAYER_INTERACTION;
    public static final /* synthetic */ /* enum */ SendPacketOpcode REMOVE_MIST;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ENGLISH_QUIZ;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PVP_TEAM;
    public static final /* synthetic */ /* enum */ SendPacketOpcode VICIOUS_HAMMER_USE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ANYWHERE_DOOR_ERROR;
    public static final /* synthetic */ /* enum */ SendPacketOpcode LEVEL_UPDATE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CS_XMAS_SURPRISE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PYRAMID_UPDATE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode YELLOW_CHAT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MINIMAP_ON_OFF;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MTS_OPERATION;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PVP_TYPE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SPAWN_MIST;
    public static final /* synthetic */ /* enum */ SendPacketOpcode UPDATE_CORE_AURA;
    public static final /* synthetic */ /* enum */ SendPacketOpcode UNLOCK_CHARGE_SKILL;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ITEM_COOLDOWN;
    public static final /* synthetic */ /* enum */ SendPacketOpcode UPDATE_SKILLS;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SPAWN_KITE_ERROR;
    public static final /* synthetic */ /* enum */ SendPacketOpcode YUTOSHIELD_DAMAGE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOW_TITLE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOW_NOTES;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CHINESE_PVP_RANKING;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ANGELIC_CHANGE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode OPEN_STORAGE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MAP_EFFECT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ANDROID_SPAWN;
    public static final /* synthetic */ /* enum */ SendPacketOpcode OPEN_UI;
    public static final /* synthetic */ /* enum */ SendPacketOpcode LOAD_TEAM;
    public static final /* synthetic */ /* enum */ SendPacketOpcode REACTOR_SPAWN;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SET_FIELD;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MERCH_ITEM_MSG;
    public static final /* synthetic */ /* enum */ SendPacketOpcode TARGET_SKILL;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CS_UPDATE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode QUEST_HELPER;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PIGMI_REWARD;
    public static final /* synthetic */ /* enum */ SendPacketOpcode NEW_PYRAMID_LIFE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ANYWHERE_DOOR;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PACHINKO_MARQUEE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode BOMB_LIE_DETECTOR;
    public static final /* synthetic */ /* enum */ SendPacketOpcode REMOVE_PLAYER_FROM_MAP;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SPAWN_PORTAL;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CHAR_INFO;
    public static final /* synthetic */ /* enum */ SendPacketOpcode GMEVENT_INSTRUCTIONS;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FAMILY_SUMMON_REQUEST;
    public static final /* synthetic */ /* enum */ SendPacketOpcode GUILD_OPERATION;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SKILL_USE_RESULT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ARIANT_SCORE_UPDATE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode GUILD_NAME_CHANGED;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CLEAR_BACK_EFFECT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CANCEL_SKILL_EFFECT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MULTICHAT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SERVERLIST;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CLOSE_RANGE_ATTACK;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOW_EQUIP_EFFECT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PLAYER_DAMAGED;
    public static final /* synthetic */ /* enum */ SendPacketOpcode OX_QUIZ;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CLAIM_RESULT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode QUICK_SLOT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FAMILY_PRIVILEGE_LIST;
    public static final /* synthetic */ /* enum */ SendPacketOpcode EARN_TITLE_MSG;
    public static final /* synthetic */ /* enum */ SendPacketOpcode GIVE_BUFF;
    public static final /* synthetic */ /* enum */ SendPacketOpcode DEATH_COUNT_INFO;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CHANNEL_SELECTED;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SEND_FISH_BOX;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ENABLE_INNER_ABILITY;
    public static final /* synthetic */ /* enum */ SendPacketOpcode UPDATE_CHAR_BOX;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MODIFY_INVENTORY_ITEM;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SUMMON_SKILL;
    public static final /* synthetic */ /* enum */ SendPacketOpcode DIRECTION_INFO;
    public static final /* synthetic */ /* enum */ SendPacketOpcode DESTROY_HIRED_MERCHANT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode HARVEST_MESSAGE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PVP_TRANSFORM;
    public static final /* synthetic */ /* enum */ SendPacketOpcode DIRECTION_STATUS;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SUMMON_ITEM_UNAVAILABLE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode WHISPER;
    public static final /* synthetic */ /* enum */ SendPacketOpcode REMOVE_ITEM_FROM_MAP;
    public static final /* synthetic */ /* enum */ SendPacketOpcode DELETE_CHAR_RESPONSE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SPAWN_KITE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SPAWN_MONSTER;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SPAWN_NPC;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CHAOS_HORNTAIL_SHRINE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode HYPER_SKILL_RESET_RESULT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SYNTHESIZING_MSG;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PVP_MIST;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOW_QUEST_COMPLETION;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CANCEL_CHAIR;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CAPTURE_POSITION;
    public static final /* synthetic */ /* enum */ SendPacketOpcode REPORT_RESPONSE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode DISABLE_NPC;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SPAWN_HIRED_MERCHANT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SPOUSE_CHAT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode DRAGON_BLINK;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOW_ITEM_EFFECT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode UPDATE_HONOUR;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SUMMON_HINT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode LIE_DETECTOR;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ALLIANCE_OPERATION;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PACHINKO_ACT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode LAST_CONNECT_WORLD;
    public static final /* synthetic */ /* enum */ SendPacketOpcode RANGED_ATTACK;
    public static final /* synthetic */ /* enum */ SendPacketOpcode GUILD_MARK_CHANGED;
    public static final /* synthetic */ /* enum */ SendPacketOpcode DRAGON_REMOVE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode RETURN_LOGIN;
    public static final /* synthetic */ /* enum */ SendPacketOpcode UPDATE_CHAR_LOOK;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SELECT_EXP_CHAIR;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MONSTERBOOK_ADD;
    public static final /* synthetic */ /* enum */ SendPacketOpcode USE_SKILL_BOOK;
    public static final /* synthetic */ /* enum */ SendPacketOpcode NORASHIELD_DAMAGE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FAMILY_NOTIFY_LOGIN_OR_LOGOUT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MOVE_FAMILIAR;
    public static final /* synthetic */ /* enum */ SendPacketOpcode AP_RESET;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CLAIM_STATUS_CHANGED;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SPAWN_FAMILIAR;
    private /* synthetic */ short d;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CS_INTO;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MECH_DOOR_REMOVE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PING;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOW_MAGNIFY_GLASS;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOW_PQ_REWARD;
    public static final /* synthetic */ /* enum */ SendPacketOpcode KEYDOWN_AREA_MOVE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PET_AUTO_HP;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MESOBAG_FAILURE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode TOP_MSG;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PARTY_VALUE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SPOUSE_MESSAGE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode UPDATE_FRINED_POINTS;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ANDROID_UPDATE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CHANGE_CHANNEL;
    public static final /* synthetic */ /* enum */ SendPacketOpcode TALK_MONSTER;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SKILL_EFFECT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CHAOS_ZAKUM_SHRINE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SKILL_MACRO;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PET_TRAIN;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ENERGY_ATTACK;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PVP_INFO;
    public static final /* synthetic */ /* enum */ SendPacketOpcode THROW_GRENADE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SPAWN_EXTRACTOR;
    public static final /* synthetic */ /* enum */ SendPacketOpcode GAIN_FORCE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode WEB_BOARD_AUTHKEY_UPDATE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MONSTERBOOK_CHANGE_COVER;
    public static final /* synthetic */ /* enum */ SendPacketOpcode QUEST_TIP;
    public static final /* synthetic */ /* enum */ SendPacketOpcode NPC_TALK;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOW_FOREIGN_EFFECT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SEND_TITLE_BOX;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PVP_BLOCKED;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MECH_PORTAL;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PVP_ATTACK;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PYRAMID_RESULT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PVP_SCORE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CANCEL_FOREIGN_BUFF;
    public static final /* synthetic */ /* enum */ SendPacketOpcode REMOVE_EXTRACTOR;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FOLLOW_MESSAGE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PVP_ICEKNIGHT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CYGNUS_INTRO_ENABLE_UI;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CLOSE_UI;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CS_ACCOUNT_NAME;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CHAR_NAME_RESPONSE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PVP_POINTS;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PENDANT_SLOT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PET_NAMECHANGE;
    private static final /* synthetic */ SendPacketOpcode[] ALLATORIxDEMO;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SUMMON_HINT_MSG;
    public static final /* synthetic */ /* enum */ SendPacketOpcode NPC_ACTION;
    public static final /* synthetic */ /* enum */ SendPacketOpcode INDIVIDUAL_DEATH_COUNT_INFO;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SECONDPW_ERROR;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SMART_MOB_NOTICE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CAPTURE_RESET;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PET_CHAT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode REMOVE_NPC;
    public static final /* synthetic */ /* enum */ SendPacketOpcode REPORT_STATUS;
    public static final /* synthetic */ /* enum */ SendPacketOpcode JOB_UPDATE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode KEYMAP;
    public static final /* synthetic */ /* enum */ SendPacketOpcode GAME_POLL_REPLY;
    public static final /* synthetic */ /* enum */ SendPacketOpcode VICIOUS_HAMMER_CASH;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MOVE_PLATFORM;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MOVE_MONSTER;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PVP_COOL;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CONSULT_UPDATE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOW_STATUS_INFO;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MOVE_PET;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ARAN_COMBO_RECHARGE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FOLLOW_MSG;
    public static final /* synthetic */ /* enum */ SendPacketOpcode VEGA_SCROLL;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CURRENT_MAP_WARP;
    public static final /* synthetic */ /* enum */ SendPacketOpcode INCUBATOR_RESULT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOW_MAGNET;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ARAN_COMBO;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PET_UPDATE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CRAFT_COMPLETE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode TEMP_STATS_RESET;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PET_COMMAND;
    public static final /* synthetic */ /* enum */ SendPacketOpcode GM_EFFECT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode HIT_SNOWBALL;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CHATTEXT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PVP_RESULT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode OPEN_UI_OPTION;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ATTACK_FAMILIAR;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CREATE_ULTIMATE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FAMILY_RESULT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode LINK_SKILLS;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CS_OPERATION;
    public static final /* synthetic */ /* enum */ SendPacketOpcode TROCK_LOCATIONS;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CHOOSE_GENDER;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ANDROID_EMOTION;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SPAWN_SUMMON;
    public static final /* synthetic */ /* enum */ SendPacketOpcode GATHER_ITEM_RESULT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode NEW_PYRAMID_LEVEL;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FAMILY_SET_PRIVILEGE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode ITC_OPEN;
    public static final /* synthetic */ /* enum */ SendPacketOpcode HARVESTED;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SIDEKICK_OPERATION;
    public static final /* synthetic */ /* enum */ SendPacketOpcode NPC_SPECIAL_ACTION;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOP_LINK_RESULT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode APPLY_MONSTER_STATUS;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PLAYER_HINT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode WITCH_TOWER_SCORE_UPDATE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode REGISTER_FAMILIAR;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MONSTER_CARNIVAL_OBTAINED_CP;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FINISH_SORT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SHOW_HARVEST;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SERVER_IP;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PLAY_MOVIE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MECH_DOOR_SPAWN;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CS_RANDOM_RECOMMEND;
    public static final /* synthetic */ /* enum */ SendPacketOpcode REMOVE_DOOR;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SNOWBALL_MESSAGE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode FAMILY_JOIN_ACCEPTED;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MERCH_ITEM_STORE;
    public static final /* synthetic */ /* enum */ SendPacketOpcode PVP_SCOREBOARD;
    public static final /* synthetic */ /* enum */ SendPacketOpcode MOVE_ENV;
    public static final /* synthetic */ /* enum */ SendPacketOpcode DUEY;
    public static final /* synthetic */ /* enum */ SendPacketOpcode REMOVE_TALK_MONSTER;
    public static final /* synthetic */ /* enum */ SendPacketOpcode SPAWN_NPC_REQUEST_CONTROLLER;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CYGNUS_INTRO_DISABLE_UI;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CHARLIST;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CS_OPEN;
    public static final /* synthetic */ /* enum */ SendPacketOpcode UPDATE_INVENTORY_SLOT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode REACTOR_HIT;
    public static final /* synthetic */ /* enum */ SendPacketOpcode CLOCK;
    public static final /* synthetic */ /* enum */ SendPacketOpcode EXP_POTION;

    @Override
    public /* synthetic */ short getValue() {
        SendPacketOpcode a2;
        if (a2.d != -2 || GameSetConstants.LOG_PACKETS) {
            // empty if block
        }
        return a2.d;
    }

    /*
     * WARNING - Possible parameter corruption
     * WARNING - void declaration
     */
    private /* synthetic */ SendPacketOpcode(int n2) {
        void a2;
        void var2_-1;
        void var1_-1;
        SendPacketOpcode a3;
        SendPacketOpcode sendPacketOpcode = a3;
        sendPacketOpcode.d = (short)-2;
        sendPacketOpcode.d = (short)a2;
    }

    public static /* synthetic */ void checkValue() {
        int n2;
        SendPacketOpcode[] arrsendPacketOpcode = SendPacketOpcode.values();
        int n3 = arrsendPacketOpcode.length;
        int n4 = n2 = 0;
        while (n4 < n3) {
            SendPacketOpcode sendPacketOpcode = arrsendPacketOpcode[n2];
            if (sendPacketOpcode.getValue() < 1 || sendPacketOpcode.getValue() > 2457) {
                System.out.println(sendPacketOpcode.name() + " " + sendPacketOpcode.getValue());
            }
            n4 = ++n2;
        }
    }

    /*
     * Exception decompiling
     */
    public static final /* synthetic */ void reloadValues() {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [1[TRYBLOCK], 3[TRYBLOCK]], but top level block is 10[CATCHBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public static /* synthetic */ SendPacketOpcode[] values() {
        return (SendPacketOpcode[])ALLATORIxDEMO.clone();
    }

    public static /* synthetic */ String nameOf(int a2) {
        int n2;
        SendPacketOpcode[] arrsendPacketOpcode = SendPacketOpcode.values();
        int n3 = arrsendPacketOpcode.length;
        int n4 = n2 = 0;
        while (n4 < n3) {
            SendPacketOpcode sendPacketOpcode = arrsendPacketOpcode[n2];
            if (sendPacketOpcode.getValue() == a2) {
                return sendPacketOpcode.name();
            }
            n4 = ++n2;
        }
        return SkilledCommand.ALLATORIxDEMO("~5`5d,e");
    }

    public static /* synthetic */ {
        REMOVE_SPEAK_LIMIT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("vvi|rv{`tvex{\u007fm~mg"), 0, 4082);
        NORASHIELD_DAMAGE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("e4y:x3b>g?t?j6j<n"), 1, 4081);
        YUTOSHIELD_DAMAGE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("jqgk`lza\u007f`l`rircv"), 2, 1394);
        SPAWN_KITE_ERROR = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("({:|5t0b/n$n)y4y"), 3);
        DESTROY_KITE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`vwgv|}lozpv"), 4);
        SPAWN_KITE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("({:|5t0b/n"), 5);
        LOGIN_STATUS = new SendPacketOpcode(SkillType.ALLATORIxDEMO("h|czjlwgegq`"), 6, 0);
        SERVERLIST = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("(n)}>y7b(\u007f"), 7, 2);
        CHARLIST = new SendPacketOpcode(SkillType.ALLATORIxDEMO("g{eahzwg"), 8, 3);
        SERVER_IP = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("x>y-n)t2{"), 9, 4);
        CHAR_NAME_RESPONSE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("g{ea{}e~alvvwck}wv"), 10, 5);
        ADD_NEW_CHAR_ENTRY = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO(":o?t5n,t8c:y$n5\u007f)r"), 11, 6);
        DELETE_CHAR_RESPONSE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`vhvpv{plrvlvvwck}wv"), 12, 7);
        CHANGE_CHANNEL = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("8c:e<n$h3j5e>g"), 13, 8);
        PING = new SendPacketOpcode(SkillType.ALLATORIxDEMO("tzjt"), 14, 9);
        CS_USE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("8x$~(n"), 15, 10);
        CHANNEL_SELECTED = new SendPacketOpcode(SkillType.ALLATORIxDEMO("g{e}jvhlwvhvggaw"), 16, 13);
        RELOG_RESPONSE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO(")n7d<t)n({4e(n"), 17, 15);
        SECONDPW_ERROR = new SendPacketOpcode(SkillType.ALLATORIxDEMO("wvg|jwtd{vvaka"), 18, 16);
        CHOOSE_GENDER = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("h3d4x>t<n5o>y"), 19, 20);
        GENDER_SET = new SendPacketOpcode(SkillType.ALLATORIxDEMO("cvjwaa{`ag"), 20, 21);
        SERVERSTATUS = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("(n)}>y(\u007f:\u007f.x"), 21, 22);
        LAST_CONNECT_WORLD = new SendPacketOpcode(SkillType.ALLATORIxDEMO("hrwg{pk}jvgg{dkahw"), 22);
        MODIFY_INVENTORY_ITEM = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("f4o2m\"t2e-n5\u007f4y\"t2\u007f>f"), 23, 27);
        UPDATE_INVENTORY_SLOT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("ftwegalm}rvjgka}lw\u007fkg"), 24, 28);
        UPDATE_STATS = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO(".{?j/n$x/j/x"), 25, 29);
        GIVE_BUFF = new SendPacketOpcode(SkillType.ALLATORIxDEMO("tmealffbu"), 26, 30);
        CANCEL_BUFF = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("h:e8n7t9~=m"), 27, 31);
        TEMP_STATS = new SendPacketOpcode(SkillType.ALLATORIxDEMO("pvic{`prp`"), 28, 32);
        TEMP_STATS_RESET = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("/n6{$x/j/x$y>x>\u007f"), 29, 33);
        UPDATE_SKILLS = new SendPacketOpcode(SkillType.ALLATORIxDEMO("ftwegalwxm\u007fh`"), 30, 34);
        SKILL_USE_RESULT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("(`2g7t.x>t)n(~7\u007f"), 31, 35);
        FAME_RESPONSE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("ue~alvvwck}wv"), 32, 36);
        SHOW_STATUS_INFO = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("(c4|$x/j/~(t2e=d"), 33, 37);
        SHOW_NOTES = new SendPacketOpcode(SkillType.ALLATORIxDEMO("w{kd{}kga`"), 34, 38);
        MAP_TRANSFER_RESULT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("f:{$\u007f)j5x=n)t)n(~7\u007f"), 35, 39);
        ANTI_MACRO_RESULT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("rjgmlirgaklvvwfhg"), 36, 40);
        BOMB_LIE_DETECTOR = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("i4f9t7b>t?n/n8\u007f4y"), 37);
        CLAIM_RESULT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("g\u007fezilvvwfhg"), 38, 42);
        CLAIM_STATUS_CHANGED = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("8g:b6t(\u007f:\u007f.x$h3j5l>o"), 39, 44);
        UPDATE_MOUNT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("qc`rpv{~kfjg"), 40, 45);
        SHOW_QUEST_COMPLETION = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("x3d,t*~>x/t8d6{7n/b4e"), 41, 46);
        SEND_TITLE_BOX = new SendPacketOpcode(SkillType.ALLATORIxDEMO("wvjw{gmghv{qkk"), 42, 47);
        SEND_FISH_BOX = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("x>e?t=b(c$i4s"), 43, 48);
        USE_SKILL_BOOK = new SendPacketOpcode(SkillType.ALLATORIxDEMO("q`alwxm\u007fhlf|kx"), 44, 49);
        GATHER_ITEM_RESULT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("<j/c>y$b/n6t)n(~7\u007f"), 45, 50);
        SORT_ITEM_RESULT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("w|vg{zpvilvvwfhg"), 46, 51);
        CHAR_INFO = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("h3j)t2e=d"), 47, 54);
        PARTY_OPERATION = new SendPacketOpcode(SkillType.ALLATORIxDEMO("ceapj{|tvvrpzk}"), 48, 55);
        BUDDYLIST = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("i.o?r7b(\u007f"), 49, 56);
        GUILD_OPERATION = new SendPacketOpcode(SkillType.ALLATORIxDEMO("tqzhw{|tvvrpzk}"), 50, 58);
        ALLIANCE_OPERATION = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO(":g7b:e8n$d+n)j/b4e"), 51, 59);
        SPAWN_PORTAL = new SendPacketOpcode(SkillType.ALLATORIxDEMO("wcedjlt|vge\u007f"), 52, 60);
        SERVERMESSAGE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("x>y-n)f>x(j<n"), 53, 61);
        INCUBATOR_RESULT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("m}gffrp|vlvvwfhg"), 54, 62);
        PIGMI_REWARD = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("+b<f2t)n,j)o"), 55, 65534);
        SHOP_SCANNER_RESULT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`l|tlwpe}jvvlvvwfhg"), 56, 63);
        SHOP_LINK_RESULT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("(c4{$g2e0t)n(~7\u007f"), 57, 64);
        MARRIAGE_REQUEST = new SendPacketOpcode(SkillType.ALLATORIxDEMO("irvamrcv{aabqvwg"), 58, 65);
        MARRIAGE_RESULT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("f:y)b:l>t)n(~7\u007f"), 59, 66);
        WEDDING_GIFT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("sv`wm}clczbg"), 60, 67);
        YELLOW_CHAT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("r>g7d,t8c:\u007f"), 61, 70);
        SET_POTION_DISCOUNT_RATE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("wvplt|pzk}{wm`g|q}plvrpv"), 62, 71);
        CATCH_MOB = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("h:\u007f8c$f4i"), 63, 72);
        IMITATED_NPC_RESULT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("zizprpv`ljcglvvwfhg"), 64, 74);
        PLAYER_NPC = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("+g:r>y$e+h"), 65, 75);
        DISABLE_NPC = new SendPacketOpcode(SkillType.ALLATORIxDEMO("wm`eqhv{}tp"), 66, 76);
        MONSTERBOOK_ADD = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("f4e(\u007f>y9d4`$j?o"), 67, 77);
        MONSTERBOOK_CHANGE_COVER = new SendPacketOpcode(SkillType.ALLATORIxDEMO("i|j`pvvqk|olg{e}cv{pkeaa"), 68, 78);
        HOUR_CHANGED = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("3d.y$h3j5l>o"), 69, 79);
        MINIMAP_ON_OFF = new SendPacketOpcode(SkillType.ALLATORIxDEMO("izjzirtlk}{|bu"), 70, 80);
        CONSULT_UPDATE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("8d5x.g/t.{?j/n"), 71, 81);
        CLASS_COMPETITION_AUTHKEY_UPDATE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("g\u007fe`wlg|icagmgm|jlefp{ov}lqc`rpv"), 72, 82);
        WEB_BOARD_AUTHKEY_UPDATE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO(",n9t9d:y?t:~/c0n\"t.{?j/n"), 73, 83);
        SESSION_VALUE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`a`wzk}{ee\u007fqv"), 74, 84);
        BONUS_EXP_CHANGED = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("i4e.x$n#{$h3j5l>o"), 75, 85);
        FAMILY_CHART_RESULT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("ue~m\u007f}lg{eaplvvwfhg"), 76, 86);
        FAMILY_INFO_RESULT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("=j6b7r$b5m4t)n(~7\u007f"), 77, 87);
        FAMILY_RESULT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("ue~m\u007f}lvvwfhg"), 78, 88);
        FAMILY_JOIN_REQUEST = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("m:f2g\"t1d2e$y>z.n(\u007f"), 79, 89);
        FAMILY_JOIN_REQUEST_RESULT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("brizhj{ykzjlvvufa`plvvwfhg"), 80, 90);
        FAMILY_JOIN_ACCEPTED = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("=j6b7r$a4b5t:h8n+\u007f>o"), 81, 91);
        FAMILY_PRIVILEGE_LIST = new SendPacketOpcode(SkillType.ALLATORIxDEMO("ue~m\u007f}ltamem\u007fatalhzwg"), 82, 92);
        FAMILY_FAMOUS_POINT_INC_RESULT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("=j6b7r$m:f4~(t+d2e/t2e8t)n(~7\u007f"), 83, 93);
        FAMILY_NOTIFY_LOGIN_OR_LOGOUT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("ue~m\u007f}lj|pzbj{\u007fktm}{|vlh|c|qg"), 84, 94);
        FAMILY_SET_PRIVILEGE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("=j6b7r$x>\u007f${)b-b7n<n"), 85, 95);
        FAMILY_SUMMON_REQUEST = new SendPacketOpcode(SkillType.ALLATORIxDEMO("ue~m\u007f}lwfi~k}{aabqvwg"), 86, 96);
        LEVEL_UPDATE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("7n-n7t.{?j/n"), 87, 97);
        MARRIAGE_UPDATE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("~eavzetalqc`rpv"), 88, 98);
        JOB_UPDATE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("1d9t.{?j/n"), 89, 99);
        PENDANT_SLOT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("tvjwe}plw\u007fkg"), 90, 100);
        TOP_MSG = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("\u007f4{$f(l"), 91, 101);
        MAPLE_ADMIN_MSG = new SendPacketOpcode(SkillType.ALLATORIxDEMO("~echv{r`~m}{~wt"), 92, 102);
        BBS_OPERATION = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("i9x$d+n)j/b4e"), 93, 104);
        FISHING_BOARD_UPDATE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("bzw{m}clf|ea`lqc`rpv"), 94, 105);
        AVATAR_MEGA = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("j-j/j)t6n<j"), 95, 109);
        TREASURE_BOX = new SendPacketOpcode(SkillType.ALLATORIxDEMO("paarwfvv{qkk"), 96, 113);
        SKILL_MACRO = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("x0b7g$f:h)d"), 97, 122);
        SET_FIELD = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`ag{umvhw"), 98, 123);
        ITC_OPEN = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("2\u007f8t4{>e"), 99, 124);
        CS_OPEN = new SendPacketOpcode(SkillType.ALLATORIxDEMO("pwlkca}"), 100, 125);
        SET_MAP_OBJECT_VISIBLE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("(n/t6j+t4i1n8\u007f$}2x2i7n"), 101, 127);
        CLEAR_BACK_EFFECT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("phvea{qepolaubvgg"), 102, 128);
        MAP_BLOCKED = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("f:{$i7d8`>o"), 103, 129);
        SERVER_BLOCKED = new SendPacketOpcode(SkillType.ALLATORIxDEMO("wvveaa{qh|gxaw"), 104, 130);
        SHOW_EQUIP_EFFECT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("x3d,t>z.b+t>m=n8\u007f"), 105, 131);
        MULTICHAT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("~q\u007fpzg{eg"), 106, 132);
        WHISPER = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("|3b({>y"), 107, 133);
        SPOUSE_CHAT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`t|q`alg{eg"), 108, 134);
        BOSS_ENV = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("9d(x$n5}"), 109, 135);
        MOVE_ENV = new SendPacketOpcode(SkillType.ALLATORIxDEMO("i|rv{vje"), 110, 136);
        CASH_SONG = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("h:x3t(d5l"), 111, 137);
        GM_EFFECT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("tilaubvgg"), 112, 138);
        OX_QUIZ = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("d#t*~2q"), 113, 139);
        GMEVENT_INSTRUCTIONS = new SendPacketOpcode(SkillType.ALLATORIxDEMO("c~aea}plm}wgvfggm|j`"), 114, 140);
        CLOCK = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("h7d8`"), 115, 141);
        BOAT_EFFECT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("qkrplaubvgg"), 116, 142);
        BOAT_PACKET = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("i4j/t+j8`>\u007f"), 117, 143);
        STOP_CLOCK = new SendPacketOpcode(SkillType.ALLATORIxDEMO("wgkc{ph|gx"), 118, 147);
        PYRAMID_UPDATE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("+r)j6b?t.{?j/n"), 119, 150);
        PYRAMID_RESULT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("tjvriz`lvvwfhg"), 120, 151);
        MOVE_PLATFORM = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("f4}>t+g:\u007f=d)f"), 121, 150);
        SPAWN_PLAYER = new SendPacketOpcode(SkillType.ALLATORIxDEMO("wcedjlt\u007fejaa"), 122, 153);
        REMOVE_PLAYER_FROM_MAP = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO(")n6d-n${7j\"n)t=y4f$f:{"), 123, 154);
        CHATTEXT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("g{egpv|g"), 124, 155);
        CHALKBOARD = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("8c:g0i4j)o"), 125, 156);
        UPDATE_CHAR_BOX = new SendPacketOpcode(SkillType.ALLATORIxDEMO("ftwegalg{ea{qkk"), 126, 157);
        SHOW_CONSUME_EFFECT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("x3d,t8d5x.f>t>m=n8\u007f"), 127, 158);
        SHOW_SCROLL_EFFECT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("w{kd{`gak\u007fhlaubvgg"), 128, 159);
        FISHING_CAUGHT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("=b(c2e<t8j.l3\u007f"), 129, 160);
        SPAWN_PET = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`trs}{cag"), 130, 162);
        MOVE_PET = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("6d-n${>\u007f"), 131, 165);
        PET_CHAT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("tvplg{eg"), 132, 166);
        PET_NAMECHANGE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("+n/t5j6n8c:e<n"), 133, 167);
        PET_LOAD_EXCEPTIONLIST = new SendPacketOpcode(SkillType.ALLATORIxDEMO("tvplh|ew{v|pacpzk}hzwg"), 134, 168);
        PET_COMMAND = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("{>\u007f$h4f6j5o"), 135, 169);
        SPAWN_SUMMON = new SendPacketOpcode(SkillType.ALLATORIxDEMO("wcedjlwfi~k}"), 136, 170);
        REMOVE_SUMMON = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("y>f4}>t(~6f4e"), 137, 171);
        SUMMON_ATTACK = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`q~i|jlegprgx"), 138, 173);
        MOVE_SUMMON = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("f4}>t(~6f4e"), 139, 174);
        DAMAGE_SUMMON = new SendPacketOpcode(SkillType.ALLATORIxDEMO("we~etalwfi~k}"), 140, 175);
        MOVE_PLAYER = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("f4}>t+g:r>y"), 141, 177);
        CLOSE_RANGE_ATTACK = new SendPacketOpcode(SkillType.ALLATORIxDEMO("g\u007fk`alvrjtalegprgx"), 142, 178);
        RANGED_ATTACK = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("y:e<n?t:\u007f/j8`"), 143, 179);
        MAGIC_ATTACK = new SendPacketOpcode(SkillType.ALLATORIxDEMO("irczglegprgx"), 144, 180);
        ENERGY_ATTACK = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("n5n)l\"t:\u007f/j8`"), 145, 181);
        SKILL_EFFECT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("wxm\u007fhlaubvgg"), 146, 182);
        CANCEL_SKILL_EFFECT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("h:e8n7t(`2g7t>m=n8\u007f"), 147, 183);
        DAMAGE_PLAYER = new SendPacketOpcode(SkillType.ALLATORIxDEMO("we~etalt\u007fejaa"), 148, 184);
        FACIAL_EXPRESSION = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("m:h2j7t>s+y>x(b4e"), 149, 185);
        FACIAL_EXPRESSION_LOCAL = new SendPacketOpcode(SkillType.ALLATORIxDEMO("uepmrhlaktaa`wzk}{\u007fkpe\u007f"), 150);
        SHOW_ITEM_EFFECT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("(c4|$b/n6t>m=n8\u007f"), 151, 186);
        AUTO_LOGIN = new SendPacketOpcode(SkillType.ALLATORIxDEMO("efp|{\u007fktm}"), 152, 187);
        SHOW_CHAIR = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("(c4|$h3j2y"), 153, 189);
        UPDATE_CHAR_LOOK = new SendPacketOpcode(SkillType.ALLATORIxDEMO("qc`rpv{plrvlh|kx"), 154, 190);
        SHOW_FOREIGN_EFFECT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("x3d,t=d)n2l5t>m=n8\u007f"), 155, 191);
        GIVE_FOREIGN_BUFF = new SendPacketOpcode(SkillType.ALLATORIxDEMO("tmealb|vvmtjlffbu"), 156, 192);
        CANCEL_FOREIGN_BUFF = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("h:e8n7t=d)n2l5t9~=m"), 157, 193);
        UPDATE_PARTYMEMBER_HP = new SendPacketOpcode(SkillType.ALLATORIxDEMO("ftwegaltrvg}~a~fvvllc"), 158, 194);
        GUILD_NAME_CHANGED = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("<~2g?t5j6n$h3j5l>o"), 159, 195);
        GUILD_MARK_CHANGED = new SendPacketOpcode(SkillType.ALLATORIxDEMO("cfm\u007f`lirvx{plrjtaw"), 160, 196);
        THROW_GRENADE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("\u007f3y4|$l)n5j?n"), 161, 197);
        CANCEL_CHAIR = new SendPacketOpcode(SkillType.ALLATORIxDEMO("grjpa\u007f{plrma"), 162, 198);
        SHOW_USER_LOCAL_EFFECT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("(c4|$~(n)t7d8j7t>m=n8\u007f"), 163, 199);
        CURRENT_MAP_WARP = new SendPacketOpcode(SkillType.ALLATORIxDEMO("gfvaa}plirtlsrvc"), 164, 200);
        MESOBAG_SUCCESS = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("f>x4i:l$x.h8n(x"), 165, 202);
        MESOBAG_FAILURE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("~a`kqet{uezhfvv"), 166, 203);
        UPDATE_QUEST_INFO = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("~+o:\u007f>t*~>x/t2e=d"), 167, 204);
        PET_FLAG_CHANGE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("cag{uhrclg{e}cv"), 168, 206);
        PLAYER_HINT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("{7j\"n)t3b5\u007f"), 169, 207);
        OPEN_UI_OPTION = new SendPacketOpcode(SkillType.ALLATORIxDEMO("kca}{fmlkcpzk}"), 170, 213);
        CYGNUS_INTRO_LOCK = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("h\"l5~(t2e/y4t7d8`"), 171, 214);
        CYGNUS_INTRO_DISABLE_UI = new SendPacketOpcode(SkillType.ALLATORIxDEMO("p}tjfwlm}pakl`zwrf\u007falqz"), 172, 215);
        CS_UPDATE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("h(t.{?j/n"), 173);
        CS_OPERATION = new SendPacketOpcode(SkillType.ALLATORIxDEMO("g`{|tvvrpzk}"), 174);
        SPAWN_NPC = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("x+j,e$e+h"), 175, 249);
        REMOVE_NPC = new SendPacketOpcode(SkillType.ALLATORIxDEMO("vvi|rv{}tp"), 176, 250);
        SPAWN_NPC_REQUEST_CONTROLLER = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("({:|5t5{8t)n*~>x/t8d5\u007f)d7g>y"), 177, 251);
        SPAWN_MONSTER = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`trs}{~k}wgaa"), 178);
        SPAWN_MONSTER_CONTROL = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("x+j,e$f4e(\u007f>y$h4e/y4g"), 179);
        MOVE_MONSTER_RESPONSE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("~keali|j`pvvlvvwck}wv"), 180);
        KILL_MONSTER = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("0b7g$f4e(\u007f>y"), 181);
        DROP_ITEM_FROM_MAPOBJECT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`akc{zpvilbak~{~eckqnvgg"), 182);
        MOVE_MONSTER = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("6d-n$f4e(\u007f>y"), 183);
        OPEN_NPC_SHOP = new SendPacketOpcode(SkillType.ALLATORIxDEMO("|tvjljcglw{kc"), 184);
        CONFIRM_SHOP_TRANSACTION = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("8d5m2y6t(c4{$\u007f)j5x:h/b4e"), 185);
        OPEN_STORAGE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("kca}{`p|vrcv"), 186);
        REMOVE_ITEM_FROM_MAP = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO(")n6d-n$b/n6t=y4f$f:{"), 187);
        PLAYER_INTERACTION = new SendPacketOpcode(SkillType.ALLATORIxDEMO("t\u007fejaa{zjgaaeppzk}"), 188);
        NPC_TALK = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("5{8t/j7`"), 189);
        KEYMAP = new SendPacketOpcode(SkillType.ALLATORIxDEMO("ov}~ec"), 190);
        SHOW_MONSTER_HP = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("x3d,t6d5x/n)t3{"), 191);
        APPLY_MONSTER_STATUS = new SendPacketOpcode(SkillType.ALLATORIxDEMO("ect\u007f}li|j`pvvlwgegq`"), 192);
        CANCEL_MONSTER_STATUS = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("h:e8n7t6d5x/n)t(\u007f:\u007f.x"), 193);
        SPAWN_DOOR = new SendPacketOpcode(SkillType.ALLATORIxDEMO("wcedjl`|ka"), 194);
        REMOVE_DOOR = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("y>f4}>t?d4y"), 195);
        SPAWN_MIST = new SendPacketOpcode(SkillType.ALLATORIxDEMO("wcedjlizwg"), 196);
        REMOVE_MIST = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("y>f4}>t6b(\u007f"), 197);
        DAMAGE_MONSTER = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`rircv{~k}wgaa"), 198);
        REACTOR_SPAWN = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("y>j8\u007f4y$x+j,e"), 199);
        REACTOR_HIT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("aarggka{{mg"), 200);
        REACTOR_DESTROY = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("y>j8\u007f4y$o>x/y4r"), 201);
        EARN_TITLE_MSG = new SendPacketOpcode(SkillType.ALLATORIxDEMO("arv}{gmghv{~wt"), 202);
        SHOW_MAGNET = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("x3d,t6j<e>\u007f"), 203);
        MERCH_ITEM_MSG = new SendPacketOpcode(SkillType.ALLATORIxDEMO("ivvpllmga~{~wt"), 204);
        MERCH_ITEM_STORE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("6n)h3t2\u007f>f$x/d)n"), 205);
        MESSENGER = new SendPacketOpcode(SkillType.ALLATORIxDEMO("~a`wvjtaa"), 206);
        NPC_ACTION = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("5{8t:h/b4e"), 207);
        COOLDOWN = new SendPacketOpcode(SkillType.ALLATORIxDEMO("g|k\u007f`|s}"), 208);
        SUMMON_HINT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("x.f6d5t3b5\u007f"), 209);
        SUMMON_HINT_MSG = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`q~i|jllzjg{~wt"), 210);
        SUMMON_SKILL = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("(~6f4e$x0b7g"), 211);
        ARIANT_SCORE_UPDATE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("rvze}plwpkaalqc`rpv"), 212);
        CATCH_MONSTER = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("h:\u007f8c$f4e(\u007f>y"), 213);
        ARIANT_SCOREBOARD = new SendPacketOpcode(SkillType.ALLATORIxDEMO("rvze}plwpkaaqkrvw"), 214);
        WITCH_TOWER_SCORE_UPDATE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO(",b/h3t/d,n)t(h4y>t.{?j/n"), 215);
        DUEY = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`faj"), 216);
        MONSTER_CARNIVAL_START = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("6d5x/n)t8j)e2}:g$x/j)\u007f"), 217);
        MONSTER_CARNIVAL_OBTAINED_CP = new SendPacketOpcode(SkillType.ALLATORIxDEMO("i|j`pvvlgrv}mee\u007f{|fgezjv`lgc"), 218);
        MONSTER_CARNIVAL_PARTY_CP = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("f4e(\u007f>y$h:y5b-j7t+j)\u007f\"t8{"), 219);
        MONSTER_CARNIVAL_SUMMON = new SendPacketOpcode(SkillType.ALLATORIxDEMO("~k}wgaa{peajzrrhlwfi~k}"), 220);
        MONSTER_CARNIVAL_DIED = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("f4e(\u007f>y$h:y5b-j7t?b>o"), 221);
        SPAWN_HIRED_MERCHANT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("wcedjllzvv`livvplrjg"), 222);
        UPDATE_HIRED_MERCHANT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("~+o:\u007f>t3b)n?t6n)h3j5\u007f"), 223);
        DESTROY_HIRED_MERCHANT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`vwgv|}llzvv`livvplrjg"), 224);
        FAIRY_PEND_MSG = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("=j2y\"t+n5o$f(l"), 225);
        VICIOUS_HAMMER_CASH = new SendPacketOpcode(SkillType.ALLATORIxDEMO("empm|q`{{e~ivvlgrw{"), 226);
        ROLL_SNOWBALL = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("y4g7t(e4|9j7g"), 227);
        HIT_SNOWBALL = new SendPacketOpcode(SkillType.ALLATORIxDEMO("lzplw}kdfrh\u007f"), 228);
        SNOWBALL_MESSAGE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("(e4|9j7g$f>x(j<n"), 229);
        LEFT_KNOCK_BACK = new SendPacketOpcode(SkillType.ALLATORIxDEMO("\u007fauplo}kpolfrgx"), 230);
        HIT_COCONUT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("c2\u007f$h4h4e.\u007f"), 231);
        COCONUT_SCORE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("pkpk}qg{`g|vv"), 232);
        HORNTAIL_SHRINE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("c4y5\u007f:b7t(c)b5n"), 233);
        DRAGON_MOVE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("wvrc|jli|rv"), 234);
        SHOW_DRAGON_GLIDE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("x3d,t?y:l4e$l7b?n"), 235);
        DRAGON_REMOVE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("wvrc|jlvvi|rv"), 236);
        DRAGON_SPAWN = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("?y:l4e$x+j,e"), 237);
        ARAN_COMBO = new SendPacketOpcode(SkillType.ALLATORIxDEMO("eae}{pk~f|"), 238);
        GET_MTS_TOKENS = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("<n/t6\u007f(t/d0n5x"), 239);
        MTS_OPERATION = new SendPacketOpcode(SkillType.ALLATORIxDEMO("~p`{|tvvrpzk}"), 240);
        SHOW_POTENTIAL_EFFECT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("x3d,t+d/n5\u007f2j7t>m=n8\u007f"), 241);
        SHOW_POTENTIAL_RESET = new SendPacketOpcode(SkillType.ALLATORIxDEMO("w{kd{ckga}pze\u007f{aa`ag"), 242);
        CHAOS_ZAKUM_SHRINE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("8c:d(t!j0~6t(c)b5n"), 243);
        CHAOS_HORNTAIL_SHRINE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("plrk`{{kajgezhlw{vzjv"), 244);
        GAME_POLL_REPLY = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("l:f>t+d7g$y>{7r"), 245);
        CS_XMAS_SURPRISE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("g`{kirwlwfvcvzwv"), 246);
        FOLLOW_REQUEST = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("=d7g4|$y>z.n(\u007f"), 247);
        FOLLOW_EFFECT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("uk\u007fh|slaubvgg"), 248);
        FOLLOW_MOVE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("m4g7d,t6d-n"), 249);
        FOLLOW_MSG = new SendPacketOpcode(SkillType.ALLATORIxDEMO("b|h\u007fkd{~wt"), 250);
        FOLLOW_MESSAGE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("=d7g4|$f>x(j<n"), 251);
        TALK_MONSTER = new SendPacketOpcode(SkillType.ALLATORIxDEMO("prhx{~k}wgaa"), 252);
        REMOVE_TALK_MONSTER = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("y>f4}>t/j7`$f4e(\u007f>y"), 253);
        TIME_BOMB_ATTACK = new SendPacketOpcode(SkillType.ALLATORIxDEMO("pziv{qk~flegprgx"), 254);
        MONSTER_PROPERTIES = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("6d5x/n)t+y4{>y/b>x"), 255);
        PARTY_VALUE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("ceapj{ee\u007fqv"), 256);
        MAP_VALUE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("f:{$}:g.n"), 257);
        FIELD_VALUE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("umvhw{ee\u007fqv"), 258);
        ENGLISH_QUIZ = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO(">e<g2x3t*~2q"), 259);
        RPS_GAME = new SendPacketOpcode(SkillType.ALLATORIxDEMO("vcwlcriv"), 260);
        UPDATE_BEANS = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO(".{?j/n$i>j5x"), 261);
        DONATE_BEANS = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`|jrpv{qarj`"), 262);
        PACHINKO_MARQUEE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("+j8c2e0d$f:y*~>n"), 263);
        PACHINKO_SHOW = new SendPacketOpcode(SkillType.ALLATORIxDEMO("ceplzjxklw{kd"), 264);
        PACHINKO_ACT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("+j8c2e0d$j8\u007f"), 265);
        CS_ACCOUNT_NAME = new SendPacketOpcode(SkillType.ALLATORIxDEMO("pwlepg|q}pljriv"), 266);
        CS_WEB = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("8x$|>i"), 267);
        PET_AUTO_HP = new SendPacketOpcode(SkillType.ALLATORIxDEMO("cag{rqgkllc"), 268);
        PET_AUTO_MP = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("{>\u007f$j.\u007f4t6{"), 269);
        VEGA_SCROLL = new SendPacketOpcode(SkillType.ALLATORIxDEMO("eatelwpv|h\u007f"), 270);
        LOGIN_AUTH = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("7d<b5t:~/c"), 271);
        UNKNOWN = new SendPacketOpcode(SkillType.ALLATORIxDEMO("fjxj|s}"), 272);
        EXPEDITION_OPERATION = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO(">s+n?b/b4e$d+n)j/b4e"), 273);
        SIDEKICK_OPERATION = new SendPacketOpcode(SkillType.ALLATORIxDEMO("wz`vozgx{|tvvrpzk}"), 274);
        REMOVE_EXTRACTOR = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO(")n6d-n$n#\u007f)j8\u007f4y"), 275);
        SPAWN_EXTRACTOR = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`trs}{v|gvrggka"), 276);
        QUICK_SLOT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("*~2h0t(g4\u007f"), 277);
        ANDROID_SPAWN = new SendPacketOpcode(SkillType.ALLATORIxDEMO("rjwv|mw{`trs}"), 278);
        ANDROID_EMOTION = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("j5o)d2o$n6d/b4e"), 279);
        DIRECTION_INFO = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`zvvggm|jlm}b|"), 280);
        CYGNUS_INTRO_ENABLE_UI = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("8r<e.x$b5\u007f)d$n5j9g>t.b"), 281);
        DIRECTION_STATUS = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`zvvggm|jlwgegq`"), 282);
        PLAY_MOVIE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("+g:r$f4}2n"), 283);
        PVP_INFO = new SendPacketOpcode(SkillType.ALLATORIxDEMO("tetlm}b|"), 284);
        PVP_SCOREBOARD = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("+}+t(h4y>i4j)o"), 285);
        PVP_RESULT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("tetlvvwfhg"), 286);
        PVP_ENABLED = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("{-{$n5j9g>o"), 287);
        PVP_MODE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("tetli|`v"), 288);
        PVP_TYPE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("+}+t/r+n"), 289);
        PVP_TEAM = new SendPacketOpcode(SkillType.ALLATORIxDEMO("tetlpve~"), 290);
        PVP_SCORE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("{-{$x8d)n"), 291);
        PVP_KILLED = new SendPacketOpcode(SkillType.ALLATORIxDEMO("tetlozh\u007faw"), 292);
        PVP_SUMMON = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("+}+t(~6f4e"), 293);
        PVP_ATTACK = new SendPacketOpcode(SkillType.ALLATORIxDEMO("tetlegprgx"), 294);
        PVP_POINTS = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("+}+t+d2e/x"), 295);
        PVP_HP = new SendPacketOpcode(SkillType.ALLATORIxDEMO("tetllc"), 296);
        PVP_MIST = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("+}+t6b(\u007f"), 297);
        PVP_ICEKNIGHT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("crc{zgvo}mtlg"), 298);
        PVP_COOL = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("+}+t8d4g"), 299);
        PVP_ICEGAGE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("crc{zgvcrcv"), 300);
        PVP_TRANSFORM = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("{-{$\u007f)j5x=d)f"), 301);
        ARAN_COMBO_RECHARGE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("rvrjlg|iqklvvg{eacv"), 302);
        DRAGON_BLINK = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("?y:l4e$i7b5`"), 303);
        TESLA_TRIANGLE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("pvw\u007felpamrjthv"), 304);
        CS_INTO = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("h(t2e/d"), 305);
        UPDATE_JAGUAR = new SendPacketOpcode(SkillType.ALLATORIxDEMO("ftwegalnrcfea"), 306);
        SHOW_SPECIAL_ATTACK = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("x3d,t({>h2j7t:\u007f/j8`"), 307);
        SPOUSE_MESSAGE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("wckfwv{~a`wrcv"), 308);
        MID_MSG = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("f2o$f(l"), 309);
        MECH_DOOR_SPAWN = new SendPacketOpcode(SkillType.ALLATORIxDEMO("~apll`|ka{`trs}"), 310);
        MECH_DOOR_REMOVE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("6n8c$o4d)t)n6d-n"), 311);
        PLAYER_DAMAGED = new SendPacketOpcode(SkillType.ALLATORIxDEMO("t\u007fejaa{we~etaw"), 312);
        MECH_PORTAL = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("f>h3t+d)\u007f:g"), 313);
        UPDATE_FAMILIAR = new SendPacketOpcode(SkillType.ALLATORIxDEMO("ftwegalbrizhzea"), 314);
        SPAWN_FAMILIAR = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("({:|5t=j6b7b:y"), 315);
        MOVE_FAMILIAR = new SendPacketOpcode(SkillType.ALLATORIxDEMO("~kealbrizhzea"), 316);
        PVP_BLOCKED = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("{-{$i7d8`>o"), 317);
        CLEAR_MID_MSG = new SendPacketOpcode(SkillType.ALLATORIxDEMO("phvea{~mw{~wt"), 318);
        GAIN_FORCE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("<j2e$m4y8n"), 319);
        CAPTURE_POSITION = new SendPacketOpcode(SkillType.ALLATORIxDEMO("grtgqaalt|wzpzk}"), 320);
        CAPTURE_RESET = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("h:{/~)n$y>x>\u007f"), 321);
        SHOW_MAGNIFY_GLASS = new SendPacketOpcode(SkillType.ALLATORIxDEMO("w{kd{~etjzbj{thrw`"), 322);
        CRAFT_EFFECT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("8y:m/t>m=n8\u007f"), 323);
        CRAFT_COMPLETE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("gaeuplg|ichvpv"), 324);
        SHOW_HARVEST = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("(c4|$c:y-n(\u007f"), 325);
        HARVESTED = new SendPacketOpcode(SkillType.ALLATORIxDEMO("{earvwgaw"), 326);
        ANDROID_MOVE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO(":e?y4b?t6d-n"), 327);
        ANDROID_UPDATE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("e}`akz`lqc`rpv"), 328);
        ANDROID_DEACTIVATED = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("j5o)d2o$o>j8\u007f2}:\u007f>o"), 329);
        HARVEST_MESSAGE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("{earvwg{~a`wrcv"), 330);
        OPEN_BAG = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("4{>e$i:l"), 331);
        OPEN_UI = new SendPacketOpcode(SkillType.ALLATORIxDEMO("|tvjlqz"), 332);
        LOAD_TEAM = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("g4j?t/n:f"), 333);
        ATTACK_FAMILIAR = new SendPacketOpcode(SkillType.ALLATORIxDEMO("rpgepolbrizhzea"), 334);
        TOUCH_FAMILIAR = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("/d.h3t=j6b7b:y"), 335);
        REGISTER_FAMILIAR = new SendPacketOpcode(SkillType.ALLATORIxDEMO("aatm`pvvlbrizhzea"), 336);
        PET_UPDATE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("+n/t.{?j/n"), 337);
        LIE_DETECTOR = new SendPacketOpcode(SkillType.ALLATORIxDEMO("hzal`vpvggka"), 338);
        ULTIMATE_EXPLORER = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("~7\u007f2f:\u007f>t>s+g4y>y"), 339);
        CREATE_ULTIMATE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("pvvegalq\u007fpzirpv"), 340);
        PROFESSION_INFO = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("{)d=n(x2d5t2e=d"), 341);
        ITEM_POT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("mga~{ckg"), 342);
        QUEST_HELPER = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("*~>x/t3n7{>y"), 343);
        PAMS_SONG = new SendPacketOpcode(SkillType.ALLATORIxDEMO("ce~wlw|jt"), 344);
        PAMS_SONG_UI = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("+j6x$x4e<t.b"), 345);
        CHAIR_EXP_RESET = new SendPacketOpcode(SkillType.ALLATORIxDEMO("plrma{v|c{aa`ag"), 346);
        SHOW_PQ_REWARD = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("(c4|${*t)n,j)o"), 347);
        CHINESE_PVP_RANKING = new SendPacketOpcode(SkillType.ALLATORIxDEMO("plzjvwv{crc{ae}ozjt"), 348);
        FISHING_KING_RANKING = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("=b(c2e<t0b5l$y:e0b5l"), 349);
        SELECT_EXP_CHAIR = new SendPacketOpcode(SkillType.ALLATORIxDEMO("wvhvgg{v|c{plrma"), 350);
        MAP_EFFECT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("6j+t>m=n8\u007f"), 351);
        COMESOON_OPEN = new SendPacketOpcode(SkillType.ALLATORIxDEMO("pk~a`k|jlkca}"), 352);
        NPC_SPECIAL_ACTION = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("5{8t({>h2j7t:h/b4e"), 353);
        NPC_SCRIPTABLEUP = new SendPacketOpcode(SkillType.ALLATORIxDEMO("jcglwpvztgeqhvqc"), 354);
        MOVE_SCREEN = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("f4}>t(h)n>e"), 355);
        SET_BACK_EFFECT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`ag{qepolaubvgg"), 356);
        CS_RANDOM_RECOMMEND = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("h(t)j5o4f$y>h4f6n5o"), 357);
        ANYWHERE_DOOR = new SendPacketOpcode(SkillType.ALLATORIxDEMO("rjjs{aaal`|ka"), 358);
        ANYWHERE_DOOR_ERROR = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("j5r,c>y>t?d4y$n)y4y"), 359);
        TROCK_LOCATIONS = new SendPacketOpcode(SkillType.ALLATORIxDEMO("gv|gx{\u007fkpegm|j`"), 360);
        OWL_RESULT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("4|7t)n(~7\u007f"), 361);
        SUMMON_ITEM_UNAVAILABLE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`q~i|jlmga~{fjrrrm\u007feqhv"), 362);
        DIRECTION_FACIAL_EXPRESSION = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("o2y>h/b4e$m:h2j7t>s+y>x(b4e"), 363);
        VICIOUS_HAMMER_USE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("rzgzkfwllri~aa{fwv"), 364);
        FINISH_SORT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("m2e2x3t(d)\u007f"), 365);
        FINISH_GATHER = new SendPacketOpcode(SkillType.ALLATORIxDEMO("um}m`llcrp{aa"), 366);
        UPDATE_HONOUR = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("~+o:\u007f>t3d5d.y"), 367);
        ENABLE_INNER_ABILITY = new SendPacketOpcode(SkillType.ALLATORIxDEMO("a}eqhv{zj}aa{rfzhzpj"), 368);
        DISABLE_INNER_ABILITY = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("o2x:i7n$b5e>y$j9b7b/r"), 369);
        UPDATE_CORE_AURA = new SendPacketOpcode(SkillType.ALLATORIxDEMO("qc`rpv{pkaalefvr"), 370);
        UPDATE_STOLEN_SKILLS = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO(".{?j/n$x/d7n5t(`2g7x"), 371);
        REPLACE_SKILLS = new SendPacketOpcode(SkillType.ALLATORIxDEMO("vvt\u007fepalwxm\u007fh`"), 372);
        TARGET_SKILL = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("/j)l>\u007f$x0b7g"), 373);
        PHANTOM_CARD = new SendPacketOpcode(SkillType.ALLATORIxDEMO("t{e}p|ilgrvw"), 374);
        UPDATE_FRINED_POINTS = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO(".{?j/n$m)b5n?t+d2e/x"), 375);
        DISPLAY_INFO = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`zwchr}lm}b|"), 376);
        SHOW_TITLE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("(c4|$\u007f2\u007f7n"), 377);
        ANGELIC_CHANGE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("e}cvhzglg{e}cv"), 378);
        QUEST_TIP = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("z.n(\u007f$\u007f2{"), 379);
        MOB_SKILL_DELAY = new SendPacketOpcode(SkillType.ALLATORIxDEMO("~kq{`ozh\u007f{wa\u007fej"), 380);
        RESULT_INSTANCE_TABLE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("y>x.g/t2e(\u007f:e8n$\u007f:i7n"), 381);
        LOCK_CHARGE_SKILL = new SendPacketOpcode(SkillType.ALLATORIxDEMO("\u007fkpolg{eacv{`ozh\u007f"), 382);
        UNLOCK_CHARGE_SKILL = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("~5g4h0t8c:y<n$x0b7g"), 383);
        NEW_PYRAMID_SCORE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("}ad{c}ae~mw{`g|vv"), 384);
        NEW_PYRAMID_LIFE = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("5n,t+r)j6b?t7b=n"), 385);
        NEW_PYRAMID_LEVEL = new SendPacketOpcode(SkillType.ALLATORIxDEMO("}ad{c}ae~mw{\u007faea\u007f"), 386);
        CLOSE_UI = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("8g4x>t.b"), 387);
        NEW_PYRAMID_RESULT = new SendPacketOpcode(SkillType.ALLATORIxDEMO("jvsltjvriz`lvvwfhg"), 388);
        REPORT_TIME = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("y>{4y/t/b6n"), 389);
        REPORT_RESPONSE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("aackaplvvwck}wv"), 390);
        REPORT_STATUS = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("y>{4y/t(\u007f:\u007f.x"), 391);
        PART_TIME = new SendPacketOpcode(SkillType.ALLATORIxDEMO("ceaplpziv"), 392);
        MULUNG_DOJO_RANKING = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("f.g.e<t?d1d$y:e0b5l"), 393);
        INDIVIDUAL_DEATH_COUNT_INFO = new SendPacketOpcode(SkillType.ALLATORIxDEMO("zjwmemwqrhl`vegllg|q}plm}b|"), 394);
        DEATH_COUNT_INFO = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("?n:\u007f3t8d.e/t2e=d"), 395);
        SYNTHESIZING_MSG = new SendPacketOpcode(SkillType.ALLATORIxDEMO("wjjglvwz~zjt{~wt"), 396);
        PET_TRAIN = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("{>\u007f$\u007f)j2e"), 397);
        EXP_POTION = new SendPacketOpcode(SkillType.ALLATORIxDEMO("aktlt|pzk}"), 398);
        LINK_SKILLS = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("g2e0t(`2g7x"), 399);
        SCROLL_GASHAPON_BOX = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`gak\u007fhlcrw{eck}{qkk"), 400);
        SILENT_CRUSADE_SHOP = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("x2g>e/t8y.x:o>t(c4{"), 401);
        SMART_MOB_NOTICE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("w~eapli|flj|pzgv"), 402);
        LUMINOUS_COMBO = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("7~6b5d.x$h4f9d"), 403);
        DRESS_UP_INFO_MODIFIED = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`aa`wlqc{zjukli|`zbzaw"), 404);
        RETURN_LOGIN = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO(")n/~)e$g4l2e"), 405);
        KEYDOWN_AREA_MOVE = new SendPacketOpcode(SkillType.ALLATORIxDEMO("xaj`|s}{rvveli|rv"), 406);
        HYPER_SKILL_RESET_RESULT = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("3r+n)t(`2g7t)n(n/t)n(~7\u007f"), 407);
        SKILL_MAP = new SendPacketOpcode(SkillType.ALLATORIxDEMO("`ozh\u007f{~ec"), 408);
        AGGRO_RANK_INFO = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("j<l)d$y:e0t2e=d"), 409);
        MAGIC_WHEEL = new SendPacketOpcode(SkillType.ALLATORIxDEMO("~etmp{dlva\u007f"), 410);
        ITEM_COOLDOWN = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("b/n6t8d4g?d,e"), 411);
        ITEM_COOLTIME = new SendPacketOpcode(SkillType.ALLATORIxDEMO("zpvilg|k\u007fpziv"), 412);
        SP_RESET = new SendPacketOpcode(SkilledCommand.ALLATORIxDEMO("({$y>x>\u007f"), 413);
        AP_RESET = new SendPacketOpcode(SkillType.ALLATORIxDEMO("ec{aa`ag"), 414);
        SendPacketOpcode[] arrsendPacketOpcode = new SendPacketOpcode[415];
        arrsendPacketOpcode[0] = REMOVE_SPEAK_LIMIT;
        arrsendPacketOpcode[1] = NORASHIELD_DAMAGE;
        arrsendPacketOpcode[2] = YUTOSHIELD_DAMAGE;
        arrsendPacketOpcode[3] = SPAWN_KITE_ERROR;
        arrsendPacketOpcode[4] = DESTROY_KITE;
        arrsendPacketOpcode[5] = SPAWN_KITE;
        arrsendPacketOpcode[6] = LOGIN_STATUS;
        arrsendPacketOpcode[7] = SERVERLIST;
        arrsendPacketOpcode[8] = CHARLIST;
        arrsendPacketOpcode[9] = SERVER_IP;
        arrsendPacketOpcode[10] = CHAR_NAME_RESPONSE;
        arrsendPacketOpcode[11] = ADD_NEW_CHAR_ENTRY;
        arrsendPacketOpcode[12] = DELETE_CHAR_RESPONSE;
        arrsendPacketOpcode[13] = CHANGE_CHANNEL;
        arrsendPacketOpcode[14] = PING;
        arrsendPacketOpcode[15] = CS_USE;
        arrsendPacketOpcode[16] = CHANNEL_SELECTED;
        arrsendPacketOpcode[17] = RELOG_RESPONSE;
        arrsendPacketOpcode[18] = SECONDPW_ERROR;
        arrsendPacketOpcode[19] = CHOOSE_GENDER;
        arrsendPacketOpcode[20] = GENDER_SET;
        arrsendPacketOpcode[21] = SERVERSTATUS;
        arrsendPacketOpcode[22] = LAST_CONNECT_WORLD;
        arrsendPacketOpcode[23] = MODIFY_INVENTORY_ITEM;
        arrsendPacketOpcode[24] = UPDATE_INVENTORY_SLOT;
        arrsendPacketOpcode[25] = UPDATE_STATS;
        arrsendPacketOpcode[26] = GIVE_BUFF;
        arrsendPacketOpcode[27] = CANCEL_BUFF;
        arrsendPacketOpcode[28] = TEMP_STATS;
        arrsendPacketOpcode[29] = TEMP_STATS_RESET;
        arrsendPacketOpcode[30] = UPDATE_SKILLS;
        arrsendPacketOpcode[31] = SKILL_USE_RESULT;
        arrsendPacketOpcode[32] = FAME_RESPONSE;
        arrsendPacketOpcode[33] = SHOW_STATUS_INFO;
        arrsendPacketOpcode[34] = SHOW_NOTES;
        arrsendPacketOpcode[35] = MAP_TRANSFER_RESULT;
        arrsendPacketOpcode[36] = ANTI_MACRO_RESULT;
        arrsendPacketOpcode[37] = BOMB_LIE_DETECTOR;
        arrsendPacketOpcode[38] = CLAIM_RESULT;
        arrsendPacketOpcode[39] = CLAIM_STATUS_CHANGED;
        arrsendPacketOpcode[40] = UPDATE_MOUNT;
        arrsendPacketOpcode[41] = SHOW_QUEST_COMPLETION;
        arrsendPacketOpcode[42] = SEND_TITLE_BOX;
        arrsendPacketOpcode[43] = SEND_FISH_BOX;
        arrsendPacketOpcode[44] = USE_SKILL_BOOK;
        arrsendPacketOpcode[45] = GATHER_ITEM_RESULT;
        arrsendPacketOpcode[46] = SORT_ITEM_RESULT;
        arrsendPacketOpcode[47] = CHAR_INFO;
        arrsendPacketOpcode[48] = PARTY_OPERATION;
        arrsendPacketOpcode[49] = BUDDYLIST;
        arrsendPacketOpcode[50] = GUILD_OPERATION;
        arrsendPacketOpcode[51] = ALLIANCE_OPERATION;
        arrsendPacketOpcode[52] = SPAWN_PORTAL;
        arrsendPacketOpcode[53] = SERVERMESSAGE;
        arrsendPacketOpcode[54] = INCUBATOR_RESULT;
        arrsendPacketOpcode[55] = PIGMI_REWARD;
        arrsendPacketOpcode[56] = SHOP_SCANNER_RESULT;
        arrsendPacketOpcode[57] = SHOP_LINK_RESULT;
        arrsendPacketOpcode[58] = MARRIAGE_REQUEST;
        arrsendPacketOpcode[59] = MARRIAGE_RESULT;
        arrsendPacketOpcode[60] = WEDDING_GIFT;
        arrsendPacketOpcode[61] = YELLOW_CHAT;
        arrsendPacketOpcode[62] = SET_POTION_DISCOUNT_RATE;
        arrsendPacketOpcode[63] = CATCH_MOB;
        arrsendPacketOpcode[64] = IMITATED_NPC_RESULT;
        arrsendPacketOpcode[65] = PLAYER_NPC;
        arrsendPacketOpcode[66] = DISABLE_NPC;
        arrsendPacketOpcode[67] = MONSTERBOOK_ADD;
        arrsendPacketOpcode[68] = MONSTERBOOK_CHANGE_COVER;
        arrsendPacketOpcode[69] = HOUR_CHANGED;
        arrsendPacketOpcode[70] = MINIMAP_ON_OFF;
        arrsendPacketOpcode[71] = CONSULT_UPDATE;
        arrsendPacketOpcode[72] = CLASS_COMPETITION_AUTHKEY_UPDATE;
        arrsendPacketOpcode[73] = WEB_BOARD_AUTHKEY_UPDATE;
        arrsendPacketOpcode[74] = SESSION_VALUE;
        arrsendPacketOpcode[75] = BONUS_EXP_CHANGED;
        arrsendPacketOpcode[76] = FAMILY_CHART_RESULT;
        arrsendPacketOpcode[77] = FAMILY_INFO_RESULT;
        arrsendPacketOpcode[78] = FAMILY_RESULT;
        arrsendPacketOpcode[79] = FAMILY_JOIN_REQUEST;
        arrsendPacketOpcode[80] = FAMILY_JOIN_REQUEST_RESULT;
        arrsendPacketOpcode[81] = FAMILY_JOIN_ACCEPTED;
        arrsendPacketOpcode[82] = FAMILY_PRIVILEGE_LIST;
        arrsendPacketOpcode[83] = FAMILY_FAMOUS_POINT_INC_RESULT;
        arrsendPacketOpcode[84] = FAMILY_NOTIFY_LOGIN_OR_LOGOUT;
        arrsendPacketOpcode[85] = FAMILY_SET_PRIVILEGE;
        arrsendPacketOpcode[86] = FAMILY_SUMMON_REQUEST;
        arrsendPacketOpcode[87] = LEVEL_UPDATE;
        arrsendPacketOpcode[88] = MARRIAGE_UPDATE;
        arrsendPacketOpcode[89] = JOB_UPDATE;
        arrsendPacketOpcode[90] = PENDANT_SLOT;
        arrsendPacketOpcode[91] = TOP_MSG;
        arrsendPacketOpcode[92] = MAPLE_ADMIN_MSG;
        arrsendPacketOpcode[93] = BBS_OPERATION;
        arrsendPacketOpcode[94] = FISHING_BOARD_UPDATE;
        arrsendPacketOpcode[95] = AVATAR_MEGA;
        arrsendPacketOpcode[96] = TREASURE_BOX;
        arrsendPacketOpcode[97] = SKILL_MACRO;
        arrsendPacketOpcode[98] = SET_FIELD;
        arrsendPacketOpcode[99] = ITC_OPEN;
        arrsendPacketOpcode[100] = CS_OPEN;
        arrsendPacketOpcode[101] = SET_MAP_OBJECT_VISIBLE;
        arrsendPacketOpcode[102] = CLEAR_BACK_EFFECT;
        arrsendPacketOpcode[103] = MAP_BLOCKED;
        arrsendPacketOpcode[104] = SERVER_BLOCKED;
        arrsendPacketOpcode[105] = SHOW_EQUIP_EFFECT;
        arrsendPacketOpcode[106] = MULTICHAT;
        arrsendPacketOpcode[107] = WHISPER;
        arrsendPacketOpcode[108] = SPOUSE_CHAT;
        arrsendPacketOpcode[109] = BOSS_ENV;
        arrsendPacketOpcode[110] = MOVE_ENV;
        arrsendPacketOpcode[111] = CASH_SONG;
        arrsendPacketOpcode[112] = GM_EFFECT;
        arrsendPacketOpcode[113] = OX_QUIZ;
        arrsendPacketOpcode[114] = GMEVENT_INSTRUCTIONS;
        arrsendPacketOpcode[115] = CLOCK;
        arrsendPacketOpcode[116] = BOAT_EFFECT;
        arrsendPacketOpcode[117] = BOAT_PACKET;
        arrsendPacketOpcode[118] = STOP_CLOCK;
        arrsendPacketOpcode[119] = PYRAMID_UPDATE;
        arrsendPacketOpcode[120] = PYRAMID_RESULT;
        arrsendPacketOpcode[121] = MOVE_PLATFORM;
        arrsendPacketOpcode[122] = SPAWN_PLAYER;
        arrsendPacketOpcode[123] = REMOVE_PLAYER_FROM_MAP;
        arrsendPacketOpcode[124] = CHATTEXT;
        arrsendPacketOpcode[125] = CHALKBOARD;
        arrsendPacketOpcode[126] = UPDATE_CHAR_BOX;
        arrsendPacketOpcode[127] = SHOW_CONSUME_EFFECT;
        arrsendPacketOpcode[128] = SHOW_SCROLL_EFFECT;
        arrsendPacketOpcode[129] = FISHING_CAUGHT;
        arrsendPacketOpcode[130] = SPAWN_PET;
        arrsendPacketOpcode[131] = MOVE_PET;
        arrsendPacketOpcode[132] = PET_CHAT;
        arrsendPacketOpcode[133] = PET_NAMECHANGE;
        arrsendPacketOpcode[134] = PET_LOAD_EXCEPTIONLIST;
        arrsendPacketOpcode[135] = PET_COMMAND;
        arrsendPacketOpcode[136] = SPAWN_SUMMON;
        arrsendPacketOpcode[137] = REMOVE_SUMMON;
        arrsendPacketOpcode[138] = SUMMON_ATTACK;
        arrsendPacketOpcode[139] = MOVE_SUMMON;
        arrsendPacketOpcode[140] = DAMAGE_SUMMON;
        arrsendPacketOpcode[141] = MOVE_PLAYER;
        arrsendPacketOpcode[142] = CLOSE_RANGE_ATTACK;
        arrsendPacketOpcode[143] = RANGED_ATTACK;
        arrsendPacketOpcode[144] = MAGIC_ATTACK;
        arrsendPacketOpcode[145] = ENERGY_ATTACK;
        arrsendPacketOpcode[146] = SKILL_EFFECT;
        arrsendPacketOpcode[147] = CANCEL_SKILL_EFFECT;
        arrsendPacketOpcode[148] = DAMAGE_PLAYER;
        arrsendPacketOpcode[149] = FACIAL_EXPRESSION;
        arrsendPacketOpcode[150] = FACIAL_EXPRESSION_LOCAL;
        arrsendPacketOpcode[151] = SHOW_ITEM_EFFECT;
        arrsendPacketOpcode[152] = AUTO_LOGIN;
        arrsendPacketOpcode[153] = SHOW_CHAIR;
        arrsendPacketOpcode[154] = UPDATE_CHAR_LOOK;
        arrsendPacketOpcode[155] = SHOW_FOREIGN_EFFECT;
        arrsendPacketOpcode[156] = GIVE_FOREIGN_BUFF;
        arrsendPacketOpcode[157] = CANCEL_FOREIGN_BUFF;
        arrsendPacketOpcode[158] = UPDATE_PARTYMEMBER_HP;
        arrsendPacketOpcode[159] = GUILD_NAME_CHANGED;
        arrsendPacketOpcode[160] = GUILD_MARK_CHANGED;
        arrsendPacketOpcode[161] = THROW_GRENADE;
        arrsendPacketOpcode[162] = CANCEL_CHAIR;
        arrsendPacketOpcode[163] = SHOW_USER_LOCAL_EFFECT;
        arrsendPacketOpcode[164] = CURRENT_MAP_WARP;
        arrsendPacketOpcode[165] = MESOBAG_SUCCESS;
        arrsendPacketOpcode[166] = MESOBAG_FAILURE;
        arrsendPacketOpcode[167] = UPDATE_QUEST_INFO;
        arrsendPacketOpcode[168] = PET_FLAG_CHANGE;
        arrsendPacketOpcode[169] = PLAYER_HINT;
        arrsendPacketOpcode[170] = OPEN_UI_OPTION;
        arrsendPacketOpcode[171] = CYGNUS_INTRO_LOCK;
        arrsendPacketOpcode[172] = CYGNUS_INTRO_DISABLE_UI;
        arrsendPacketOpcode[173] = CS_UPDATE;
        arrsendPacketOpcode[174] = CS_OPERATION;
        arrsendPacketOpcode[175] = SPAWN_NPC;
        arrsendPacketOpcode[176] = REMOVE_NPC;
        arrsendPacketOpcode[177] = SPAWN_NPC_REQUEST_CONTROLLER;
        arrsendPacketOpcode[178] = SPAWN_MONSTER;
        arrsendPacketOpcode[179] = SPAWN_MONSTER_CONTROL;
        arrsendPacketOpcode[180] = MOVE_MONSTER_RESPONSE;
        arrsendPacketOpcode[181] = KILL_MONSTER;
        arrsendPacketOpcode[182] = DROP_ITEM_FROM_MAPOBJECT;
        arrsendPacketOpcode[183] = MOVE_MONSTER;
        arrsendPacketOpcode[184] = OPEN_NPC_SHOP;
        arrsendPacketOpcode[185] = CONFIRM_SHOP_TRANSACTION;
        arrsendPacketOpcode[186] = OPEN_STORAGE;
        arrsendPacketOpcode[187] = REMOVE_ITEM_FROM_MAP;
        arrsendPacketOpcode[188] = PLAYER_INTERACTION;
        arrsendPacketOpcode[189] = NPC_TALK;
        arrsendPacketOpcode[190] = KEYMAP;
        arrsendPacketOpcode[191] = SHOW_MONSTER_HP;
        arrsendPacketOpcode[192] = APPLY_MONSTER_STATUS;
        arrsendPacketOpcode[193] = CANCEL_MONSTER_STATUS;
        arrsendPacketOpcode[194] = SPAWN_DOOR;
        arrsendPacketOpcode[195] = REMOVE_DOOR;
        arrsendPacketOpcode[196] = SPAWN_MIST;
        arrsendPacketOpcode[197] = REMOVE_MIST;
        arrsendPacketOpcode[198] = DAMAGE_MONSTER;
        arrsendPacketOpcode[199] = REACTOR_SPAWN;
        arrsendPacketOpcode[200] = REACTOR_HIT;
        arrsendPacketOpcode[201] = REACTOR_DESTROY;
        arrsendPacketOpcode[202] = EARN_TITLE_MSG;
        arrsendPacketOpcode[203] = SHOW_MAGNET;
        arrsendPacketOpcode[204] = MERCH_ITEM_MSG;
        arrsendPacketOpcode[205] = MERCH_ITEM_STORE;
        arrsendPacketOpcode[206] = MESSENGER;
        arrsendPacketOpcode[207] = NPC_ACTION;
        arrsendPacketOpcode[208] = COOLDOWN;
        arrsendPacketOpcode[209] = SUMMON_HINT;
        arrsendPacketOpcode[210] = SUMMON_HINT_MSG;
        arrsendPacketOpcode[211] = SUMMON_SKILL;
        arrsendPacketOpcode[212] = ARIANT_SCORE_UPDATE;
        arrsendPacketOpcode[213] = CATCH_MONSTER;
        arrsendPacketOpcode[214] = ARIANT_SCOREBOARD;
        arrsendPacketOpcode[215] = WITCH_TOWER_SCORE_UPDATE;
        arrsendPacketOpcode[216] = DUEY;
        arrsendPacketOpcode[217] = MONSTER_CARNIVAL_START;
        arrsendPacketOpcode[218] = MONSTER_CARNIVAL_OBTAINED_CP;
        arrsendPacketOpcode[219] = MONSTER_CARNIVAL_PARTY_CP;
        arrsendPacketOpcode[220] = MONSTER_CARNIVAL_SUMMON;
        arrsendPacketOpcode[221] = MONSTER_CARNIVAL_DIED;
        arrsendPacketOpcode[222] = SPAWN_HIRED_MERCHANT;
        arrsendPacketOpcode[223] = UPDATE_HIRED_MERCHANT;
        arrsendPacketOpcode[224] = DESTROY_HIRED_MERCHANT;
        arrsendPacketOpcode[225] = FAIRY_PEND_MSG;
        arrsendPacketOpcode[226] = VICIOUS_HAMMER_CASH;
        arrsendPacketOpcode[227] = ROLL_SNOWBALL;
        arrsendPacketOpcode[228] = HIT_SNOWBALL;
        arrsendPacketOpcode[229] = SNOWBALL_MESSAGE;
        arrsendPacketOpcode[230] = LEFT_KNOCK_BACK;
        arrsendPacketOpcode[231] = HIT_COCONUT;
        arrsendPacketOpcode[232] = COCONUT_SCORE;
        arrsendPacketOpcode[233] = HORNTAIL_SHRINE;
        arrsendPacketOpcode[234] = DRAGON_MOVE;
        arrsendPacketOpcode[235] = SHOW_DRAGON_GLIDE;
        arrsendPacketOpcode[236] = DRAGON_REMOVE;
        arrsendPacketOpcode[237] = DRAGON_SPAWN;
        arrsendPacketOpcode[238] = ARAN_COMBO;
        arrsendPacketOpcode[239] = GET_MTS_TOKENS;
        arrsendPacketOpcode[240] = MTS_OPERATION;
        arrsendPacketOpcode[241] = SHOW_POTENTIAL_EFFECT;
        arrsendPacketOpcode[242] = SHOW_POTENTIAL_RESET;
        arrsendPacketOpcode[243] = CHAOS_ZAKUM_SHRINE;
        arrsendPacketOpcode[244] = CHAOS_HORNTAIL_SHRINE;
        arrsendPacketOpcode[245] = GAME_POLL_REPLY;
        arrsendPacketOpcode[246] = CS_XMAS_SURPRISE;
        arrsendPacketOpcode[247] = FOLLOW_REQUEST;
        arrsendPacketOpcode[248] = FOLLOW_EFFECT;
        arrsendPacketOpcode[249] = FOLLOW_MOVE;
        arrsendPacketOpcode[250] = FOLLOW_MSG;
        arrsendPacketOpcode[251] = FOLLOW_MESSAGE;
        arrsendPacketOpcode[252] = TALK_MONSTER;
        arrsendPacketOpcode[253] = REMOVE_TALK_MONSTER;
        arrsendPacketOpcode[254] = TIME_BOMB_ATTACK;
        arrsendPacketOpcode[255] = MONSTER_PROPERTIES;
        arrsendPacketOpcode[256] = PARTY_VALUE;
        arrsendPacketOpcode[257] = MAP_VALUE;
        arrsendPacketOpcode[258] = FIELD_VALUE;
        arrsendPacketOpcode[259] = ENGLISH_QUIZ;
        arrsendPacketOpcode[260] = RPS_GAME;
        arrsendPacketOpcode[261] = UPDATE_BEANS;
        arrsendPacketOpcode[262] = DONATE_BEANS;
        arrsendPacketOpcode[263] = PACHINKO_MARQUEE;
        arrsendPacketOpcode[264] = PACHINKO_SHOW;
        arrsendPacketOpcode[265] = PACHINKO_ACT;
        arrsendPacketOpcode[266] = CS_ACCOUNT_NAME;
        arrsendPacketOpcode[267] = CS_WEB;
        arrsendPacketOpcode[268] = PET_AUTO_HP;
        arrsendPacketOpcode[269] = PET_AUTO_MP;
        arrsendPacketOpcode[270] = VEGA_SCROLL;
        arrsendPacketOpcode[271] = LOGIN_AUTH;
        arrsendPacketOpcode[272] = UNKNOWN;
        arrsendPacketOpcode[273] = EXPEDITION_OPERATION;
        arrsendPacketOpcode[274] = SIDEKICK_OPERATION;
        arrsendPacketOpcode[275] = REMOVE_EXTRACTOR;
        arrsendPacketOpcode[276] = SPAWN_EXTRACTOR;
        arrsendPacketOpcode[277] = QUICK_SLOT;
        arrsendPacketOpcode[278] = ANDROID_SPAWN;
        arrsendPacketOpcode[279] = ANDROID_EMOTION;
        arrsendPacketOpcode[280] = DIRECTION_INFO;
        arrsendPacketOpcode[281] = CYGNUS_INTRO_ENABLE_UI;
        arrsendPacketOpcode[282] = DIRECTION_STATUS;
        arrsendPacketOpcode[283] = PLAY_MOVIE;
        arrsendPacketOpcode[284] = PVP_INFO;
        arrsendPacketOpcode[285] = PVP_SCOREBOARD;
        arrsendPacketOpcode[286] = PVP_RESULT;
        arrsendPacketOpcode[287] = PVP_ENABLED;
        arrsendPacketOpcode[288] = PVP_MODE;
        arrsendPacketOpcode[289] = PVP_TYPE;
        arrsendPacketOpcode[290] = PVP_TEAM;
        arrsendPacketOpcode[291] = PVP_SCORE;
        arrsendPacketOpcode[292] = PVP_KILLED;
        arrsendPacketOpcode[293] = PVP_SUMMON;
        arrsendPacketOpcode[294] = PVP_ATTACK;
        arrsendPacketOpcode[295] = PVP_POINTS;
        arrsendPacketOpcode[296] = PVP_HP;
        arrsendPacketOpcode[297] = PVP_MIST;
        arrsendPacketOpcode[298] = PVP_ICEKNIGHT;
        arrsendPacketOpcode[299] = PVP_COOL;
        arrsendPacketOpcode[300] = PVP_ICEGAGE;
        arrsendPacketOpcode[301] = PVP_TRANSFORM;
        arrsendPacketOpcode[302] = ARAN_COMBO_RECHARGE;
        arrsendPacketOpcode[303] = DRAGON_BLINK;
        arrsendPacketOpcode[304] = TESLA_TRIANGLE;
        arrsendPacketOpcode[305] = CS_INTO;
        arrsendPacketOpcode[306] = UPDATE_JAGUAR;
        arrsendPacketOpcode[307] = SHOW_SPECIAL_ATTACK;
        arrsendPacketOpcode[308] = SPOUSE_MESSAGE;
        arrsendPacketOpcode[309] = MID_MSG;
        arrsendPacketOpcode[310] = MECH_DOOR_SPAWN;
        arrsendPacketOpcode[311] = MECH_DOOR_REMOVE;
        arrsendPacketOpcode[312] = PLAYER_DAMAGED;
        arrsendPacketOpcode[313] = MECH_PORTAL;
        arrsendPacketOpcode[314] = UPDATE_FAMILIAR;
        arrsendPacketOpcode[315] = SPAWN_FAMILIAR;
        arrsendPacketOpcode[316] = MOVE_FAMILIAR;
        arrsendPacketOpcode[317] = PVP_BLOCKED;
        arrsendPacketOpcode[318] = CLEAR_MID_MSG;
        arrsendPacketOpcode[319] = GAIN_FORCE;
        arrsendPacketOpcode[320] = CAPTURE_POSITION;
        arrsendPacketOpcode[321] = CAPTURE_RESET;
        arrsendPacketOpcode[322] = SHOW_MAGNIFY_GLASS;
        arrsendPacketOpcode[323] = CRAFT_EFFECT;
        arrsendPacketOpcode[324] = CRAFT_COMPLETE;
        arrsendPacketOpcode[325] = SHOW_HARVEST;
        arrsendPacketOpcode[326] = HARVESTED;
        arrsendPacketOpcode[327] = ANDROID_MOVE;
        arrsendPacketOpcode[328] = ANDROID_UPDATE;
        arrsendPacketOpcode[329] = ANDROID_DEACTIVATED;
        arrsendPacketOpcode[330] = HARVEST_MESSAGE;
        arrsendPacketOpcode[331] = OPEN_BAG;
        arrsendPacketOpcode[332] = OPEN_UI;
        arrsendPacketOpcode[333] = LOAD_TEAM;
        arrsendPacketOpcode[334] = ATTACK_FAMILIAR;
        arrsendPacketOpcode[335] = TOUCH_FAMILIAR;
        arrsendPacketOpcode[336] = REGISTER_FAMILIAR;
        arrsendPacketOpcode[337] = PET_UPDATE;
        arrsendPacketOpcode[338] = LIE_DETECTOR;
        arrsendPacketOpcode[339] = ULTIMATE_EXPLORER;
        arrsendPacketOpcode[340] = CREATE_ULTIMATE;
        arrsendPacketOpcode[341] = PROFESSION_INFO;
        arrsendPacketOpcode[342] = ITEM_POT;
        arrsendPacketOpcode[343] = QUEST_HELPER;
        arrsendPacketOpcode[344] = PAMS_SONG;
        arrsendPacketOpcode[345] = PAMS_SONG_UI;
        arrsendPacketOpcode[346] = CHAIR_EXP_RESET;
        arrsendPacketOpcode[347] = SHOW_PQ_REWARD;
        arrsendPacketOpcode[348] = CHINESE_PVP_RANKING;
        arrsendPacketOpcode[349] = FISHING_KING_RANKING;
        arrsendPacketOpcode[350] = SELECT_EXP_CHAIR;
        arrsendPacketOpcode[351] = MAP_EFFECT;
        arrsendPacketOpcode[352] = COMESOON_OPEN;
        arrsendPacketOpcode[353] = NPC_SPECIAL_ACTION;
        arrsendPacketOpcode[354] = NPC_SCRIPTABLEUP;
        arrsendPacketOpcode[355] = MOVE_SCREEN;
        arrsendPacketOpcode[356] = SET_BACK_EFFECT;
        arrsendPacketOpcode[357] = CS_RANDOM_RECOMMEND;
        arrsendPacketOpcode[358] = ANYWHERE_DOOR;
        arrsendPacketOpcode[359] = ANYWHERE_DOOR_ERROR;
        arrsendPacketOpcode[360] = TROCK_LOCATIONS;
        arrsendPacketOpcode[361] = OWL_RESULT;
        arrsendPacketOpcode[362] = SUMMON_ITEM_UNAVAILABLE;
        arrsendPacketOpcode[363] = DIRECTION_FACIAL_EXPRESSION;
        arrsendPacketOpcode[364] = VICIOUS_HAMMER_USE;
        arrsendPacketOpcode[365] = FINISH_SORT;
        arrsendPacketOpcode[366] = FINISH_GATHER;
        arrsendPacketOpcode[367] = UPDATE_HONOUR;
        arrsendPacketOpcode[368] = ENABLE_INNER_ABILITY;
        arrsendPacketOpcode[369] = DISABLE_INNER_ABILITY;
        arrsendPacketOpcode[370] = UPDATE_CORE_AURA;
        arrsendPacketOpcode[371] = UPDATE_STOLEN_SKILLS;
        arrsendPacketOpcode[372] = REPLACE_SKILLS;
        arrsendPacketOpcode[373] = TARGET_SKILL;
        arrsendPacketOpcode[374] = PHANTOM_CARD;
        arrsendPacketOpcode[375] = UPDATE_FRINED_POINTS;
        arrsendPacketOpcode[376] = DISPLAY_INFO;
        arrsendPacketOpcode[377] = SHOW_TITLE;
        arrsendPacketOpcode[378] = ANGELIC_CHANGE;
        arrsendPacketOpcode[379] = QUEST_TIP;
        arrsendPacketOpcode[380] = MOB_SKILL_DELAY;
        arrsendPacketOpcode[381] = RESULT_INSTANCE_TABLE;
        arrsendPacketOpcode[382] = LOCK_CHARGE_SKILL;
        arrsendPacketOpcode[383] = UNLOCK_CHARGE_SKILL;
        arrsendPacketOpcode[384] = NEW_PYRAMID_SCORE;
        arrsendPacketOpcode[385] = NEW_PYRAMID_LIFE;
        arrsendPacketOpcode[386] = NEW_PYRAMID_LEVEL;
        arrsendPacketOpcode[387] = CLOSE_UI;
        arrsendPacketOpcode[388] = NEW_PYRAMID_RESULT;
        arrsendPacketOpcode[389] = REPORT_TIME;
        arrsendPacketOpcode[390] = REPORT_RESPONSE;
        arrsendPacketOpcode[391] = REPORT_STATUS;
        arrsendPacketOpcode[392] = PART_TIME;
        arrsendPacketOpcode[393] = MULUNG_DOJO_RANKING;
        arrsendPacketOpcode[394] = INDIVIDUAL_DEATH_COUNT_INFO;
        arrsendPacketOpcode[395] = DEATH_COUNT_INFO;
        arrsendPacketOpcode[396] = SYNTHESIZING_MSG;
        arrsendPacketOpcode[397] = PET_TRAIN;
        arrsendPacketOpcode[398] = EXP_POTION;
        arrsendPacketOpcode[399] = LINK_SKILLS;
        arrsendPacketOpcode[400] = SCROLL_GASHAPON_BOX;
        arrsendPacketOpcode[401] = SILENT_CRUSADE_SHOP;
        arrsendPacketOpcode[402] = SMART_MOB_NOTICE;
        arrsendPacketOpcode[403] = LUMINOUS_COMBO;
        arrsendPacketOpcode[404] = DRESS_UP_INFO_MODIFIED;
        arrsendPacketOpcode[405] = RETURN_LOGIN;
        arrsendPacketOpcode[406] = KEYDOWN_AREA_MOVE;
        arrsendPacketOpcode[407] = HYPER_SKILL_RESET_RESULT;
        arrsendPacketOpcode[408] = SKILL_MAP;
        arrsendPacketOpcode[409] = AGGRO_RANK_INFO;
        arrsendPacketOpcode[410] = MAGIC_WHEEL;
        arrsendPacketOpcode[411] = ITEM_COOLDOWN;
        arrsendPacketOpcode[412] = ITEM_COOLTIME;
        arrsendPacketOpcode[413] = SP_RESET;
        arrsendPacketOpcode[414] = AP_RESET;
        ALLATORIxDEMO = arrsendPacketOpcode;
        SendPacketOpcode.reloadValues();
    }

    /*
     * Enabled aggressive block sorting
     */
    public static /* synthetic */ boolean isSpamHeader(SendPacketOpcode a2) {
        int n2;
        block19: {
            String string = a2.name();
            int n3 = -1;
            switch (string.hashCode()) {
                case -906709233: {
                    if (!string.equals(SkillType.ALLATORIxDEMO("deatlp|{~ec"))) break;
                    n2 = n3 = 0;
                    break block19;
                }
                case 2455922: {
                    if (!string.equals(SkilledCommand.ALLATORIxDEMO("+b5l"))) break;
                    n2 = n3 = 1;
                    break block19;
                }
                case 132404596: {
                    if (!string.equals(SkillType.ALLATORIxDEMO("jcgleppzk}"))) break;
                    n2 = n3 = 2;
                    break block19;
                }
                case -1659117175: {
                    if (!string.equals(SkilledCommand.ALLATORIxDEMO(".{?j/n$x/j/x"))) break;
                    n2 = n3 = 3;
                    break block19;
                }
                case 677616399: {
                    if (!string.equals(SkillType.ALLATORIxDEMO("~kealt\u007fejaa"))) break;
                    n2 = n3 = 4;
                    break block19;
                }
                case -1880083491: {
                    if (!string.equals(SkilledCommand.ALLATORIxDEMO("x+j,e$e+h"))) break;
                    n2 = n3 = 5;
                    break block19;
                }
                case -1181917426: {
                    if (!string.equals(SkillType.ALLATORIxDEMO("wcedjljcglvvufa`plg|jgv|h\u007faa"))) break;
                    n2 = n3 = 6;
                    break block19;
                }
                case 1584949382: {
                    if (!string.equals(SkilledCommand.ALLATORIxDEMO(")n6d-n$e+h"))) break;
                    n2 = n3 = 7;
                    break block19;
                }
                case 1261456716: {
                    if (!string.equals(SkillType.ALLATORIxDEMO("i|rv{~k}wgaa"))) break;
                    n2 = n3 = 8;
                    break block19;
                }
                case 124132820: {
                    if (!string.equals(SkilledCommand.ALLATORIxDEMO("f4}>t6d5x/n)t)n({4e(n"))) break;
                    n2 = n3 = 9;
                    break block19;
                }
                case -1125127466: {
                    if (!string.equals(SkillType.ALLATORIxDEMO("`trs}{~k}wgaa"))) break;
                    n2 = n3 = 10;
                    break block19;
                }
                case -861057836: {
                    if (!string.equals(SkilledCommand.ALLATORIxDEMO("x+j,e$f4e(\u007f>y$h4e/y4g"))) break;
                    n2 = n3 = 11;
                    break block19;
                }
                case 1354974145: {
                    if (!string.equals(SkillType.ALLATORIxDEMO("e}`akz`li|rv"))) break;
                    n2 = n3 = 12;
                    break block19;
                }
                case 1097953241: {
                    if (!string.equals(SkilledCommand.ALLATORIxDEMO("0b7g$f4e(\u007f>y"))) break;
                    n3 = 13;
                }
            }
            n2 = n3;
        }
        switch (n2) {
            case 0: 
            case 1: 
            case 2: 
            case 3: 
            case 4: 
            case 5: 
            case 6: 
            case 7: 
            case 8: 
            case 9: 
            case 10: 
            case 11: 
            case 12: 
            case 13: {
                return true;
            }
        }
        return false;
    }

    public static /* synthetic */ SendPacketOpcode valueOf(String a2) {
        return Enum.valueOf(SendPacketOpcode.class, a2);
    }

    @Override
    public /* synthetic */ void setValue(short a2) {
        a.d = a2;
    }

    /*
     * WARNING - Possible parameter corruption
     * WARNING - void declaration
     */
    private /* synthetic */ SendPacketOpcode() {
        void var2_-1;
        void var1_-1;
        SendPacketOpcode a2;
        SendPacketOpcode sendPacketOpcode = a2;
        sendPacketOpcode.d = (short)-2;
        sendPacketOpcode.d = (short)-2;
    }
}

