/*
 * Decompiled with CFR 0.150.
 * 
 * Could not load the following classes:
 *  client.messages.commands.player.\u6bd4\u5947\u8c37
 */
package handling.opcodes;

import client.messages.commands.player.\u6bd4\u5947\u8c37;
import constants.GameSetConstants;
import constants.SkillConstants;
import handling.Buffstat;
import tools.FixDropNullItem;
import tools.WritableLongValueHolder;

public final class MapleBuffStat
extends Enum<MapleBuffStat>
implements WritableLongValueHolder,
Buffstat {
    public static final /* synthetic */ /* enum */ MapleBuffStat DEFAULTBUFF1;
    public static final /* synthetic */ /* enum */ MapleBuffStat DARKSIGHT;
    public static final /* synthetic */ /* enum */ MapleBuffStat INDIE_JUMP;
    public static final /* synthetic */ /* enum */ MapleBuffStat COMBO_BARRIER;
    public static final /* synthetic */ /* enum */ MapleBuffStat INDIE_BOOSTER;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_188;
    public static final /* synthetic */ /* enum */ MapleBuffStat POISON;
    public static final /* synthetic */ /* enum */ MapleBuffStat LUNAR_TIDE;
    public static final /* synthetic */ /* enum */ MapleBuffStat INDIE_HP;
    public static final /* synthetic */ /* enum */ MapleBuffStat DAMAGE_TAKEN_BUFF;
    public static final /* synthetic */ /* enum */ MapleBuffStat INDIE_PAD;
    public static final /* synthetic */ /* enum */ MapleBuffStat ENHANCED_MATK;
    public static final /* synthetic */ /* enum */ MapleBuffStat DAMAGE_CAP_INCREASE;
    public static final /* synthetic */ /* enum */ MapleBuffStat IGNORE_ALL_COUNTER;
    public static final /* synthetic */ /* enum */ MapleBuffStat WDEF;
    public static final /* synthetic */ /* enum */ MapleBuffStat MONSTER_RIDING2;
    public static final /* synthetic */ /* enum */ MapleBuffStat BOSS_DAMAGE_RATE;
    public static final /* synthetic */ /* enum */ MapleBuffStat CYGNUS_TORNADO;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_197;
    public static final /* synthetic */ /* enum */ MapleBuffStat SMART_KNOCKBACK;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_202;
    private /* synthetic */ int k;
    public static final /* synthetic */ /* enum */ MapleBuffStat ONYX_SHROUD;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_MASTERY;
    public static final /* synthetic */ /* enum */ MapleBuffStat EXP_BUFF_RATE;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_131;
    public static final /* synthetic */ /* enum */ MapleBuffStat ICE_SKILL;
    public static final /* synthetic */ /* enum */ MapleBuffStat SPEED_INFUSION2;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_177;
    public static final /* synthetic */ /* enum */ MapleBuffStat MANA_REFLECTION;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_225;
    public static final /* synthetic */ /* enum */ MapleBuffStat SPEED;
    public static final /* synthetic */ /* enum */ MapleBuffStat SPEED_INFUSION;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_193;
    private static final /* synthetic */ MapleBuffStat[] ALLATORIxDEMO;
    public static final /* synthetic */ /* enum */ MapleBuffStat BODY_PRESSURE;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_172;
    public static final /* synthetic */ /* enum */ MapleBuffStat CRIT_MIN_DAMAGE;
    public static final /* synthetic */ /* enum */ MapleBuffStat INDIE_AVOID;
    public static final /* synthetic */ /* enum */ MapleBuffStat AFFINITY_SLUG;
    public static final /* synthetic */ /* enum */ MapleBuffStat WEIRD_FLAME;
    public static final /* synthetic */ /* enum */ MapleBuffStat ACC;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_163;
    public static final /* synthetic */ /* enum */ MapleBuffStat HOLY_SHIELD;
    public static final /* synthetic */ /* enum */ MapleBuffStat DIVINE_BODY;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_125;
    public static final /* synthetic */ /* enum */ MapleBuffStat KILLING_POINT;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_200;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_207;
    public static final /* synthetic */ /* enum */ MapleBuffStat RETURN_TELEPORT;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_228;
    public static final /* synthetic */ /* enum */ MapleBuffStat ARIANT_COSS_IMU;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_161;
    public static final /* synthetic */ /* enum */ MapleBuffStat CRIT_RATE;
    public static final /* synthetic */ /* enum */ MapleBuffStat INDIE_SPEED;
    public static final /* synthetic */ /* enum */ MapleBuffStat STANCE;
    public static final /* synthetic */ /* enum */ MapleBuffStat NOT_DAMAGE;
    public static final /* synthetic */ /* enum */ MapleBuffStat DROP_RATE;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_186;
    public static final /* synthetic */ /* enum */ MapleBuffStat ANGEL_ACC;
    public static final /* synthetic */ /* enum */ MapleBuffStat FINAL_SHOOT_ATTACK;
    public static final /* synthetic */ /* enum */ MapleBuffStat MAGNET_AREA;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_128;
    public static final /* synthetic */ /* enum */ MapleBuffStat BARREL_ROLL;
    public static final /* synthetic */ /* enum */ MapleBuffStat HOLY_MAGIC_SHELL;
    public static final /* synthetic */ /* enum */ MapleBuffStat MESO_RATE;
    public static final /* synthetic */ /* enum */ MapleBuffStat WEAKEN;
    public static final /* synthetic */ /* enum */ MapleBuffStat RECOVERY;
    public static final /* synthetic */ /* enum */ MapleBuffStat INDIE_MDD;
    public static final /* synthetic */ /* enum */ MapleBuffStat SPIRIT_LINK;
    public static final /* synthetic */ /* enum */ MapleBuffStat ENHANCED_MDEF;
    public static final /* synthetic */ /* enum */ MapleBuffStat BLACK_BLESSING;
    public static final /* synthetic */ /* enum */ MapleBuffStat INVINCIBILITY;
    public static final /* synthetic */ /* enum */ MapleBuffStat DIVINE_SHIELD;
    public static final /* synthetic */ /* enum */ MapleBuffStat DISABLE_POTENTIAL;
    public static final /* synthetic */ /* enum */ MapleBuffStat SOUL_WEAPON;
    public static final /* synthetic */ /* enum */ MapleBuffStat DEFAULT_BUFFSTAT2;
    public static final /* synthetic */ /* enum */ MapleBuffStat ANGEL_STAT;
    public static final /* synthetic */ /* enum */ MapleBuffStat TORNADO;
    public static final /* synthetic */ /* enum */ MapleBuffStat DAMAGE_ABSORBED;
    public static final /* synthetic */ /* enum */ MapleBuffStat MIRROR_TARGET;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_187;
    public static final /* synthetic */ /* enum */ MapleBuffStat SHROUD_WALK;
    public static final /* synthetic */ /* enum */ MapleBuffStat ALL_MISS;
    public static final /* synthetic */ /* enum */ MapleBuffStat DAMAGE_BUFF;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_203;
    public static final /* synthetic */ /* enum */ MapleBuffStat CRITICAL_RATE;
    public static final /* synthetic */ /* enum */ MapleBuffStat INDIE_STR;
    public static final /* synthetic */ /* enum */ MapleBuffStat HOMING_BEACON2;
    public static final /* synthetic */ /* enum */ MapleBuffStat SOULARROW;
    private /* synthetic */ int d;
    public static final /* synthetic */ /* enum */ MapleBuffStat MAGIC_RESISTANCE;
    private /* synthetic */ long a;
    public static final /* synthetic */ /* enum */ MapleBuffStat INDIE_DEX;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_192;
    public static final /* synthetic */ /* enum */ MapleBuffStat SOUL_EXALT;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_189;
    public static final /* synthetic */ /* enum */ MapleBuffStat LUK;
    public static final /* synthetic */ /* enum */ MapleBuffStat HOMING_BEACON;
    public static final /* synthetic */ /* enum */ MapleBuffStat SOARING;
    public static final /* synthetic */ /* enum */ MapleBuffStat PERFECT_ARMOR;
    public static final /* synthetic */ /* enum */ MapleBuffStat DARK_METAMORPHOSIS;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_79;
    public static final /* synthetic */ /* enum */ MapleBuffStat OWL_SPIRIT;
    public static final /* synthetic */ /* enum */ MapleBuffStat SHADOWPARTNER;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_208;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_226;
    public static final /* synthetic */ /* enum */ MapleBuffStat MP_BUFF;
    public static final /* synthetic */ /* enum */ MapleBuffStat WATK;
    public static final /* synthetic */ /* enum */ MapleBuffStat YELLOW_AURA;
    public static final /* synthetic */ /* enum */ MapleBuffStat POWERGUARD;
    public static final /* synthetic */ /* enum */ MapleBuffStat GRAND_ARMOR;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_121;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_162;
    public static final /* synthetic */ /* enum */ MapleBuffStat DODGE_CHANGE_BUFF;
    public static final /* synthetic */ /* enum */ MapleBuffStat SOUL_STONE;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_176;
    public static final /* synthetic */ /* enum */ MapleBuffStat DARK_AURA;
    public static final /* synthetic */ /* enum */ MapleBuffStat WEIRD_FLAME2;
    public static final /* synthetic */ /* enum */ MapleBuffStat INDIE_DAMAGE_PERCENT;
    public static final /* synthetic */ /* enum */ MapleBuffStat ABNORMAL_STATUS_R;
    public static final /* synthetic */ /* enum */ MapleBuffStat GHOST_MORPH;
    public static final /* synthetic */ /* enum */ MapleBuffStat MORPH;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_72;
    public static final /* synthetic */ /* enum */ MapleBuffStat ECHO_OF_HERO;
    public static final /* synthetic */ /* enum */ MapleBuffStat EXCEED;
    public static final /* synthetic */ /* enum */ MapleBuffStat BEHOLDER;
    public static final /* synthetic */ /* enum */ MapleBuffStat COMBO_UNLIMITED;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_83;
    public static final /* synthetic */ /* enum */ MapleBuffStat ANGEL_JUMP;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_158;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_77;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_132;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_218;
    public static final /* synthetic */ /* enum */ MapleBuffStat PVP_DAMAGE;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_75;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_213;
    public static final /* synthetic */ /* enum */ MapleBuffStat FINAL_CUT;
    public static final /* synthetic */ /* enum */ MapleBuffStat HAMSTRING;
    public static final /* synthetic */ /* enum */ MapleBuffStat IGNORE_ALL_IMMUNE;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_199;
    public static final /* synthetic */ /* enum */ MapleBuffStat COMBO_DRAIN;
    public static final /* synthetic */ /* enum */ MapleBuffStat ONYX_WILL;
    public static final /* synthetic */ /* enum */ MapleBuffStat INFILTRATE;
    public static final /* synthetic */ /* enum */ MapleBuffStat MAGIC_SHIELD;
    public static final /* synthetic */ /* enum */ MapleBuffStat ANGEL_AVOID;
    public static final /* synthetic */ /* enum */ MapleBuffStat WIND_WALK;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_201;
    public static final /* synthetic */ /* enum */ MapleBuffStat HP_BOOST;
    public static final /* synthetic */ /* enum */ MapleBuffStat HIDDEN_POTENTIAL;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_212;
    public static final /* synthetic */ /* enum */ MapleBuffStat ICE_KNIGHT;
    public static final /* synthetic */ /* enum */ MapleBuffStat EXPRATE;
    public static final /* synthetic */ /* enum */ MapleBuffStat SLOW;
    public static final /* synthetic */ /* enum */ MapleBuffStat HANDS;
    public static final /* synthetic */ /* enum */ MapleBuffStat ACASH_RATE;
    public static final /* synthetic */ /* enum */ MapleBuffStat ARAN_COMBO;
    public static final /* synthetic */ /* enum */ MapleBuffStat MONSTER_RIDING;
    public static final /* synthetic */ /* enum */ MapleBuffStat RAINING_MINES;
    public static final /* synthetic */ /* enum */ MapleBuffStat SHADOWPARTNERX;
    public static final /* synthetic */ /* enum */ MapleBuffStat DEFAULTBUFF2;
    public static final /* synthetic */ /* enum */ MapleBuffStat UNKNOWN7;
    public static final /* synthetic */ /* enum */ MapleBuffStat DARKNESS;
    public static final /* synthetic */ /* enum */ MapleBuffStat SOUL_SKILL;
    public static final /* synthetic */ /* enum */ MapleBuffStat LAPID_IFICATION;
    public static final /* synthetic */ /* enum */ MapleBuffStat NO_SLIP;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_221;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_204;
    public static final /* synthetic */ /* enum */ MapleBuffStat CRITICAL_RATE_BUFF;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_156;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_219;
    public static final /* synthetic */ /* enum */ MapleBuffStat PUPPET;
    public static final /* synthetic */ /* enum */ MapleBuffStat ENRAGE;
    public static final /* synthetic */ /* enum */ MapleBuffStat STUN;
    public static final /* synthetic */ /* enum */ MapleBuffStat SATELLITESAFE_ABSORB;
    public static final /* synthetic */ /* enum */ MapleBuffStat INDIE_ACC;
    public static final /* synthetic */ /* enum */ MapleBuffStat IGNORE_DEF;
    public static final /* synthetic */ /* enum */ MapleBuffStat ELEMENT_RESET;
    public static final /* synthetic */ /* enum */ MapleBuffStat CONVERSION;
    public static final /* synthetic */ /* enum */ MapleBuffStat TELEPORT_MASTERY;
    public static final /* synthetic */ /* enum */ MapleBuffStat INDIE_STAT;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_78;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_84;
    public static final /* synthetic */ /* enum */ MapleBuffStat ANGEL_ATK;
    public static final /* synthetic */ /* enum */ MapleBuffStat DARK_CRESCENDO;
    public static final /* synthetic */ /* enum */ MapleBuffStat VIRTUE_EFFECT;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_224;
    public static final /* synthetic */ /* enum */ MapleBuffStat COMBO;
    public static final /* synthetic */ /* enum */ MapleBuffStat ANGEL_SPEED;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_184;
    public static final /* synthetic */ /* enum */ MapleBuffStat CAPTURE_FLAG;
    public static final /* synthetic */ /* enum */ MapleBuffStat ARCANE_AIM;
    public static final /* synthetic */ /* enum */ MapleBuffStat FREEZE;
    private /* synthetic */ int K;
    public static final /* synthetic */ /* enum */ MapleBuffStat GIANT_POTION;
    public static final /* synthetic */ /* enum */ MapleBuffStat MDEF;
    public static final /* synthetic */ /* enum */ MapleBuffStat MP_BOOST_PERCENT;
    public static final /* synthetic */ /* enum */ MapleBuffStat REAPER;
    public static final /* synthetic */ /* enum */ MapleBuffStat JUMP;
    public static final /* synthetic */ /* enum */ MapleBuffStat ELEMENT_WEAKEN;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_209;
    public static final /* synthetic */ /* enum */ MapleBuffStat FROZEN;
    public static final /* synthetic */ /* enum */ MapleBuffStat DRAGONBLOOD;
    public static final /* synthetic */ /* enum */ MapleBuffStat MATK;
    public static final /* synthetic */ /* enum */ MapleBuffStat MAPLE_WARRIOR;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_222;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_227;
    public static final /* synthetic */ /* enum */ MapleBuffStat HP_BOOST_PERCENT;
    public static final /* synthetic */ /* enum */ MapleBuffStat EXCEED_ATTACK;
    public static final /* synthetic */ /* enum */ MapleBuffStat DASH_SPEED2;
    public static final /* synthetic */ /* enum */ MapleBuffStat LIGHTNING_CHARGE;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_76;
    public static final /* synthetic */ /* enum */ MapleBuffStat ENHANCED_WATK;
    public static final /* synthetic */ /* enum */ MapleBuffStat THORNS;
    public static final /* synthetic */ /* enum */ MapleBuffStat ZOMBIFY;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_216;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_71;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_205;
    public static final /* synthetic */ /* enum */ MapleBuffStat MP_BOOST;
    public static final /* synthetic */ /* enum */ MapleBuffStat SHARP_EYES;
    public static final /* synthetic */ /* enum */ MapleBuffStat THREATEN_PVP;
    public static final /* synthetic */ /* enum */ MapleBuffStat BLUE_AURA;
    public static final /* synthetic */ /* enum */ MapleBuffStat AURA;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_191;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_81;
    public static final /* synthetic */ /* enum */ MapleBuffStat DASH_JUMP2;
    public static final /* synthetic */ /* enum */ MapleBuffStat HOLY_SYMBOL;
    public static final /* synthetic */ /* enum */ MapleBuffStat PVP_ATTACK;
    private static final /* synthetic */ long B = 0L;
    public static final /* synthetic */ /* enum */ MapleBuffStat INDIE_LUK;
    public static final /* synthetic */ /* enum */ MapleBuffStat WATER_SHIELD;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_137;
    public static final /* synthetic */ /* enum */ MapleBuffStat EXPRATE_ADD;
    public static final /* synthetic */ /* enum */ MapleBuffStat ENHANCED_MAXHP;
    public static final /* synthetic */ /* enum */ MapleBuffStat FINAL_JUDGMENT_DRAW;
    public static final /* synthetic */ /* enum */ MapleBuffStat TRINITY;
    public static final /* synthetic */ /* enum */ MapleBuffStat REVERSE_DIRECTION;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_194;
    public static final /* synthetic */ /* enum */ MapleBuffStat DEATHMARK;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_223;
    public static final /* synthetic */ /* enum */ MapleBuffStat BLIND;
    public static final /* synthetic */ /* enum */ MapleBuffStat MIRROR_IMAGE;
    public static final /* synthetic */ /* enum */ MapleBuffStat WK_CHARGE;
    public static final /* synthetic */ /* enum */ MapleBuffStat MESOGUARD;
    public static final /* synthetic */ /* enum */ MapleBuffStat CONCENTRATE;
    public static final /* synthetic */ /* enum */ MapleBuffStat DICE_ROLL;
    public static final /* synthetic */ /* enum */ MapleBuffStat SEAL;
    public static final /* synthetic */ /* enum */ MapleBuffStat SEDUCE;
    public static final /* synthetic */ /* enum */ MapleBuffStat MAXHP;
    public static final /* synthetic */ /* enum */ MapleBuffStat DASH_SPEED;
    public static final /* synthetic */ /* enum */ MapleBuffStat DEFENCE_BOOST_R;
    public static final /* synthetic */ /* enum */ MapleBuffStat ILLUSION;
    public static final /* synthetic */ /* enum */ MapleBuffStat FINAL_MELEE_ATTACK;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_175;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_185;
    public static final /* synthetic */ /* enum */ MapleBuffStat AVOID;
    public static final /* synthetic */ /* enum */ MapleBuffStat COMBAT_ORDERS;
    public static final /* synthetic */ /* enum */ MapleBuffStat ENHANCED_WDEF;
    public static final /* synthetic */ /* enum */ MapleBuffStat SPIRIT_CLAW;
    public static final /* synthetic */ /* enum */ MapleBuffStat ANGEL_MATK;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_80;
    public static final /* synthetic */ /* enum */ MapleBuffStat BERSERK_FURY;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_210;
    public static final /* synthetic */ /* enum */ MapleBuffStat DASH_JUMP;
    public static final /* synthetic */ /* enum */ MapleBuffStat JUDGMENT_DRAW;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_196;
    public static final /* synthetic */ /* enum */ MapleBuffStat DEX;
    public static final /* synthetic */ /* enum */ MapleBuffStat BLESS;
    public static final /* synthetic */ /* enum */ MapleBuffStat CRITICAL_INC;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_206;
    public static final /* synthetic */ /* enum */ MapleBuffStat BOOSTER;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_217;
    public static final /* synthetic */ /* enum */ MapleBuffStat INDIE_MP;
    public static final /* synthetic */ /* enum */ MapleBuffStat FELINE_BERSERK;
    public static final /* synthetic */ /* enum */ MapleBuffStat SHADOW2;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_211;
    public static final /* synthetic */ /* enum */ MapleBuffStat SIDEKICK_PASSIVE;
    public static final /* synthetic */ /* enum */ MapleBuffStat ATTACK_BUFF;
    public static final /* synthetic */ /* enum */ MapleBuffStat HP_LOSS_GUARD;
    public static final /* synthetic */ /* enum */ MapleBuffStat INDIE_INT;
    public static final /* synthetic */ /* enum */ MapleBuffStat CRIT_DAMAGE;
    public static final /* synthetic */ /* enum */ MapleBuffStat INDIE_MAD;
    public static final /* synthetic */ /* enum */ MapleBuffStat MECH_CHANGE;
    public static final /* synthetic */ /* enum */ MapleBuffStat VENOMSNAKE;
    public static final /* synthetic */ /* enum */ MapleBuffStat FAMILIAR_SHADOW;
    public static final /* synthetic */ /* enum */ MapleBuffStat ABNORMAL_BUFF_RESISTANCES;
    public static final /* synthetic */ /* enum */ MapleBuffStat MESOUP;
    public static final /* synthetic */ /* enum */ MapleBuffStat KAISER_MODE_CHANGE;
    public static final /* synthetic */ /* enum */ MapleBuffStat MAGIC_GUARD;
    public static final /* synthetic */ /* enum */ MapleBuffStat ELEMENTAL_STATUS_R;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_165;
    public static final /* synthetic */ /* enum */ MapleBuffStat PRESSURE_VOID;
    public static final /* synthetic */ /* enum */ MapleBuffStat POTION;
    public static final /* synthetic */ /* enum */ MapleBuffStat DEFAULT_BUFFSTAT;
    public static final /* synthetic */ /* enum */ MapleBuffStat BODY_BOOST;
    public static final /* synthetic */ /* enum */ MapleBuffStat ENHANCED_MAXMP;
    public static final /* synthetic */ /* enum */ MapleBuffStat STR;
    public static final /* synthetic */ /* enum */ MapleBuffStat INDIE_PDD;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_127;
    public static final /* synthetic */ /* enum */ MapleBuffStat MAXMP;
    public static final /* synthetic */ /* enum */ MapleBuffStat CYGNUS_BOMB;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_82;
    public static final /* synthetic */ /* enum */ MapleBuffStat SNATCH;
    public static final /* synthetic */ /* enum */ MapleBuffStat DAMAGE_PERCENT;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_195;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_214;
    public static final /* synthetic */ /* enum */ MapleBuffStat INT;
    public static final /* synthetic */ /* enum */ MapleBuffStat BOUNDLESS_RAGE;
    public static final /* synthetic */ /* enum */ MapleBuffStat SPIRIT_SURGE;
    public static final /* synthetic */ /* enum */ MapleBuffStat SHADOW;
    public static final /* synthetic */ /* enum */ MapleBuffStat KAISER_COMBO;
    public static final /* synthetic */ /* enum */ MapleBuffStat ENERGY_CHARGE;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_215;
    public static final /* synthetic */ /* enum */ MapleBuffStat SPARK;
    public static final /* synthetic */ /* enum */ MapleBuffStat UNKNOWN3;
    public static final /* synthetic */ /* enum */ MapleBuffStat INVINCIBLE;
    public static final /* synthetic */ /* enum */ MapleBuffStat SUMMON;
    public static final /* synthetic */ /* enum */ MapleBuffStat TEMPEST_BLADES;
    public static final /* synthetic */ /* enum */ MapleBuffStat ABSORB_DAMAGE_HP;
    public static final /* synthetic */ /* enum */ MapleBuffStat LUMINOUS_GAUGE;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_198;
    public static final /* synthetic */ /* enum */ MapleBuffStat VAMP_DEATH;
    public static final /* synthetic */ /* enum */ MapleBuffStat SUPPLY_SURPLUS;
    public static final /* synthetic */ /* enum */ MapleBuffStat INFINITY;
    public static final /* synthetic */ /* enum */ MapleBuffStat SATELLITESAFE_PROC;
    public static final /* synthetic */ /* enum */ MapleBuffStat ITEM_EFFECT;
    public static final /* synthetic */ /* enum */ MapleBuffStat MAGNET;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_138;
    public static final /* synthetic */ /* enum */ MapleBuffStat CURSE;
    public static final /* synthetic */ /* enum */ MapleBuffStat GM_HIDE;
    public static final /* synthetic */ /* enum */ MapleBuffStat PAIN_MARK;
    public static final /* synthetic */ /* enum */ MapleBuffStat PYRAMID_PQ;
    public static final /* synthetic */ /* enum */ MapleBuffStat PICKPOCKET;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_220;
    public static final /* synthetic */ /* enum */ MapleBuffStat FINAL_FEINT;
    public static final /* synthetic */ /* enum */ MapleBuffStat BUFF_160;
    public static final /* synthetic */ /* enum */ MapleBuffStat ENERGY_CHARGE2;

    /*
     * WARNING - Possible parameter corruption
     * WARNING - void declaration
     */
    private /* synthetic */ MapleBuffStat(int n2) {
        void a2;
        void var2_-1;
        void var1_-1;
        MapleBuffStat a3;
        MapleBuffStat mapleBuffStat = a3;
        mapleBuffStat.d = a2;
        mapleBuffStat.k = 1 << a2 % 32;
        mapleBuffStat.K = GameSetConstants.MAX_BUFFSTAT - 1 - (int)Math.floor((double)(a2 / 32));
        MapleBuffStat mapleBuffStat2 = a3;
        a3.a = new Long(a3.k) << 32 * (a3.K % 2 + 1);
    }

    public static /* synthetic */ MapleBuffStat valueOf(String a2) {
        return Enum.valueOf(MapleBuffStat.class, a2);
    }

    @Override
    public final /* synthetic */ long getValue() {
        MapleBuffStat a2;
        return a2.k;
    }

    @Override
    public final /* synthetic */ int getPosition() {
        MapleBuffStat a2;
        return a2.getPosition(false);
    }

    public /* synthetic */ int getIDAValue() {
        MapleBuffStat a2;
        return a2.d;
    }

    @Override
    public /* synthetic */ void setValue(long a2) {
        MapleBuffStat a3;
        MapleBuffStat mapleBuffStat = a3;
        mapleBuffStat.d = (int)a2;
        mapleBuffStat.k = 1 << (int)(a2 % 32L);
        mapleBuffStat.K = GameSetConstants.MAX_BUFFSTAT - 1 - (int)Math.floor(a2 / 32L);
        MapleBuffStat mapleBuffStat2 = a3;
        a3.a = new Long(a3.k) << 32 * (a3.K % 2 + 1);
    }

    public /* synthetic */ boolean canStack() {
        MapleBuffStat a2;
        return SkillConstants.isStackBuffStat(a2);
    }

    public static /* synthetic */ MapleBuffStat[] values() {
        return (MapleBuffStat[])ALLATORIxDEMO.clone();
    }

    public static /* synthetic */ {
        WATK = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u001a5\u0019?"), 0, 0);
        WDEF = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("a\u0002s\u0000"), 1, 1);
        MATK = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u00005\u0019?"), 2, 2);
        MDEF = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("{\u0002s\u0000"), 3, 3);
        ACC = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"5\u000e7"), 4, 4);
        AVOID = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0007`\t\u007f\u0002"), 5, 5);
        HANDS = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"<\f:\t'"), 6, 6);
        SPEED = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0015f\u0003s\u0002"), 7, 7);
        JUMP = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u0007!\u0000$"), 8, 8);
        MAGIC_GUARD = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u000bw\u0001\u007f\u0005i\u0001c\u0007d\u0002"), 9, 9);
        DARKSIGHT = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"0\f&\u0006'\u00043\u0005 "), 10, 10);
        BOOSTER = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0004y\te\u0012s\u0014"), 11, 11);
        POWERGUARD = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u001d;\u001a1\u001f3\u00185\u001f0"), 12, 12);
        MAXHP = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u000bw\u001e~\u0016"), 13, 13);
        MAXMP = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"9\f,\u0000$"), 14, 14);
        INVINCIBLE = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u007f\b`\u000fx\u0005\u007f\u0004z\u0003"), 15, 15);
        SOULARROW = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"'\u0002!\u00015\u001f&\u0002#"), 16, 16);
        STUN = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("e\u0012c\b"), 17, 17);
        POISON = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u001d;\u0004'\u0002:"), 18, 18);
        SEAL = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("e\u0003w\n"), 19, 19);
        DARKNESS = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\t5\u001f?\u00031\u001e'"), 20, 20);
        COMBO = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0005y\u000bt\t"), 21, 21);
        SUMMON = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u001e!\u00009\u0002:"), 22, 21);
        WK_CHARGE = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0011}\u0019u\u000ew\u0014q\u0003"), 23, 22);
        DRAGONBLOOD = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"0\u001f5\n;\u00036\u0001;\u00020"), 24, 23);
        HOLY_SYMBOL = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u000ey\no\u0019e\u001f{\u0004y\n"), 25, 24);
        MESOUP = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u00001\u001e;\u0018$"), 26, 25);
        SHADOWPARTNER = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0015~\u0007r\ta\u0016w\u0014b\bs\u0014"), 27, 26);
        PICKPOCKET = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u001d=\u000e?\u001d;\u000e?\b "), 28, 27);
        PUPPET = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("f\u0013f\u0016s\u0012"), 29, 28);
        MESOGUARD = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"9\b'\u00023\u00185\u001f0"), 30, 29);
        HP_LOSS_GUARD = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u000ef\u0019z\te\u0015i\u0001c\u0007d\u0002"), 31, 30);
        WEAKEN = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u001a1\f?\b:"), 32, 30);
        CURSE = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0005c\u0014e\u0003"), 33, 31);
        SLOW = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u001e8\u0002#"), 34, 32);
        MORPH = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u000by\u0014f\u000e"), 35, 33);
        RECOVERY = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u001f1\u000e;\u001b1\u001f-"), 36, 34);
        MAPLE_WARRIOR = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u000bw\u0016z\u0003i\u0011w\u0014d\u000fy\u0014"), 37, 35);
        STANCE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u001e \f:\u000e1"), 38, 36);
        SHARP_EYES = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("e\u000ew\u0014f\u0019s\u001fs\u0015"), 39, 37);
        MANA_REFLECTION = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"9\f:\f+\u001f1\u000b8\b7\u0019=\u0002:"), 40, 38);
        SEDUCE = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("e\u0003r\u0013u\u0003"), 41, 39);
        SPIRIT_CLAW = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"'\u001d=\u001f=\u0019+\u000e8\f#"), 42, 40);
        INFINITY = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u007f\bp\u000fx\u000fb\u001f"), 43, 41);
        HOLY_SHIELD = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"<\u00028\u0014+\u001e<\u00041\u00010"), 44, 42);
        HAMSTRING = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u000ew\u000be\u0012d\u000fx\u0001"), 45, 43);
        BLIND = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"6\u0001=\u00030"), 46, 44);
        CONCENTRATE = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0005y\bu\u0003x\u0012d\u0007b\u0003"), 47, 45);
        ZOMBIFY = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)".\u00029\u000f=\u000b-"), 48, 46);
        ECHO_OF_HERO = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("s\u0005~\ti\tp\u0019~\u0003d\t"), 49, 47);
        UNKNOWN3 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u0018:\u0006:\u0002#\u0003G"), 50, 48);
        GHOST_MORPH = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0001~\te\u0012i\u000by\u0014f\u000e"), 51, 49);
        ARIANT_COSS_IMU = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"5\u001f=\f:\u0019+\u000e;\u001e'\u0012=\u0000!"), 52, 50);
        REVERSE_DIRECTION = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0014s\u0010s\u0014e\u0003i\u0002\u007f\u0014s\u0005b\u000fy\b"), 53, 51);
        DROP_RATE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"0\u001f;\u001d+\u001f5\u00191"), 54, 52);
        MESO_RATE = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u000bs\u0015y\u0019d\u0007b\u0003"), 55, 53);
        EXPRATE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"1\u0015$\u001f5\u00191"), 56, 54);
        EXPRATE_ADD = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0003n\u0016d\u0007b\u0003i\u0007r\u0002"), 57, 54);
        EXP_BUFF_RATE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"1\u0015$\u00126\u00182\u000b+\u001f5\u00191"), 58, 72);
        ALL_MISS = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("w\nz\u0019{\u000fe\u0015"), 59, 178);
        ACASH_RATE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\f7\f'\u0005+\u001f5\u00191"), 60, 55);
        GM_HIDE = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0001{\u0019~\u000fr\u0003"), 61, 56);
        BERSERK_FURY = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f1\u001f'\b&\u0006+\u000b!\u001f-"), 62, 57);
        ILLUSION = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u007f\nz\u0013e\u000fy\b"), 63, 58);
        SPARK = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"'\u001d5\u001f?"), 64, 59);
        DIVINE_BODY = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0002\u007f\u0010\u007f\bs\u0019t\tr\u001f"), 65, 60);
        FINAL_MELEE_ATTACK = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000b=\u00035\u0001+\u00001\u00011\b+\f \u00195\u000e?"), 66, 61);
        FINAL_SHOOT_ATTACK = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("p\u000fx\u0007z\u0019e\u000ey\tb\u0019w\u0012b\u0007u\r"), 67, 62);
        ELEMENT_RESET = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"1\u00011\u00001\u0003 \u0012&\b'\b "), 68, 63);
        WIND_WALK = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0011\u007f\br\u0019a\u0007z\r"), 69, 64);
        UNKNOWN7 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u0018:\u0006:\u0002#\u0003C"), 70, 65);
        ARAN_COMBO = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("w\u0014w\bi\u0005y\u000bt\t"), 71, 66);
        COMBO_DRAIN = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"7\u00029\u000f;\u00120\u001f5\u0004:"), 72, 67);
        COMBO_BARRIER = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0005y\u000bt\ti\u0004w\u0014d\u000fs\u0014"), 73, 68);
        BODY_PRESSURE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"6\u00020\u0014+\u001d&\b'\u001e!\u001f1"), 74, 69);
        SMART_KNOCKBACK = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0015{\u0007d\u0012i\rx\tu\rt\u0007u\r"), 75, 70);
        PYRAMID_PQ = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u001d-\u001f5\u0000=\t+\u001d%"), 76, 71);
        SHADOW = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("e\u000ew\u0002y\u0011"), 77, 72);
        SOUL_STONE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u001e;\u00188\u0012'\u0019;\u00031"), 78, 73);
        WEIRD_FLAME = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0011s\u000fd\u0002i\u0000z\u0007{\u0003"), 79, 74);
        ENERGY_CHARGE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"1\u00031\u001f3\u0014+\u000e<\f&\n1"), 80, 75);
        DASH_SPEED = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("r\u0007e\u000ei\u0015f\u0003s\u0002"), 81, 76);
        DASH_JUMP = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"0\f'\u0005+\u0007!\u0000$"), 82, 77);
        MONSTER_RIDING = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("{\tx\u0015b\u0003d\u0019d\u000fr\u000fx\u0001"), 83, 78);
        SPEED_INFUSION = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u001e$\b1\t+\u0004:\u000b!\u001e=\u0002:"), 84, 79);
        HOMING_BEACON = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u000ey\u000b\u007f\bq\u0019t\u0003w\u0005y\b"), 85, 80);
        DEFAULTBUFF1 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\t1\u000b5\u00188\u00196\u00182\u000bE"), 86, 81);
        DEFAULTBUFF2 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("r\u0003p\u0007c\nb\u0004c\u0000pt"), 87, 82);
        SOARING = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"'\u00025\u001f=\u00033"), 88, 82);
        FREEZE = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("p\u0014s\u0003l\u0003"), 89, 83);
        SHADOWPARTNERX = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u001e<\f0\u0002#\u001d5\u001f \u00031\u001f,"), 90, 83);
        LIGHTNING_CHARGE = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("z\u000fq\u000eb\b\u007f\bq\u0019u\u000ew\u0014q\u0003"), 91, 84);
        MIRROR_IMAGE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u0000=\u001f&\u0002&\u0012=\u00005\n1"), 92, 85);
        OWL_SPIRIT = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("y\u0011z\u0019e\u0016\u007f\u0014\u007f\u0012"), 93, 86);
        MIRROR_TARGET = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"9\u0004&\u001f;\u001f+\u00195\u001f3\b "), 94, 84);
        FINAL_CUT = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0000\u007f\bw\ni\u0005c\u0012"), 95, 86);
        THORNS = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u0019<\u0002&\u0003'"), 96, 87);
        BUFF_71 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0004c\u0000p\u0019\u0001w"), 97, 71);
        MAGIC_SHIELD = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u00005\n=\u000e+\u001e<\u00041\u00010"), 98, 77);
        MAGIC_RESISTANCE = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("{\u0007q\u000fu\u0019d\u0003e\u000fe\u0012w\bu\u0003"), 99, 78);
        BUFF_72 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"6\u00182\u000b+zF"), 100, 72);
        POTION = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("f\tb\u000fy\b"), 101, 73);
        SHADOW2 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"'\u00055\t;\u001aF"), 102, 74);
        BUFF_75 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0004c\u0000p\u0019\u0001s"), 103, 75);
        WEIRD_FLAME2 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u001a1\u0004&\t+\u000b8\f9\bF"), 104, 76);
        BUFF_76 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0004c\u0000p\u0019\u0001p"), 105, 76);
        BUFF_77 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"6\u00182\u000b+zC"), 106, 77);
        BUFF_78 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0004c\u0000p\u0019\u0001~"), 107, 78);
        BUFF_79 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"6\u00182\u000b+zM"), 108, 79);
        BUFF_80 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0004c\u0000p\u0019\u000ev"), 109, 80);
        BUFF_81 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"6\u00182\u000b+uE"), 110, 81);
        BUFF_82 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0004c\u0000p\u0019\u000et"), 111, 82);
        BUFF_83 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"6\u00182\u000b+uG"), 112, 83);
        BUFF_84 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0004c\u0000p\u0019\u000er"), 113, 84);
        ENRAGE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\b:\u001f5\n1"), 114, 85);
        NOT_DAMAGE = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("x\tb\u0019r\u0007{\u0007q\u0003"), 115, 85);
        DAMAGE_BUFF = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"0\f9\f3\b+\u000f!\u000b2"), 116, 87);
        ATTACK_BUFF = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0007b\u0012w\u0005}\u0019t\u0013p\u0000"), 117, 88);
        RAINING_MINES = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"&\f=\u0003=\u00033\u00129\u0004:\b'"), 118, 89);
        ENHANCED_MAXHP = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("s\b~\u0007x\u0005s\u0002i\u000bw\u001e~\u0016"), 119, 90);
        ENHANCED_MAXMP = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\b:\u00055\u00037\b0\u00129\f,\u0000$"), 120, 91);
        ENHANCED_WATK = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0003x\u000ew\bu\u0003r\u0019a\u0007b\r"), 121, 92);
        ENHANCED_MATK = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"1\u0003<\f:\u000e1\t+\u00005\u0019?"), 122, 93);
        ENHANCED_WDEF = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0003x\u000ew\bu\u0003r\u0019a\u0002s\u0000"), 123, 94);
        ENHANCED_MDEF = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"1\u0003<\f:\u000e1\t+\u00000\b2"), 124, 95);
        PERFECT_ARMOR = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0016s\u0014p\u0003u\u0012i\u0007d\u000by\u0014"), 125, 96);
        SATELLITESAFE_PROC = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u001e5\u00191\u00018\u0004 \b'\f2\b+\u001d&\u00027"), 126, 97);
        SATELLITESAFE_ABSORB = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("e\u0007b\u0003z\n\u007f\u0012s\u0015w\u0000s\u0019w\u0004e\td\u0004"), 127, 98);
        TORNADO = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)" \u0002&\u00035\t;"), 128, 99);
        CRITICAL_RATE_BUFF = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("u\u0014\u007f\u0012\u007f\u0005w\ni\u0014w\u0012s\u0019t\u0013p\u0000"), 129, 100);
        MP_BUFF = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"9\u001d+\u000f!\u000b2"), 130, 101);
        DAMAGE_TAKEN_BUFF = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0002w\u000bw\u0001s\u0019b\u0007}\u0003x\u0019t\u0013p\u0000"), 131, 102);
        DODGE_CHANGE_BUFF = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"0\u00020\n1\u00127\u00055\u00033\b+\u000f!\u000b2"), 132, 103);
        CONVERSION = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("u\tx\u0010s\u0014e\u000fy\b"), 133, 104);
        REAPER = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u001f1\f$\b&"), 134, 105);
        INFILTRATE = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u007f\bp\u000fz\u0012d\u0007b\u0003"), 135, 106);
        MECH_CHANGE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"9\b7\u0005+\u000e<\f:\n1"), 136, 107);
        AURA = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("w\u0013d\u0007"), 137, 108);
        DARK_AURA = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"0\f&\u0006+\f!\u001f5"), 138, 109);
        BLUE_AURA = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0004z\u0013s\u0019w\u0013d\u0007"), 139, 110);
        YELLOW_AURA = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"-\b8\u0001;\u001a+\f!\u001f5"), 140, 111);
        BODY_BOOST = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\tr\u001fi\u0004y\te\u0012"), 141, 112);
        FELINE_BERSERK = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000b1\u0001=\u00031\u00126\b&\u001e1\u001f?"), 142, 113);
        DICE_ROLL = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0002\u007f\u0005s\u0019d\tz\n"), 143, 114);
        DIVINE_SHIELD = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"0\u0004\"\u0004:\b+\u001e<\u00041\u00010"), 144, 115);
        DAMAGE_PERCENT = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("r\u0007{\u0007q\u0003i\u0016s\u0014u\u0003x\u0012"), 145, 116);
        TELEPORT_MASTERY = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u00191\u00011\u001d;\u001f \u00129\f'\u00191\u001f-"), 146, 117);
        COMBAT_ORDERS = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0005y\u000bt\u0007b\u0019y\u0014r\u0003d\u0015"), 147, 118);
        BEHOLDER = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f1\u0005;\u00010\b&"), 148, 119);
        DISABLE_POTENTIAL = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0002\u007f\u0015w\u0004z\u0003i\u0016y\u0012s\bb\u000fw\n"), 149, 120);
        GIANT_POTION = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\n=\f:\u0019+\u001d;\u0019=\u0002:"), 150, 121);
        ONYX_SHROUD = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\tx\u001fn\u0019e\u000ed\tc\u0002"), 151, 122);
        ONYX_WILL = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)";\u0003-\u0015+\u001a=\u00018"), 152, 123);
        BLESS = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0004z\u0003e\u0015"), 153, 125);
        CAPTURE_FLAG = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000e5\u001d \u0018&\b+\u000b8\f3"), 154, 130);
        ICE_KNIGHT = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u007f\u0005s\u0019}\b\u007f\u0001~\u0012"), 155, 131);
        STR = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"'\u0019&"), 156, 132);
        INT = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u000fx\u0012"), 157, 133);
        DEX = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"0\b,"), 158, 134);
        LUK = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\nc\r"), 159, 135);
        CYGNUS_BOMB = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"7\u00143\u0003!\u001e+\u000f;\u00006"), 160, 127);
        THREATEN_PVP = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("b\u000ed\u0003w\u0012s\bi\u0016`\u0016"), 161, 128);
        CYGNUS_TORNADO = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000e-\n:\u0018'\u0012 \u0002&\u00035\t;"), 162, 137);
        INDIE_PAD = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u000fx\u0002\u007f\u0003i\u0016w\u0002"), 163, 138);
        INDIE_MAD = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"=\u00030\u00041\u00129\f0"), 164, 139);
        INDIE_HP = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u007f\br\u000fs\u0019~\u0016"), 165, 140);
        INDIE_MP = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u0004:\t=\b+\u0000$"), 166, 141);
        INDIE_ACC = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u000fx\u0002\u007f\u0003i\u0007u\u0005"), 167, 142);
        INDIE_AVOID = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"=\u00030\u00041\u00125\u001b;\u00040"), 168, 143);
        INDIE_JUMP = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u007f\br\u000fs\u0019|\u0013{\u0016"), 169, 144);
        INDIE_SPEED = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"=\u00030\u00041\u0012'\u001d1\b0"), 170, 145);
        INDIE_STAT = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u007f\br\u000fs\u0019e\u0012w\u0012"), 171, 146);
        PVP_DAMAGE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u001d\"\u001d+\t5\u00005\n1"), 172, 147);
        PVP_ATTACK = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("f\u0010f\u0019w\u0012b\u0007u\r"), 173, 148);
        INVINCIBILITY = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"=\u0003\"\u0004:\u000e=\u000f=\u0001=\u0019-"), 174, 149);
        HIDDEN_POTENTIAL = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("~\u000fr\u0002s\bi\u0016y\u0012s\bb\u000fw\n"), 175, 150);
        ELEMENT_WEAKEN = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\b8\b9\b:\u0019+\u001a1\f?\b:"), 176, 151);
        SNATCH = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("e\bw\u0012u\u000e"), 177, 152);
        FROZEN = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000b&\u0002.\b:"), 178, 153);
        ICE_SKILL = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u000fu\u0003i\u0015}\u000fz\n"), 179, 154);
        BOUNDLESS_RAGE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f;\u0018:\t8\b'\u001e+\u001f5\n1"), 180, 157);
        HOLY_MAGIC_SHELL = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("~\tz\u001fi\u000bw\u0001\u007f\u0005i\u0015~\u0003z\n"), 181, 160);
        ARCANE_AIM = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\f&\u000e5\u00031\u00125\u00049"), 182, 162);
        BUFF_MASTERY = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000i\u000bw\u0015b\u0003d\u001f"), 183, 163);
        ABNORMAL_STATUS_R = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"5\u000f:\u0002&\u00005\u0001+\u001e \f \u0018'\u0012&"), 184, 164);
        ELEMENTAL_STATUS_R = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("s\ns\u000bs\bb\u0007z\u0019e\u0012w\u0012c\u0015i\u0014"), 185, 165);
        WATER_SHIELD = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u001a5\u00191\u001f+\u001e<\u00041\u00010"), 186, 166);
        DARK_METAMORPHOSIS = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("r\u0007d\ri\u000bs\u0012w\u000by\u0014f\u000ey\u0015\u007f\u0015"), 187, 167);
        BARREL_ROLL = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"6\f&\u001f1\u0001+\u001f;\u00018"), 188, 168);
        SPIRIT_LINK = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0015f\u000fd\u000fb\u0019z\u000fx\r"), 189, 169);
        INDIE_MDD = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"=\u00030\u00041\u00129\t0"), 190, 173);
        INDIE_PDD = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u000fx\u0002\u007f\u0003i\u0016r\u0002"), 191, 174);
        CRITICAL_INC = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000e&\u0004 \u00047\f8\u0012=\u00037"), 192, 175);
        VIRTUE_EFFECT = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0010\u007f\u0014b\u0013s\u0019s\u0000p\u0003u\u0012"), 193, 176);
        NO_SLIP = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)":\u0002+\u001e8\u0004$"), 194, 180);
        ABSORB_DAMAGE_HP = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("w\u0004e\td\u0004i\u0002w\u000bw\u0001s\u0019~\u0016"), 195, 185);
        DEFENCE_BOOST_R = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"0\b2\b:\u000e1\u00126\u0002;\u001e \u0012&"), 196, 186);
        DEATHMARK = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0002s\u0007b\u000e{\u0007d\r"), 197, 191);
        LAPID_IFICATION = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"8\f$\u00040\u0012=\u000b=\u000e5\u0019=\u0002:"), 198, 193);
        VENOMSNAKE = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("`\u0003x\t{\u0015x\u0007}\u0003"), 199, 194);
        INDIE_BOOSTER = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"=\u00030\u00041\u00126\u0002;\u001e \b&"), 200, 204);
        KILLING_POINT = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\r\u007f\nz\u000fx\u0001i\u0016y\u000fx\u0012"), 201, 209);
        IGNORE_DEF = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u00043\u0003;\u001f1\u00120\b2"), 202, 217);
        FINAL_FEINT = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0000\u007f\bw\ni\u0000s\u000fx\u0012"), 203, 218);
        SHROUD_WALK = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"'\u0005&\u0002!\t+\u001a5\u0001?"), 204, 219);
        CRIT_RATE = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0005d\u000fb\u0019d\u0007b\u0003"), 205, 220);
        CRIT_MIN_DAMAGE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"7\u001f=\u0019+\u0000=\u0003+\t5\u00005\n1"), 206, 221);
        JUDGMENT_DRAW = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\fc\u0002q\u000bs\bb\u0019r\u0014w\u0011"), 207, 222);
        PAIN_MARK = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"$\f=\u0003+\u00005\u001f?"), 208, 225);
        MAGNET = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("{\u0007q\bs\u0012"), 209, 226);
        MAGNET_AREA = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"9\f3\u00031\u0019+\f&\b5"), 210, 227);
        VAMP_DEATH = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("`\u0007{\u0016i\u0002s\u0007b\u000e"), 211, 228);
        PRESSURE_VOID = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"$\u001f1\u001e'\u0018&\b+\u001b;\u00040"), 212, 232);
        LUMINOUS_GAUGE = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("z\u0013{\u000fx\tc\u0015i\u0001w\u0013q\u0003"), 213, 233);
        DARK_CRESCENDO = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\t5\u001f?\u00127\u001f1\u001e7\b:\t;"), 214, 234);
        BLACK_BLESSING = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\nw\u0005}\u0019t\ns\u0015e\u000fx\u0001"), 215, 235);
        ABNORMAL_BUFF_RESISTANCES = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"5\u000f:\u0002&\u00005\u0001+\u000f!\u000b2\u0012&\b'\u0004'\u00195\u00037\b'"), 216, 236);
        LUNAR_TIDE = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("z\u0013x\u0007d\u0019b\u000fr\u0003"), 217, 237);
        KAISER_COMBO = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u00065\u0004'\b&\u00127\u00029\u000f;"), 218, 239);
        GRAND_ARMOR = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0001d\u0007x\u0002i\u0007d\u000by\u0014"), 219, 240);
        KAISER_MODE_CHANGE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u00065\u0004'\b&\u00129\u00020\b+\u000e<\f:\n1"), 220, 241);
        TEMPEST_BLADES = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("b\u0003{\u0016s\u0015b\u0019t\nw\u0002s\u0015"), 221, 244);
        CRIT_DAMAGE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"7\u001f=\u0019+\t5\u00005\n1"), 222, 246);
        DAMAGE_ABSORBED = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0002w\u000bw\u0001s\u0019w\u0004e\td\u0004s\u0002"), 223, 247);
        AFFINITY_SLUG = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"5\u000b2\u0004:\u0004 \u0014+\u001e8\u00183"), 224, 248);
        TRINITY = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0012d\u000fx\u000fb\u001f"), 225, 249);
        DAMAGE_CAP_INCREASE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"0\f9\f3\b+\u000e5\u001d+\u0004:\u000e&\b5\u001e1"), 226, 254);
        SUPPLY_SURPLUS = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("e\u0013f\u0016z\u001fi\u0015c\u0014f\nc\u0015"), 227, 9999);
        EXCEED = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\b,\u000e1\b0"), 228, 9999);
        EXCEED_ATTACK = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0003n\u0005s\u0003r\u0019w\u0012b\u0007u\r"), 229, 9999);
        BUFF_121 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012E\u007fE"), 230, 121);
        BUFF_125 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000iw\u0004s"), 231, 125);
        BUFF_127 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012E\u007fC"), 232, 127);
        BUFF_128 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000iw\u0004~"), 233, 128);
        BUFF_131 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012E~E"), 234, 131);
        BUFF_132 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000iw\u0005t"), 235, 136);
        BUFF_137 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012E~C"), 236, 137);
        BUFF_138 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000iw\u0005~"), 237, 138);
        ANGEL_ATK = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"5\u00033\b8\u00125\u0019?"), 238, 139);
        ANGEL_MATK = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("w\bq\u0003z\u0019{\u0007b\r"), 239, 140);
        HP_BOOST = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u0005$\u00126\u0002;\u001e "), 240, 141);
        MP_BOOST = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("{\u0016i\u0004y\te\u0012"), 241, 142);
        ANGEL_ACC = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"5\u00033\b8\u00125\u000e7"), 242, 143);
        ANGEL_AVOID = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0007x\u0001s\ni\u0007`\t\u007f\u0002"), 243, 144);
        ANGEL_JUMP = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\f:\n1\u0001+\u0007!\u0000$"), 244, 145);
        ANGEL_SPEED = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0007x\u0001s\ni\u0015f\u0003s\u0002"), 245, 146);
        ANGEL_STAT = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\f:\n1\u0001+\u001e \f "), 246, 147);
        ITEM_EFFECT = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u000fb\u0003{\u0019s\u0000p\u0003u\u0012"), 247, 148);
        BUFF_156 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012ExB"), 248, 156);
        BUFF_158 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000iw\u0003~"), 249, 158);
        BUFF_160 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012E{D"), 250, 160);
        BUFF_161 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000iw\u0000w"), 251, 161);
        BUFF_162 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012E{F"), 252, 162);
        BUFF_163 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000iw\u0000u"), 253, 163);
        BUFF_165 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012E{A"), 254, 165);
        HP_BOOST_PERCENT = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("~\u0016i\u0004y\te\u0012i\u0016s\u0014u\u0003x\u0012"), 255, 169);
        MP_BOOST_PERCENT = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u0000$\u00126\u0002;\u001e \u0012$\b&\u000e1\u0003 "), 256, 170);
        BUFF_172 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000iw\u0001t"), 257, 172);
        SPIRIT_SURGE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u001e$\u0004&\u0004 \u0012'\u0018&\n1"), 258, 173);
        BUFF_175 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000iw\u0001s"), 259, 175);
        BUFF_176 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012EzB"), 260, 176);
        BUFF_177 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000iw\u0001q"), 261, 177);
        CRITICAL_RATE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"7\u001f=\u0019=\u000e5\u0001+\u001f5\u00191"), 262, 178);
        FAMILIAR_SHADOW = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0000w\u000b\u007f\n\u007f\u0007d\u0019e\u000ew\u0002y\u0011"), 263, 180);
        SIDEKICK_PASSIVE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u001e=\t1\u0006=\u000e?\u0012$\f'\u001e=\u001b1"), 264, 180);
        BUFF_184 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000iw\u000er"), 265, 184);
        BUFF_185 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012EuA"), 266, 185);
        BUFF_186 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000iw\u000ep"), 267, 186);
        BUFF_187 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012EuC"), 268, 187);
        BUFF_188 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000iw\u000e~"), 269, 188);
        BUFF_189 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012EuM"), 270, 189);
        BUFF_191 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000iw\u000fw"), 271, 191);
        BUFF_192 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012EtF"), 272, 192);
        BUFF_193 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000iw\u000fu"), 273, 193);
        BUFF_194 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012Et@"), 274, 194);
        BUFF_195 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000iw\u000fs"), 275, 195);
        BUFF_196 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012EtB"), 276, 196);
        BUFF_197 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000iw\u000fq"), 277, 197);
        BUFF_198 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012EtL"), 278, 198);
        BUFF_199 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000iw\u000f\u007f"), 279, 199);
        BUFF_200 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012F}D"), 280, 200);
        BUFF_201 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000it\u0006w"), 281, 201);
        BUFF_202 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012F}F"), 282, 202);
        BUFF_203 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000it\u0006u"), 283, 203);
        BUFF_204 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012F}@"), 284, 204);
        BUFF_205 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000it\u0006s"), 285, 205);
        BUFF_206 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012F}B"), 286, 206);
        BUFF_207 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000it\u0006q"), 287, 207);
        BUFF_208 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012F}L"), 288, 208);
        BUFF_209 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000it\u0006\u007f"), 289, 209);
        BUFF_210 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012F|D"), 290, 210);
        BUFF_211 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000it\u0007w"), 291, 211);
        BUFF_212 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012F|F"), 292, 212);
        BUFF_213 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000it\u0007u"), 293, 213);
        BUFF_214 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012F|@"), 294, 214);
        BUFF_215 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000it\u0007s"), 295, 215);
        BUFF_216 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012F|B"), 296, 216);
        BUFF_217 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000it\u0007q"), 297, 217);
        BUFF_218 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012F|L"), 298, 218);
        BUFF_219 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000it\u0007\u007f"), 299, 219);
        BUFF_220 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012F\u007fD"), 300, 220);
        BUFF_221 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000it\u0004w"), 301, 221);
        BUFF_222 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012F\u007fF"), 302, 222);
        BUFF_223 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000it\u0004u"), 303, 223);
        BUFF_224 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012F\u007f@"), 304, 224);
        BUFF_225 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000it\u0004s"), 305, 225);
        BUFF_226 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012F\u007fB"), 306, 226);
        BUFF_227 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("t\u0013p\u0000it\u0004q"), 307, 227);
        BUFF_228 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f!\u000b2\u0012F\u007fL"), 308, 228);
        INDIE_STR = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u000fx\u0002\u007f\u0003i\u0015b\u0014"), 309, 213);
        INDIE_DEX = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"=\u00030\u00041\u00120\b,"), 310, 213);
        INDIE_INT = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u000fx\u0002\u007f\u0003i\u000fx\u0012"), 311, 213);
        INDIE_LUK = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"=\u00030\u00041\u00128\u0018?"), 312, 213);
        ENERGY_CHARGE2 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("s\bs\u0014q\u001fi\u0005~\u0007d\u0001st"), 313, 248);
        DASH_SPEED2 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"0\f'\u0005+\u001e$\b1\tF"), 314, 249);
        DASH_JUMP2 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("r\u0007e\u000ei\fc\u000bft"), 315, 250);
        MONSTER_RIDING2 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"9\u0002:\u001e \b&\u0012&\u00040\u0004:\nF"), 316, 251);
        SPEED_INFUSION2 = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0015f\u0003s\u0002i\u000fx\u0000c\u0015\u007f\txt"), 317, 252);
        HOMING_BEACON2 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u0005;\u0000=\u00033\u00126\b5\u000e;\u0003F"), 318, 253);
        DEFAULT_BUFFSTAT = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("r\u0003p\u0007c\nb\u0019t\u0013p\u0000e\u0012w\u0012"), 319, 254);
        DEFAULT_BUFFSTAT2 = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"0\b2\f!\u0001 \u00126\u00182\u000b'\u00195\u0019F"), 320, 255);
        SOUL_EXALT = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("e\tc\ni\u0003n\u0007z\u0012"), 321, 256);
        COMBO_UNLIMITED = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"7\u00029\u000f;\u0012!\u00038\u00049\u0004 \b0"), 322, 255);
        IGNORE_ALL_COUNTER = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u007f\u0001x\td\u0003i\u0007z\ni\u0005y\u0013x\u0012s\u0014"), 323, 257);
        IGNORE_ALL_IMMUNE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"=\n:\u0002&\b+\f8\u0001+\u00049\u0000!\u00031"), 324, 258);
        SOUL_WEAPON = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0015y\u0013z\u0019a\u0003w\u0016y\b"), 325, 263);
        SOUL_SKILL = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u001e;\u00188\u0012'\u0006=\u00018"), 326, 264);
        RETURN_TELEPORT = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u0014s\u0012c\u0014x\u0019b\u0003z\u0003f\td\u0012"), 327, 266);
        BOSS_DAMAGE_RATE = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"\u000f;\u001e'\u00120\f9\f3\b+\u001f5\u00191"), 328, 270);
        INDIE_DAMAGE_PERCENT = new MapleBuffStat(FixDropNullItem.ALLATORIxDEMO("\u007f\br\u000fs\u0019r\u0007{\u0007q\u0003i\u0016s\u0014u\u0003x\u0012"), 329, 223);
        FINAL_JUDGMENT_DRAW = new MapleBuffStat(\u6bd4\u5947\u8c37.ALLATORIxDEMO((String)"2\u0004:\f8\u0012>\u00180\n9\b:\u0019+\t&\f#"), 330, 259);
        MapleBuffStat[] arrmapleBuffStat = new MapleBuffStat[331];
        arrmapleBuffStat[0] = WATK;
        arrmapleBuffStat[1] = WDEF;
        arrmapleBuffStat[2] = MATK;
        arrmapleBuffStat[3] = MDEF;
        arrmapleBuffStat[4] = ACC;
        arrmapleBuffStat[5] = AVOID;
        arrmapleBuffStat[6] = HANDS;
        arrmapleBuffStat[7] = SPEED;
        arrmapleBuffStat[8] = JUMP;
        arrmapleBuffStat[9] = MAGIC_GUARD;
        arrmapleBuffStat[10] = DARKSIGHT;
        arrmapleBuffStat[11] = BOOSTER;
        arrmapleBuffStat[12] = POWERGUARD;
        arrmapleBuffStat[13] = MAXHP;
        arrmapleBuffStat[14] = MAXMP;
        arrmapleBuffStat[15] = INVINCIBLE;
        arrmapleBuffStat[16] = SOULARROW;
        arrmapleBuffStat[17] = STUN;
        arrmapleBuffStat[18] = POISON;
        arrmapleBuffStat[19] = SEAL;
        arrmapleBuffStat[20] = DARKNESS;
        arrmapleBuffStat[21] = COMBO;
        arrmapleBuffStat[22] = SUMMON;
        arrmapleBuffStat[23] = WK_CHARGE;
        arrmapleBuffStat[24] = DRAGONBLOOD;
        arrmapleBuffStat[25] = HOLY_SYMBOL;
        arrmapleBuffStat[26] = MESOUP;
        arrmapleBuffStat[27] = SHADOWPARTNER;
        arrmapleBuffStat[28] = PICKPOCKET;
        arrmapleBuffStat[29] = PUPPET;
        arrmapleBuffStat[30] = MESOGUARD;
        arrmapleBuffStat[31] = HP_LOSS_GUARD;
        arrmapleBuffStat[32] = WEAKEN;
        arrmapleBuffStat[33] = CURSE;
        arrmapleBuffStat[34] = SLOW;
        arrmapleBuffStat[35] = MORPH;
        arrmapleBuffStat[36] = RECOVERY;
        arrmapleBuffStat[37] = MAPLE_WARRIOR;
        arrmapleBuffStat[38] = STANCE;
        arrmapleBuffStat[39] = SHARP_EYES;
        arrmapleBuffStat[40] = MANA_REFLECTION;
        arrmapleBuffStat[41] = SEDUCE;
        arrmapleBuffStat[42] = SPIRIT_CLAW;
        arrmapleBuffStat[43] = INFINITY;
        arrmapleBuffStat[44] = HOLY_SHIELD;
        arrmapleBuffStat[45] = HAMSTRING;
        arrmapleBuffStat[46] = BLIND;
        arrmapleBuffStat[47] = CONCENTRATE;
        arrmapleBuffStat[48] = ZOMBIFY;
        arrmapleBuffStat[49] = ECHO_OF_HERO;
        arrmapleBuffStat[50] = UNKNOWN3;
        arrmapleBuffStat[51] = GHOST_MORPH;
        arrmapleBuffStat[52] = ARIANT_COSS_IMU;
        arrmapleBuffStat[53] = REVERSE_DIRECTION;
        arrmapleBuffStat[54] = DROP_RATE;
        arrmapleBuffStat[55] = MESO_RATE;
        arrmapleBuffStat[56] = EXPRATE;
        arrmapleBuffStat[57] = EXPRATE_ADD;
        arrmapleBuffStat[58] = EXP_BUFF_RATE;
        arrmapleBuffStat[59] = ALL_MISS;
        arrmapleBuffStat[60] = ACASH_RATE;
        arrmapleBuffStat[61] = GM_HIDE;
        arrmapleBuffStat[62] = BERSERK_FURY;
        arrmapleBuffStat[63] = ILLUSION;
        arrmapleBuffStat[64] = SPARK;
        arrmapleBuffStat[65] = DIVINE_BODY;
        arrmapleBuffStat[66] = FINAL_MELEE_ATTACK;
        arrmapleBuffStat[67] = FINAL_SHOOT_ATTACK;
        arrmapleBuffStat[68] = ELEMENT_RESET;
        arrmapleBuffStat[69] = WIND_WALK;
        arrmapleBuffStat[70] = UNKNOWN7;
        arrmapleBuffStat[71] = ARAN_COMBO;
        arrmapleBuffStat[72] = COMBO_DRAIN;
        arrmapleBuffStat[73] = COMBO_BARRIER;
        arrmapleBuffStat[74] = BODY_PRESSURE;
        arrmapleBuffStat[75] = SMART_KNOCKBACK;
        arrmapleBuffStat[76] = PYRAMID_PQ;
        arrmapleBuffStat[77] = SHADOW;
        arrmapleBuffStat[78] = SOUL_STONE;
        arrmapleBuffStat[79] = WEIRD_FLAME;
        arrmapleBuffStat[80] = ENERGY_CHARGE;
        arrmapleBuffStat[81] = DASH_SPEED;
        arrmapleBuffStat[82] = DASH_JUMP;
        arrmapleBuffStat[83] = MONSTER_RIDING;
        arrmapleBuffStat[84] = SPEED_INFUSION;
        arrmapleBuffStat[85] = HOMING_BEACON;
        arrmapleBuffStat[86] = DEFAULTBUFF1;
        arrmapleBuffStat[87] = DEFAULTBUFF2;
        arrmapleBuffStat[88] = SOARING;
        arrmapleBuffStat[89] = FREEZE;
        arrmapleBuffStat[90] = SHADOWPARTNERX;
        arrmapleBuffStat[91] = LIGHTNING_CHARGE;
        arrmapleBuffStat[92] = MIRROR_IMAGE;
        arrmapleBuffStat[93] = OWL_SPIRIT;
        arrmapleBuffStat[94] = MIRROR_TARGET;
        arrmapleBuffStat[95] = FINAL_CUT;
        arrmapleBuffStat[96] = THORNS;
        arrmapleBuffStat[97] = BUFF_71;
        arrmapleBuffStat[98] = MAGIC_SHIELD;
        arrmapleBuffStat[99] = MAGIC_RESISTANCE;
        arrmapleBuffStat[100] = BUFF_72;
        arrmapleBuffStat[101] = POTION;
        arrmapleBuffStat[102] = SHADOW2;
        arrmapleBuffStat[103] = BUFF_75;
        arrmapleBuffStat[104] = WEIRD_FLAME2;
        arrmapleBuffStat[105] = BUFF_76;
        arrmapleBuffStat[106] = BUFF_77;
        arrmapleBuffStat[107] = BUFF_78;
        arrmapleBuffStat[108] = BUFF_79;
        arrmapleBuffStat[109] = BUFF_80;
        arrmapleBuffStat[110] = BUFF_81;
        arrmapleBuffStat[111] = BUFF_82;
        arrmapleBuffStat[112] = BUFF_83;
        arrmapleBuffStat[113] = BUFF_84;
        arrmapleBuffStat[114] = ENRAGE;
        arrmapleBuffStat[115] = NOT_DAMAGE;
        arrmapleBuffStat[116] = DAMAGE_BUFF;
        arrmapleBuffStat[117] = ATTACK_BUFF;
        arrmapleBuffStat[118] = RAINING_MINES;
        arrmapleBuffStat[119] = ENHANCED_MAXHP;
        arrmapleBuffStat[120] = ENHANCED_MAXMP;
        arrmapleBuffStat[121] = ENHANCED_WATK;
        arrmapleBuffStat[122] = ENHANCED_MATK;
        arrmapleBuffStat[123] = ENHANCED_WDEF;
        arrmapleBuffStat[124] = ENHANCED_MDEF;
        arrmapleBuffStat[125] = PERFECT_ARMOR;
        arrmapleBuffStat[126] = SATELLITESAFE_PROC;
        arrmapleBuffStat[127] = SATELLITESAFE_ABSORB;
        arrmapleBuffStat[128] = TORNADO;
        arrmapleBuffStat[129] = CRITICAL_RATE_BUFF;
        arrmapleBuffStat[130] = MP_BUFF;
        arrmapleBuffStat[131] = DAMAGE_TAKEN_BUFF;
        arrmapleBuffStat[132] = DODGE_CHANGE_BUFF;
        arrmapleBuffStat[133] = CONVERSION;
        arrmapleBuffStat[134] = REAPER;
        arrmapleBuffStat[135] = INFILTRATE;
        arrmapleBuffStat[136] = MECH_CHANGE;
        arrmapleBuffStat[137] = AURA;
        arrmapleBuffStat[138] = DARK_AURA;
        arrmapleBuffStat[139] = BLUE_AURA;
        arrmapleBuffStat[140] = YELLOW_AURA;
        arrmapleBuffStat[141] = BODY_BOOST;
        arrmapleBuffStat[142] = FELINE_BERSERK;
        arrmapleBuffStat[143] = DICE_ROLL;
        arrmapleBuffStat[144] = DIVINE_SHIELD;
        arrmapleBuffStat[145] = DAMAGE_PERCENT;
        arrmapleBuffStat[146] = TELEPORT_MASTERY;
        arrmapleBuffStat[147] = COMBAT_ORDERS;
        arrmapleBuffStat[148] = BEHOLDER;
        arrmapleBuffStat[149] = DISABLE_POTENTIAL;
        arrmapleBuffStat[150] = GIANT_POTION;
        arrmapleBuffStat[151] = ONYX_SHROUD;
        arrmapleBuffStat[152] = ONYX_WILL;
        arrmapleBuffStat[153] = BLESS;
        arrmapleBuffStat[154] = CAPTURE_FLAG;
        arrmapleBuffStat[155] = ICE_KNIGHT;
        arrmapleBuffStat[156] = STR;
        arrmapleBuffStat[157] = INT;
        arrmapleBuffStat[158] = DEX;
        arrmapleBuffStat[159] = LUK;
        arrmapleBuffStat[160] = CYGNUS_BOMB;
        arrmapleBuffStat[161] = THREATEN_PVP;
        arrmapleBuffStat[162] = CYGNUS_TORNADO;
        arrmapleBuffStat[163] = INDIE_PAD;
        arrmapleBuffStat[164] = INDIE_MAD;
        arrmapleBuffStat[165] = INDIE_HP;
        arrmapleBuffStat[166] = INDIE_MP;
        arrmapleBuffStat[167] = INDIE_ACC;
        arrmapleBuffStat[168] = INDIE_AVOID;
        arrmapleBuffStat[169] = INDIE_JUMP;
        arrmapleBuffStat[170] = INDIE_SPEED;
        arrmapleBuffStat[171] = INDIE_STAT;
        arrmapleBuffStat[172] = PVP_DAMAGE;
        arrmapleBuffStat[173] = PVP_ATTACK;
        arrmapleBuffStat[174] = INVINCIBILITY;
        arrmapleBuffStat[175] = HIDDEN_POTENTIAL;
        arrmapleBuffStat[176] = ELEMENT_WEAKEN;
        arrmapleBuffStat[177] = SNATCH;
        arrmapleBuffStat[178] = FROZEN;
        arrmapleBuffStat[179] = ICE_SKILL;
        arrmapleBuffStat[180] = BOUNDLESS_RAGE;
        arrmapleBuffStat[181] = HOLY_MAGIC_SHELL;
        arrmapleBuffStat[182] = ARCANE_AIM;
        arrmapleBuffStat[183] = BUFF_MASTERY;
        arrmapleBuffStat[184] = ABNORMAL_STATUS_R;
        arrmapleBuffStat[185] = ELEMENTAL_STATUS_R;
        arrmapleBuffStat[186] = WATER_SHIELD;
        arrmapleBuffStat[187] = DARK_METAMORPHOSIS;
        arrmapleBuffStat[188] = BARREL_ROLL;
        arrmapleBuffStat[189] = SPIRIT_LINK;
        arrmapleBuffStat[190] = INDIE_MDD;
        arrmapleBuffStat[191] = INDIE_PDD;
        arrmapleBuffStat[192] = CRITICAL_INC;
        arrmapleBuffStat[193] = VIRTUE_EFFECT;
        arrmapleBuffStat[194] = NO_SLIP;
        arrmapleBuffStat[195] = ABSORB_DAMAGE_HP;
        arrmapleBuffStat[196] = DEFENCE_BOOST_R;
        arrmapleBuffStat[197] = DEATHMARK;
        arrmapleBuffStat[198] = LAPID_IFICATION;
        arrmapleBuffStat[199] = VENOMSNAKE;
        arrmapleBuffStat[200] = INDIE_BOOSTER;
        arrmapleBuffStat[201] = KILLING_POINT;
        arrmapleBuffStat[202] = IGNORE_DEF;
        arrmapleBuffStat[203] = FINAL_FEINT;
        arrmapleBuffStat[204] = SHROUD_WALK;
        arrmapleBuffStat[205] = CRIT_RATE;
        arrmapleBuffStat[206] = CRIT_MIN_DAMAGE;
        arrmapleBuffStat[207] = JUDGMENT_DRAW;
        arrmapleBuffStat[208] = PAIN_MARK;
        arrmapleBuffStat[209] = MAGNET;
        arrmapleBuffStat[210] = MAGNET_AREA;
        arrmapleBuffStat[211] = VAMP_DEATH;
        arrmapleBuffStat[212] = PRESSURE_VOID;
        arrmapleBuffStat[213] = LUMINOUS_GAUGE;
        arrmapleBuffStat[214] = DARK_CRESCENDO;
        arrmapleBuffStat[215] = BLACK_BLESSING;
        arrmapleBuffStat[216] = ABNORMAL_BUFF_RESISTANCES;
        arrmapleBuffStat[217] = LUNAR_TIDE;
        arrmapleBuffStat[218] = KAISER_COMBO;
        arrmapleBuffStat[219] = GRAND_ARMOR;
        arrmapleBuffStat[220] = KAISER_MODE_CHANGE;
        arrmapleBuffStat[221] = TEMPEST_BLADES;
        arrmapleBuffStat[222] = CRIT_DAMAGE;
        arrmapleBuffStat[223] = DAMAGE_ABSORBED;
        arrmapleBuffStat[224] = AFFINITY_SLUG;
        arrmapleBuffStat[225] = TRINITY;
        arrmapleBuffStat[226] = DAMAGE_CAP_INCREASE;
        arrmapleBuffStat[227] = SUPPLY_SURPLUS;
        arrmapleBuffStat[228] = EXCEED;
        arrmapleBuffStat[229] = EXCEED_ATTACK;
        arrmapleBuffStat[230] = BUFF_121;
        arrmapleBuffStat[231] = BUFF_125;
        arrmapleBuffStat[232] = BUFF_127;
        arrmapleBuffStat[233] = BUFF_128;
        arrmapleBuffStat[234] = BUFF_131;
        arrmapleBuffStat[235] = BUFF_132;
        arrmapleBuffStat[236] = BUFF_137;
        arrmapleBuffStat[237] = BUFF_138;
        arrmapleBuffStat[238] = ANGEL_ATK;
        arrmapleBuffStat[239] = ANGEL_MATK;
        arrmapleBuffStat[240] = HP_BOOST;
        arrmapleBuffStat[241] = MP_BOOST;
        arrmapleBuffStat[242] = ANGEL_ACC;
        arrmapleBuffStat[243] = ANGEL_AVOID;
        arrmapleBuffStat[244] = ANGEL_JUMP;
        arrmapleBuffStat[245] = ANGEL_SPEED;
        arrmapleBuffStat[246] = ANGEL_STAT;
        arrmapleBuffStat[247] = ITEM_EFFECT;
        arrmapleBuffStat[248] = BUFF_156;
        arrmapleBuffStat[249] = BUFF_158;
        arrmapleBuffStat[250] = BUFF_160;
        arrmapleBuffStat[251] = BUFF_161;
        arrmapleBuffStat[252] = BUFF_162;
        arrmapleBuffStat[253] = BUFF_163;
        arrmapleBuffStat[254] = BUFF_165;
        arrmapleBuffStat[255] = HP_BOOST_PERCENT;
        arrmapleBuffStat[256] = MP_BOOST_PERCENT;
        arrmapleBuffStat[257] = BUFF_172;
        arrmapleBuffStat[258] = SPIRIT_SURGE;
        arrmapleBuffStat[259] = BUFF_175;
        arrmapleBuffStat[260] = BUFF_176;
        arrmapleBuffStat[261] = BUFF_177;
        arrmapleBuffStat[262] = CRITICAL_RATE;
        arrmapleBuffStat[263] = FAMILIAR_SHADOW;
        arrmapleBuffStat[264] = SIDEKICK_PASSIVE;
        arrmapleBuffStat[265] = BUFF_184;
        arrmapleBuffStat[266] = BUFF_185;
        arrmapleBuffStat[267] = BUFF_186;
        arrmapleBuffStat[268] = BUFF_187;
        arrmapleBuffStat[269] = BUFF_188;
        arrmapleBuffStat[270] = BUFF_189;
        arrmapleBuffStat[271] = BUFF_191;
        arrmapleBuffStat[272] = BUFF_192;
        arrmapleBuffStat[273] = BUFF_193;
        arrmapleBuffStat[274] = BUFF_194;
        arrmapleBuffStat[275] = BUFF_195;
        arrmapleBuffStat[276] = BUFF_196;
        arrmapleBuffStat[277] = BUFF_197;
        arrmapleBuffStat[278] = BUFF_198;
        arrmapleBuffStat[279] = BUFF_199;
        arrmapleBuffStat[280] = BUFF_200;
        arrmapleBuffStat[281] = BUFF_201;
        arrmapleBuffStat[282] = BUFF_202;
        arrmapleBuffStat[283] = BUFF_203;
        arrmapleBuffStat[284] = BUFF_204;
        arrmapleBuffStat[285] = BUFF_205;
        arrmapleBuffStat[286] = BUFF_206;
        arrmapleBuffStat[287] = BUFF_207;
        arrmapleBuffStat[288] = BUFF_208;
        arrmapleBuffStat[289] = BUFF_209;
        arrmapleBuffStat[290] = BUFF_210;
        arrmapleBuffStat[291] = BUFF_211;
        arrmapleBuffStat[292] = BUFF_212;
        arrmapleBuffStat[293] = BUFF_213;
        arrmapleBuffStat[294] = BUFF_214;
        arrmapleBuffStat[295] = BUFF_215;
        arrmapleBuffStat[296] = BUFF_216;
        arrmapleBuffStat[297] = BUFF_217;
        arrmapleBuffStat[298] = BUFF_218;
        arrmapleBuffStat[299] = BUFF_219;
        arrmapleBuffStat[300] = BUFF_220;
        arrmapleBuffStat[301] = BUFF_221;
        arrmapleBuffStat[302] = BUFF_222;
        arrmapleBuffStat[303] = BUFF_223;
        arrmapleBuffStat[304] = BUFF_224;
        arrmapleBuffStat[305] = BUFF_225;
        arrmapleBuffStat[306] = BUFF_226;
        arrmapleBuffStat[307] = BUFF_227;
        arrmapleBuffStat[308] = BUFF_228;
        arrmapleBuffStat[309] = INDIE_STR;
        arrmapleBuffStat[310] = INDIE_DEX;
        arrmapleBuffStat[311] = INDIE_INT;
        arrmapleBuffStat[312] = INDIE_LUK;
        arrmapleBuffStat[313] = ENERGY_CHARGE2;
        arrmapleBuffStat[314] = DASH_SPEED2;
        arrmapleBuffStat[315] = DASH_JUMP2;
        arrmapleBuffStat[316] = MONSTER_RIDING2;
        arrmapleBuffStat[317] = SPEED_INFUSION2;
        arrmapleBuffStat[318] = HOMING_BEACON2;
        arrmapleBuffStat[319] = DEFAULT_BUFFSTAT;
        arrmapleBuffStat[320] = DEFAULT_BUFFSTAT2;
        arrmapleBuffStat[321] = SOUL_EXALT;
        arrmapleBuffStat[322] = COMBO_UNLIMITED;
        arrmapleBuffStat[323] = IGNORE_ALL_COUNTER;
        arrmapleBuffStat[324] = IGNORE_ALL_IMMUNE;
        arrmapleBuffStat[325] = SOUL_WEAPON;
        arrmapleBuffStat[326] = SOUL_SKILL;
        arrmapleBuffStat[327] = RETURN_TELEPORT;
        arrmapleBuffStat[328] = BOSS_DAMAGE_RATE;
        arrmapleBuffStat[329] = INDIE_DAMAGE_PERCENT;
        arrmapleBuffStat[330] = FINAL_JUDGMENT_DRAW;
        ALLATORIxDEMO = arrmapleBuffStat;
    }

    /*
     * Exception decompiling
     */
    public static final /* synthetic */ void reloadValues() {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [1[TRYBLOCK], 3[TRYBLOCK]], but top level block is 10[CATCHBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    /*
     * Enabled aggressive block sorting
     */
    public final /* synthetic */ int getPosition(boolean a2) {
        MapleBuffStat a3;
        if (!a2) {
            if (a3.K < 0) {
                a3.K = GameSetConstants.MAX_BUFFSTAT - 1 - (int)Math.floor(a3.d / 32);
            }
            return a3.K;
        }
        switch (a3.K) {
            case 8: {
                return 0;
            }
            case 7: {
                return 1;
            }
            case 6: {
                return 2;
            }
            case 5: {
                return 3;
            }
            case 4: {
                return 4;
            }
            case 3: {
                return 5;
            }
            case 2: {
                return 6;
            }
            case 1: {
                return 7;
            }
        }
        return 0;
    }

    public final /* synthetic */ long getOldValue() {
        MapleBuffStat a2;
        return a2.a;
    }
}

