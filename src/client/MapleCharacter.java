/*
 * Decompiled with CFR 0.150.
 * 
 * Could not load the following classes:
 *  com.alibaba.druid.pool.DruidPooledConnection
 *  constants.ItemConstants$\u985e\u578b
 */
package client;

import client.BuddyEntry;
import client.BuddyList;
import client.ISkill;
import client.ItemVac;
import client.LoginCrypto;
import client.MapleBuffStatValueHolder;
import client.MapleCharacterUtil;
import client.MapleClient;
import client.MapleCoolDownValueHolder;
import client.MapleCoreAura;
import client.MapleDisease;
import client.MapleDiseaseValueHolder;
import client.MapleFriendship;
import client.MapleJob;
import client.MapleKeyLayout;
import client.MapleLieDetector;
import client.MapleQuestStatus;
import client.MapleStat;
import client.MapleTrait;
import client.MonsterBook;
import client.MonsterFamiliar;
import client.PlayerRandomStream;
import client.PlayerStats;
import client.RockPaperScissors;
import client.SkillEntry;
import client.SkillFactory;
import client.SkillMacro;
import client.SpecialBuffInfo;
import client.anticheat.CheatTracker;
import client.anticheat.CheatingOffense;
import client.innerSkills.InnerSkillValueHolder;
import client.inventory.ChairDataFactory;
import client.inventory.Equip;
import client.inventory.IItem;
import client.inventory.Item;
import client.inventory.ItemFlag;
import client.inventory.ItemLoader;
import client.inventory.MapleAndroid;
import client.inventory.MapleImp;
import client.inventory.MapleInventory;
import client.inventory.MapleInventoryIdentifier;
import client.inventory.MapleInventoryIdentifierPet;
import client.inventory.MapleInventoryType;
import client.inventory.MapleMount;
import client.inventory.MaplePet;
import client.inventory.MapleRing;
import client.inventory.ModifyInventory;
import client.messages.commands.GMCommand;
import client.status.MonsterStatus;
import client.status.MonsterStatusEffect;
import com.alibaba.druid.pool.DruidPooledConnection;
import constants.GameConstants;
import constants.GameSetConstants;
import constants.ItemConstants;
import constants.JobConstants;
import constants.MapConstants;
import constants.MobConstants;
import constants.ServerConfig;
import constants.ServerConstants;
import constants.ServerTempStorage;
import constants.SkillConstants;
import database.DBConPool;
import database.DatabaseException;
import handling.channel.ChannelServer;
import handling.channel.MapleRanking;
import handling.channel.handler.AttackInfo;
import handling.channel.handler.MovementParse;
import handling.channel.handler.PlayerHandler;
import handling.channel.handler.UserInterfaceHandler;
import handling.login.LoginInformationProvider;
import handling.login.LoginServer;
import handling.opcodes.MapleBuffStat;
import handling.opcodes.PartyOperation;
import handling.opcodes.SpecialEffect;
import handling.world.CharacterTransfer;
import handling.world.MapleMessenger;
import handling.world.MapleMessengerCharacter;
import handling.world.MapleParty;
import handling.world.MaplePartyCharacter;
import handling.world.PlayerBuffStorage;
import handling.world.PlayerBuffValueHolder;
import handling.world.World;
import handling.world.family.MapleFamily;
import handling.world.family.MapleFamilyBuff;
import handling.world.family.MapleFamilyCharacter;
import handling.world.guild.MapleGuild;
import handling.world.guild.MapleGuildCharacter;
import handling.world.sidekick.MapleSidekick;
import java.awt.Point;
import java.awt.Rectangle;
import java.io.Serializable;
import java.lang.ref.WeakReference;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.Deque;
import java.util.EnumMap;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Random;
import java.util.Set;
import java.util.concurrent.RejectedExecutionException;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.locks.ReentrantLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import scripting.event.EventInstanceManager;
import scripting.npc.NPCConversationManager;
import scripting.npc.NPCScriptManager;
import server.AutobanManager;
import server.CashShop;
import server.FishingRewardFactory;
import server.Framework.MapleExtendedSlots;
import server.MapleAchievements;
import server.MapleCarnivalChallenge;
import server.MapleCarnivalParty;
import server.MapleInventoryManipulator;
import server.MapleItemInformationProvider;
import server.MaplePortal;
import server.MapleShop;
import server.MapleShopItem;
import server.MapleStatEffect;
import server.MapleStorage;
import server.MapleStorageType;
import server.MapleTrade;
import server.Randomizer;
import server.Timer;
import server.characterCards.CardData;
import server.characterCards.MapleCharacterCards;
import server.game.BlackJack;
import server.game.Cryptocurrency;
import server.game.NiuNiu;
import server.life.MapleLifeFactory;
import server.life.MapleMonster;
import server.life.MapleMonsterInformationProvider;
import server.life.MapleMonsterPet;
import server.life.MapleNPC;
import server.life.MobSkill;
import server.life.MobSkillFactory;
import server.life.PlayerNPC;
import server.life.SummonAttackEntry;
import server.maps.AbstractAnimatedMapleMapObject;
import server.maps.AbstractMapleMapObject;
import server.maps.Event_PyramidSubway;
import server.maps.FieldLimitType;
import server.maps.MapleDoor;
import server.maps.MapleDragon;
import server.maps.MapleExtractor;
import server.maps.MapleFoothold;
import server.maps.MapleMap;
import server.maps.MapleMapFactory;
import server.maps.MapleMapObject;
import server.maps.MapleMapObjectType;
import server.maps.MapleNodes;
import server.maps.MapleReactor;
import server.maps.MapleSummon;
import server.maps.MechDoor;
import server.maps.SavedLocationType;
import server.movement.LifeMovementFragment;
import server.quest.MapleQuest;
import server.shops.HiredFishing;
import server.shops.HiredMerchant;
import server.shops.IMaplePlayerShop;
import server.shops.MaplePlayerShopItem;
import tools.ConcurrentEnumMap;
import tools.FilePrinter;
import tools.FileoutputUtil;
import tools.FixDropNullItem;
import tools.HexTool;
import tools.IpGeoLocation;
import tools.JsonMapConverter;
import tools.MaplePacketCreator;
import tools.MockIOSession;
import tools.Pair;
import tools.StringTool;
import tools.Triple;
import tools.data.MaplePacketLittleEndianWriter;
import tools.packet.BeansPacket;
import tools.packet.JobPacket;
import tools.packet.MTSCSPacket;
import tools.packet.MobPacket;
import tools.packet.MonsterCarnivalPacket;
import tools.packet.PetPacket;
import tools.packet.PlayerShopPacket;
import tools.packet.UIPacket;
import tools.sms.Nexmo;

/*
 * Exception performing whole class analysis ignored.
 */
public class MapleCharacter
extends AbstractAnimatedMapleMapObject
implements Serializable {
    private /* synthetic */ byte s;
    private /* synthetic */ boolean TC;
    private /* synthetic */ String UC;
    private /* synthetic */ MapleMonsterPet ka;
    private /* synthetic */ short qd;
    private /* synthetic */ int XC;
    private /* synthetic */ int ZA;
    private /* synthetic */ int HC;
    private /* synthetic */ boolean Fd;
    private /* synthetic */ long zB;
    private /* synthetic */ boolean xa;
    private /* synthetic */ boolean fa;
    private /* synthetic */ List<Integer> oC;
    private /* synthetic */ int nA;
    private /* synthetic */ boolean ca;
    private /* synthetic */ MapleCharacterCards V;
    private /* synthetic */ long pa;
    private /* synthetic */ boolean Ec;
    private /* synthetic */ int Bd;
    private /* synthetic */ List<MapleExtendedSlots> Ma;
    private /* synthetic */ List<IItem> ea;
    private transient /* synthetic */ ReentrantReadWriteLock Zb;
    private /* synthetic */ int Yc;
    private /* synthetic */ int Sc;
    private /* synthetic */ int fd;
    private /* synthetic */ boolean cc;
    private /* synthetic */ boolean BB;
    private /* synthetic */ long md;
    private /* synthetic */ boolean YB;
    private transient /* synthetic */ MapleMap rC;
    private /* synthetic */ MapleMount bc;
    private /* synthetic */ boolean Pb;
    private /* synthetic */ int zc;
    private transient /* synthetic */ EventInstanceManager Uc;
    private transient /* synthetic */ List<Integer> jb;
    private /* synthetic */ long Jb;
    private static final /* synthetic */ long fC = 845748950829L;
    private /* synthetic */ byte jB;
    private /* synthetic */ byte id;
    private /* synthetic */ boolean r;
    private /* synthetic */ MapleStorage gb;
    private /* synthetic */ int h;
    private /* synthetic */ int H;
    private /* synthetic */ long Ua;
    private /* synthetic */ boolean IA;
    private /* synthetic */ MapleReactor hb;
    private /* synthetic */ List<MapleShopItem> Ha;
    private /* synthetic */ int Xa;
    private /* synthetic */ int J;
    public /* synthetic */ List<Integer> EA;
    private /* synthetic */ boolean qB;
    private transient /* synthetic */ MapleExtractor Mc;
    private /* synthetic */ int pb;
    private /* synthetic */ int[] ZC;
    private /* synthetic */ boolean Pc;
    private transient /* synthetic */ ScheduledFuture<?> Ed;
    private /* synthetic */ int i;
    private /* synthetic */ boolean KB;
    private /* synthetic */ int[] RB;
    private /* synthetic */ short iA;
    private /* synthetic */ int oA;
    private /* synthetic */ byte uA;
    private /* synthetic */ long Ya;
    private /* synthetic */ boolean NC;
    private /* synthetic */ int VB;
    private static final /* synthetic */ ReentrantLock NB;
    private /* synthetic */ long Ga;
    private /* synthetic */ boolean aA;
    private static final /* synthetic */ HashMap<Integer, List<MapleBuffStatValueHolder>> AB;
    private /* synthetic */ boolean Rc;
    private /* synthetic */ boolean da;
    private /* synthetic */ boolean BA;
    private /* synthetic */ int fA;
    private transient /* synthetic */ MapleCarnivalParty YC;
    private /* synthetic */ String lb;
    private /* synthetic */ boolean rd;
    private /* synthetic */ boolean wb;
    private /* synthetic */ short od;
    private /* synthetic */ int[] Gd;
    private /* synthetic */ boolean bA;
    private /* synthetic */ byte yc;
    private /* synthetic */ byte jd;
    private /* synthetic */ boolean Q;
    private transient /* synthetic */ MapleAndroid Da;
    private /* synthetic */ int z;
    private /* synthetic */ boolean d;
    private transient /* synthetic */ IMaplePlayerShop bb;
    private transient /* synthetic */ HiredFishing va;
    private /* synthetic */ boolean rc;
    private /* synthetic */ boolean vC;
    private /* synthetic */ int[] Gb;
    private /* synthetic */ EnumMap<MapleTrait.MapleTraitType, MapleTrait> Ta;
    private /* synthetic */ boolean VC;
    private /* synthetic */ long yB;
    private /* synthetic */ long tc;
    private /* synthetic */ long eb;
    private /* synthetic */ boolean Ub;
    private /* synthetic */ long a;
    private /* synthetic */ long Qa;
    private /* synthetic */ long iB;
    private /* synthetic */ short IB;
    private /* synthetic */ boolean vc;
    private /* synthetic */ int D;
    private /* synthetic */ String SA;
    private /* synthetic */ int EC;
    private /* synthetic */ boolean TB;
    private /* synthetic */ int Va;
    private /* synthetic */ boolean WB;
    private /* synthetic */ long K;
    private /* synthetic */ int Ob;
    private /* synthetic */ int uC;
    private /* synthetic */ long B;
    private /* synthetic */ byte[] HB;
    private /* synthetic */ boolean oa;
    private transient /* synthetic */ Set<MapleMapObject> MB;
    private final /* synthetic */ List<Integer> lc;
    private /* synthetic */ int j;
    private /* synthetic */ Map<Integer, MonsterFamiliar> ja;
    private /* synthetic */ boolean Ib;
    private /* synthetic */ long Id;
    private /* synthetic */ long eB;
    private /* synthetic */ short Xc;
    private /* synthetic */ boolean Hc;
    private /* synthetic */ Map<String, Long> Ca;
    private transient /* synthetic */ List<SpecialBuffInfo> p;
    private /* synthetic */ boolean F;
    private /* synthetic */ String v;
    private /* synthetic */ boolean b;
    private /* synthetic */ long sa;
    private /* synthetic */ int m;
    private /* synthetic */ long Za;
    private /* synthetic */ boolean DA;
    private /* synthetic */ int pc;
    private /* synthetic */ Map<Integer, String> CA;
    private /* synthetic */ boolean gd;
    private /* synthetic */ int Nd;
    private transient /* synthetic */ MapleTrade vb;
    private /* synthetic */ MapleParty ed;
    private /* synthetic */ List<Integer> G;
    private transient /* synthetic */ AtomicInteger cb;
    private /* synthetic */ byte aB;
    private /* synthetic */ boolean Xb;
    private transient /* synthetic */ CheatTracker LB;
    private /* synthetic */ String cB;
    private /* synthetic */ long ra;
    private /* synthetic */ long qa;
    private /* synthetic */ boolean Ac;
    private /* synthetic */ long g;
    private /* synthetic */ int Nb;
    private transient /* synthetic */ Event_PyramidSubway Fb;
    private /* synthetic */ int x;
    private /* synthetic */ String T;
    private /* synthetic */ long bC;
    private /* synthetic */ MapleSidekick Ia;
    private /* synthetic */ BlackJack.BlackJackResultInfo ia;
    private /* synthetic */ boolean Od;
    private /* synthetic */ int[] xb;
    private /* synthetic */ int Qc;
    private /* synthetic */ int CB;
    private /* synthetic */ int KC;
    private /* synthetic */ MapleImp[] uc;
    private /* synthetic */ Map<MapleStorageType, MapleStorage> mC;
    private /* synthetic */ MapleCoreAura q;
    private /* synthetic */ int dB;
    private final transient /* synthetic */ Map<Integer, Integer> Kd;
    private /* synthetic */ boolean rB;
    private /* synthetic */ boolean Ra;
    private /* synthetic */ String ma;
    private /* synthetic */ boolean I;
    private /* synthetic */ int Kc;
    private /* synthetic */ int AC;
    private /* synthetic */ boolean Hd;
    private transient /* synthetic */ MapleDragon PB;
    private /* synthetic */ int wA;
    private /* synthetic */ int Sa;
    private /* synthetic */ int mc;
    private final transient /* synthetic */ Map<MapleBuffStat, MapleDiseaseValueHolder> qc;
    private /* synthetic */ int QC;
    private /* synthetic */ MonsterBook qA;
    private transient /* synthetic */ MapleShop pA;
    private /* synthetic */ String pd;
    private /* synthetic */ List<Point> C;
    private /* synthetic */ byte WA;
    private /* synthetic */ boolean ub;
    private /* synthetic */ long Ad;
    private /* synthetic */ int O;
    private /* synthetic */ List<MechDoor> Dd;
    private /* synthetic */ boolean sd;
    private /* synthetic */ int hA;
    private /* synthetic */ int kB;
    private /* synthetic */ Point cC;
    private /* synthetic */ MapleClient Cb;
    private /* synthetic */ int RC;
    private /* synthetic */ long Z;
    private /* synthetic */ boolean rb;
    private /* synthetic */ int HA;
    private /* synthetic */ short ob;
    private /* synthetic */ int Cc;
    private /* synthetic */ boolean Bc;
    private /* synthetic */ long Wa;
    private /* synthetic */ Map<Integer, Integer> la;
    private /* synthetic */ int FB;
    private /* synthetic */ int Ld;
    private /* synthetic */ int nC;
    private /* synthetic */ int RA;
    private /* synthetic */ Map<String, Long> Fa;
    private /* synthetic */ int l;
    private /* synthetic */ PlayerStats GB;
    private /* synthetic */ int Nc;
    private /* synthetic */ long E;
    private /* synthetic */ int ta;
    private /* synthetic */ boolean Rd;
    private /* synthetic */ List<Pair<Integer, Boolean>> y;
    private /* synthetic */ int vA;
    private /* synthetic */ int[] DB;
    private /* synthetic */ int mB;
    private /* synthetic */ long ic;
    private /* synthetic */ boolean oc;
    private /* synthetic */ boolean UA;
    private transient /* synthetic */ List<Integer> yA;
    private /* synthetic */ String vB;
    private final transient /* synthetic */ Map<MapleBuffStat, MapleBuffStatValueHolder> kb;
    private /* synthetic */ String tb;
    private /* synthetic */ byte ALLATORIxDEMO;
    private /* synthetic */ boolean Qd;
    private /* synthetic */ ItemVac dc;
    private /* synthetic */ boolean ab;
    private /* synthetic */ String oB;
    private /* synthetic */ int Ea;
    private /* synthetic */ int PA;
    private /* synthetic */ long P;
    private /* synthetic */ int KA;
    private /* synthetic */ List<InnerSkillValueHolder> u;
    private /* synthetic */ int dA;
    private /* synthetic */ int Ba;
    private /* synthetic */ BuddyList tB;
    private /* synthetic */ int Y;
    private /* synthetic */ MapleFamilyCharacter JC;
    private /* synthetic */ MapleMessenger hB;
    private /* synthetic */ short qC;
    private transient /* synthetic */ ScheduledFuture<?> Mb;
    private /* synthetic */ int[] X;
    private /* synthetic */ int f;
    private /* synthetic */ byte bB;
    private /* synthetic */ int Tc;
    private /* synthetic */ int Lc;
    private /* synthetic */ List<MapleDoor> Sb;
    private /* synthetic */ int VA;
    private /* synthetic */ boolean JA;
    private /* synthetic */ String tC;
    private /* synthetic */ int ld;
    private /* synthetic */ int QA;
    private /* synthetic */ Map<String, Long> ga;
    private /* synthetic */ int Ab;
    private /* synthetic */ long n;
    private /* synthetic */ int pC;
    private /* synthetic */ String Oa;
    private /* synthetic */ long wa;
    private transient /* synthetic */ WeakReference<MapleCharacter>[] qb;
    private /* synthetic */ int fB;
    private /* synthetic */ int[] JB;
    private transient /* synthetic */ RockPaperScissors TA;
    private /* synthetic */ int hd;
    private /* synthetic */ String M;
    private /* synthetic */ int db;
    private /* synthetic */ boolean dd;
    private /* synthetic */ int cA;
    private /* synthetic */ int[] yb;
    private /* synthetic */ String N;
    private transient /* synthetic */ ReentrantReadWriteLock AA;
    private /* synthetic */ boolean nB;
    private transient /* synthetic */ Set<MapleMonster> CC;
    private transient /* synthetic */ List<LifeMovementFragment> Tb;
    private /* synthetic */ int jc;
    private /* synthetic */ boolean zb;
    private /* synthetic */ int MC;
    private /* synthetic */ int Qb;
    private /* synthetic */ short gc;
    private /* synthetic */ MonsterFamiliar ba;
    private /* synthetic */ int pB;
    private /* synthetic */ int xC;
    private /* synthetic */ long aa;
    private /* synthetic */ int[] Cd;
    private /* synthetic */ short IC;
    private /* synthetic */ MapleKeyLayout Pd;
    private /* synthetic */ CashShop nd;
    private /* synthetic */ int sb;
    private /* synthetic */ int kC;
    private /* synthetic */ MapleGuildCharacter Rb;
    private /* synthetic */ NiuNiu.NiuNiuResultInfo La;
    private /* synthetic */ int SB;
    private /* synthetic */ int Na;
    private /* synthetic */ String S;
    private /* synthetic */ boolean EB;
    private /* synthetic */ boolean fc;
    private /* synthetic */ SkillMacro[] rA;
    private /* synthetic */ int sC;
    private /* synthetic */ long t;
    private /* synthetic */ boolean ec;
    private final /* synthetic */ Map<MapleQuest, MapleQuestStatus> XB;
    private /* synthetic */ String OB;
    private /* synthetic */ boolean gC;
    private transient /* synthetic */ Deque<MapleCarnivalChallenge> Kb;
    private /* synthetic */ int[] FC;
    private /* synthetic */ int Aa;
    private /* synthetic */ long wC;
    private /* synthetic */ long bd;
    private /* synthetic */ int[] fb;
    private /* synthetic */ boolean Yb;
    private /* synthetic */ int ad;
    private /* synthetic */ boolean Lb;
    private /* synthetic */ boolean o;
    private /* synthetic */ int Ja;
    private /* synthetic */ int[] nc;
    private /* synthetic */ String R;
    private transient /* synthetic */ HashMap<Integer, Long> k;
    private transient /* synthetic */ List<MapleSummon> Hb;
    public /* synthetic */ List<Integer> Oc;
    private /* synthetic */ byte zC;
    private /* synthetic */ int hC;
    private /* synthetic */ byte wc;
    private /* synthetic */ byte iC;
    private /* synthetic */ short jA;
    private /* synthetic */ long ac;
    private /* synthetic */ String uB;
    private /* synthetic */ boolean Ic;
    private /* synthetic */ List<MaplePet> Md;
    private /* synthetic */ int wB;
    private transient /* synthetic */ PlayerRandomStream Vc;
    private /* synthetic */ int lB;
    private /* synthetic */ int U;
    private final /* synthetic */ Map<ISkill, SkillEntry> sB;
    private /* synthetic */ boolean kc;
    private /* synthetic */ boolean OA;
    private final transient /* synthetic */ Map<Integer, MapleCoolDownValueHolder> kA;
    private transient /* synthetic */ Map<Integer, Integer> Ka;
    private /* synthetic */ boolean yC;
    private /* synthetic */ int Jd;
    private transient /* synthetic */ ScheduledFuture<?> UB;
    public /* synthetic */ List<Integer> gA;
    private /* synthetic */ long w;
    private /* synthetic */ MapleInventory[] LA;
    private /* synthetic */ long ua;
    private /* synthetic */ int c;
    private /* synthetic */ boolean tA;
    private /* synthetic */ long Pa;
    private /* synthetic */ boolean xB;
    private /* synthetic */ boolean ha;
    private /* synthetic */ boolean Jc;
    private /* synthetic */ long e;
    private /* synthetic */ MapleStorageType DC;
    private transient /* synthetic */ MapleLieDetector lA;
    private /* synthetic */ boolean lC;
    private /* synthetic */ byte LC;
    private /* synthetic */ int L;
    private /* synthetic */ String Dc;
    private /* synthetic */ boolean za;
    private /* synthetic */ String ya;
    private /* synthetic */ int xc;
    private /* synthetic */ int sA;
    private /* synthetic */ boolean zA;
    private /* synthetic */ int A;
    private /* synthetic */ short sc;
    private /* synthetic */ EnumMap<MapleFriendship.MapleFriendshipType, MapleFriendship> na;
    private /* synthetic */ long W;

    public /* synthetic */ boolean isRight() {
        MapleCharacter a2;
        return a2.Ld <= 0;
    }

    public /* synthetic */ Map<MapleStorageType, MapleStorage> getStorageExceed() {
        MapleCharacter a2;
        return a2.mC;
    }

    public /* synthetic */ void addMove() {
        MapleCharacter mapleCharacter;
        block2: {
            MapleCharacter a2;
            block1: {
                block0: {
                    if (a2.B <= 0L) break block0;
                    if (System.currentTimeMillis() - a2.B <= 15000L) break block1;
                    mapleCharacter = a2;
                    a2.B = System.currentTimeMillis();
                    a2.H = 0;
                    break block2;
                }
                a2.B = System.currentTimeMillis();
            }
            mapleCharacter = a2;
        }
        ++mapleCharacter.H;
    }

    public /* synthetic */ String getTeleportName() {
        MapleCharacter a2;
        return a2.tb;
    }

    public /* synthetic */ void setCharm(int a2) {
        a.VA = a2;
    }

    public /* synthetic */ long getMonsterKillToday() {
        MapleCharacter a2;
        return a2.getCharacterSetToday(MapleNodes.ALLATORIxDEMO("\u6024\u7245\u64c4\u6b96"), false);
    }

    public /* synthetic */ void setCharacterSet(String a2, long a3, boolean a4) {
        MapleCharacter mapleCharacter;
        MapleCharacter a5;
        if (a4) {
            MapleCharacter mapleCharacter2 = a5;
            a5.Ca.remove(a2);
            mapleCharacter = mapleCharacter2;
            mapleCharacter2.Ca.put(a2, a3);
        } else {
            MapleCharacter mapleCharacter3 = a5;
            mapleCharacter = mapleCharacter3;
            mapleCharacter3.ga.remove(a2);
            a5.ga.put(a2, a3);
        }
        mapleCharacter.DA = true;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ String loadLoginKey(int a) {
        var2_4 = null;
        var3_5 = DBConPool.getInstance().getDataSource().getConnection();
        try {
            var4_7 = var3_5.prepareStatement(FixDropNullItem.ALLATORIxDEMO("e\u0003z\u0003u\u0012\u0016*Y!_(]#Ofp\u0014y\u000b\u0016'U%Y3X2Efa\u000es\u0014sf_\"\u0016{\u0016y"));
            var4_7.setInt(1, a);
            a = var4_7.executeQuery();
            if (a.next()) {
                v0 = a;
                var2_4 = v0.getString(MapleNodes.ALLATORIxDEMO("bCiE`GkU"));
                var4_7.close();
                v0.close();
            }
            ** if (var3_5 == null) goto lbl-1000
        }
        catch (Throwable var4_8) {
            if (var3_5 == null) ** GOTO lbl26
            try {
                var3_5.close();
                v1 = var4_8;
                ** GOTO lbl27
            }
            catch (Throwable a) {
                try {
                    var4_8.addSuppressed(a);
lbl26:
                    // 2 sources

                    v1 = var4_8;
lbl27:
                    // 2 sources

                    throw v1;
                }
                catch (SQLException var3_6) {
                    FileoutputUtil.outError(FixDropNullItem.ALLATORIxDEMO("Z)Q5\u0019\u8c81\u65af\u5eed\u7546\u5e7e\u00182N2"), var3_6);
                }
            }
        }
lbl-1000:
        // 1 sources

        {
            var3_5.close();
        }
lbl-1000:
        // 2 sources

        {
        }
        return var2_4;
    }

    public /* synthetic */ int getBeanConsume() {
        MapleCharacter a2;
        return a2.pb;
    }

    public /* synthetic */ void stopControllingMonster(MapleMonster a2) {
        MapleCharacter a3;
        if (a3.Hc) {
            return;
        }
        if (a2 != null && a3.CC.contains(a2)) {
            a3.CC.remove(a2);
        }
    }

    public /* synthetic */ void changeRoom(int a22, int a3, boolean a4) {
        MapleCharacter a5;
        if (a5.getMapId() == a3) {
            if (a5.getClient().getChannel() == a22) {
                MapleCharacter mapleCharacter = a5;
                mapleCharacter.dropMessage(1, "\u60a8\u5df2\u7d93\u5728 " + mapleCharacter.getMap().getMapName());
                a5.getClient().sendPacket(MaplePacketCreator.enableActions());
                return;
            }
            a5.changeChannel(a22);
            return;
        }
        if (a5.getClient().getChannel() != a22) {
            a5.changeChannel(a22);
        }
        MapleMap a22 = ChannelServer.getInstance(a5.getWorld(), a5.getClient().getChannel()).getMapFactory().getMap(a3);
        MapleCharacter mapleCharacter = a5;
        if (a22 != null) {
            MapleMap mapleMap = a22;
            mapleCharacter.changeMap(mapleMap, mapleMap.getPortal(MapleNodes.ALLATORIxDEMO("C{X>\u001c")));
            return;
        }
        mapleCharacter.dropMessage(1, FixDropNullItem.ALLATORIxDEMO("\u764a\u7559\u671c\u77a3\u76b2\u9369\u8a92h"));
        a5.getClient().sendPacket(MaplePacketCreator.enableActions());
    }

    public /* synthetic */ int getSecondHair() {
        MapleCharacter a2;
        if (JobConstants.is\u795e\u4e4b\u5b50(a2.ob)) {
            if (a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u007fkOaBjsFMg^")) == 0L) {
                a2.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u0015S%Y(R\u0019~'_4"), 37623L);
            }
            return (int)a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u007fkOaBjsFMg^"));
        }
        if (JobConstants.is\u5929\u4f7f\u7834\u58de\u8005(a2.ob)) {
            if (a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u0015S%Y(R\u0019~'_4")) == 0L) {
                a2.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u007fkOaBjsFMg^"), 37141L);
            }
            return (int)a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u0015S%Y(R\u0019~'_4"));
        }
        return a2.zc;
    }

    public final /* synthetic */ short getLevel() {
        MapleCharacter a2;
        if (a2.IC < 1) {
            a2.IC = 1;
        }
        return a2.IC;
    }

    public /* synthetic */ void setBattlePoints(int a2) {
        MapleCharacter a3;
        if (a2 != a3.EC) {
            MapleCharacter mapleCharacter = a3;
            a3.Cb.sendPacket(UIPacket.getBPMsg(a2 - mapleCharacter.EC));
            mapleCharacter.updateSingleStat(MapleStat.BATTLE_POINTS, a2);
        }
        a3.EC = a2;
    }

    public /* synthetic */ void setKeyDownSkill_Time(long a2) {
        a.bC = a2;
    }

    public /* synthetic */ void setBeans(int a2) {
        MapleCharacter a3;
        a3.VB = a2;
        a3.updateBeans();
    }

    public /* synthetic */ void changeZeroLook() {
        MapleCharacter a2;
        if (!JobConstants.is\u795e\u4e4b\u5b50(a2.ob)) {
            return;
        }
        a2.setCharacterSet(MapleNodes.ALLATORIxDEMO("vk^asBCaG"), a2.isZeroSecondLook() ? 0L : 1L);
        a2.GB.recalcLocalStats();
    }

    public /* synthetic */ void handleKaiserCombo() {
        MapleQuestStatus mapleQuestStatus;
        MapleCharacter a2;
        if (a2.getAttackCombo() < 1000) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.setAttackCombo((short)(mapleCharacter.getAttackCombo() + 4));
        }
        if ((mapleQuestStatus = a2.getQuest(MapleQuest.getInstance(25724))) != null && mapleQuestStatus.getStatus() == 1 && a2.getAttackCombo() >= 100) {
            MapleQuest.getInstance(25724).complete(a2, 0);
        }
        MapleCharacter mapleCharacter = a2;
        SkillFactory.getSkill(61111008).getEffect(1).applyKaiser_Combo(mapleCharacter, mapleCharacter.getAttackCombo());
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ void tempban(String a, Calendar a, int a, boolean a) {
        a = DBConPool.getInstance().getDataSource().getConnection();
        try {
            FileoutputUtil.logToFile(FixDropNullItem.ALLATORIxDEMO("*Y!Ei~'U-\u0019\u0004W(\u0019\u000bO\u0015G*i/X6C2\u00182N2"), "\r\n[tempBan] " + FileoutputUtil.NowTime() + " IP: " + a.Cb.getSession().remoteAddress().toString().split(MapleNodes.ALLATORIxDEMO("\u0016"))[0] + " MAC: " + a.getClient().getMacs() + " \u7406\u7531: " + a, false, false);
            var5_9 = a.prepareStatement(FixDropNullItem.ALLATORIxDEMO("\u007f\be\u0003d\u0012\u0016\u000fx\u0012yf_6T'X5\u0016n_6\u001ff`\u0007z\u0013s\u0015\u0016n\to"));
            var5_9.setString(1, a.Cb.getSession().remoteAddress().toString().split(MapleNodes.ALLATORIxDEMO("\u0016"))[0]);
            var5_9.executeUpdate();
            var5_9.close();
            var5_9 = a.prepareStatement(FixDropNullItem.ALLATORIxDEMO("c\u0016r\u0007b\u0003\u0016'U%Y3X2Efe\u0003bfB#[6T'Xf\u000bf\tj\u0016$W(D#W5Y(\u0016{\u0016y\u001afQ4S'E)Xf\u000bf\tfa\u000es\u0014sf_\"\u0016{\u0016y"));
            a = new Timestamp(a.getTimeInMillis());
            v0 = var5_9;
            v1 = var5_9;
            v1.setTimestamp(1, a);
            v1.setString(2, a);
            v0.setInt(3, (int)a);
            v0.setInt(4, a.nC);
            v0.execute();
            var5_9.close();
            a.Cb.disconnect();
            ** if (a == null) goto lbl-1000
        }
        catch (Throwable var5_10) {
            if (a == null) ** GOTO lbl36
            try {
                a.close();
                v2 = var5_10;
                ** GOTO lbl37
            }
            catch (Throwable a) {
                try {
                    var5_10.addSuppressed(a);
lbl36:
                    // 2 sources

                    v2 = var5_10;
lbl37:
                    // 2 sources

                    throw v2;
                }
                catch (SQLException a) {
                    System.err.println("Error while tempbanning" + a);
                }
            }
        }
lbl-1000:
        // 1 sources

        {
            a.close();
            return;
        }
lbl-1000:
        // 1 sources

        {
        }
    }

    public /* synthetic */ void unlockSummonsReadLock() {
        MapleCharacter a2;
        a2.Zb.readLock().unlock();
    }

    public final /* synthetic */ void removeAllSkills() {
        MapleCharacter mapleCharacter;
        MapleCharacter a2;
        MapleCharacter mapleCharacter2 = a2;
        mapleCharacter2.sB.clear();
        PlayerHandler.ResetSkillMacro(mapleCharacter2);
        try {
            MapleCharacter mapleCharacter3 = a2;
            mapleCharacter3.Pd.DeleteKeys(mapleCharacter3.XC);
            mapleCharacter = a2;
        }
        catch (SQLException sQLException) {
            System.err.println("Error doReborn" + sQLException);
            FileoutputUtil.outError(FixDropNullItem.ALLATORIxDEMO("*Y!EiR)d#T)D(\u00182N2"), sQLException);
            mapleCharacter = a2;
        }
        mapleCharacter.Pd.clearKeyMap();
    }

    public /* synthetic */ void giveCoolDowns(List<MapleCoolDownValueHolder> a2) {
        MapleCharacter a3;
        a3.giveCoolDowns(a2, false);
    }

    public /* synthetic */ void putSkillEntry(ISkill a2, SkillEntry a3) {
        MapleCharacter a4;
        if (a4.sB != null && a2 != null) {
            a4.sB.put(a2, a3);
        }
    }

    public /* synthetic */ boolean isRockMap(int a2) {
        int n2;
        int n3 = n2 = 0;
        while (n3 < 10) {
            MapleCharacter a3;
            if (a3.DB[n2] == a2) {
                return true;
            }
            n3 = ++n2;
        }
        return false;
    }

    public /* synthetic */ void addLinkMid(int a2, int a3) {
        MapleCharacter a4;
        if (a4.Ka.get(a2) == null) {
            a4.Ka.put(a2, a3);
            return;
        }
        a4.Ka.put(a2, a4.Ka.get(a2) + a3);
    }

    public /* synthetic */ boolean isGM() {
        MapleCharacter a2;
        return a2.id > 0;
    }

    public /* synthetic */ void startFairySchedule(boolean a2) {
        MapleCharacter a3;
        a3.startFairySchedule(a2, false);
    }

    public /* synthetic */ void addPartyQuestPoint(int a2, long a3) {
        MapleCharacter a4;
        if (a4.getParty() == null) {
            a4.addQuestPoint(a2, a3);
            return;
        }
        Iterator<MaplePartyCharacter> iterator = a4.getParty().getOnlineMembers().iterator();
        while (iterator.hasNext()) {
            MapleCharacter mapleCharacter = iterator.next().getChr();
            if (mapleCharacter == null) continue;
            mapleCharacter.addQuestPoint(a2, a3);
        }
    }

    public /* synthetic */ int getTitleEffect() {
        MapleCharacter a2;
        return (int)a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("zEz@k\u007feEb@"), false);
    }

    public /* synthetic */ void updateTick(int a2) {
        MapleCharacter a3;
        if (a3.LB != null) {
            a3.LB.updateTick(a2);
        }
    }

    public /* synthetic */ boolean getVipMedal() {
        MapleCharacter a2;
        return a2.Hd;
    }

    public /* synthetic */ void dispelDebuffs() {
        MapleCharacter a3;
        a3.qc.keySet().forEach(a2 -> {
            MapleCharacter a3;
            if (a3.hasDisease((MapleBuffStat)a2)) {
                if (a3.hasDisease(MapleBuffStat.LAPID_IFICATION) && a3.hasLapidification()) {
                    MapleCharacter mapleCharacter = a3;
                    mapleCharacter.setLapidification(false);
                    mapleCharacter.setHp(0);
                    mapleCharacter.updateSingleStat(MapleStat.HP, 0);
                }
                MapleCharacter mapleCharacter = a3;
                mapleCharacter.Cb.sendPacket(MaplePacketCreator.cancelDebuff(a2));
                MapleCharacter mapleCharacter2 = a3;
                mapleCharacter.rC.broadcastMessage(mapleCharacter2, MaplePacketCreator.cancelForeignDebuff(mapleCharacter2.XC, a2), false);
                mapleCharacter.qc.remove(a2);
            }
        });
    }

    public /* synthetic */ void setMaxMp(int a2) {
        MapleCharacter a3;
        a3.getStat().setMaxMp((short)a2);
    }

    public /* synthetic */ void disease(int a2, int a3) {
        MapleCharacter a4;
        if (MapleDisease.getByMobSkill(a2) == null) {
            return;
        }
        MapleCharacter mapleCharacter = a4;
        mapleCharacter.kC = 0;
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.cancelChair(-1));
        MapleCharacter mapleCharacter2 = a4;
        mapleCharacter.rC.broadcastMessage(mapleCharacter2, MaplePacketCreator.showChair(mapleCharacter2.XC, 0, 0), false);
        a4.giveDebuff(MobSkill.getByMobSkill(a2), MobSkillFactory.getMobSkill(a2, a3));
    }

    public /* synthetic */ void setTrade(MapleTrade a2) {
        a.vb = a2;
    }

    public /* synthetic */ int getGachExp() {
        MapleCharacter a2;
        return a2.wB;
    }

    public /* synthetic */ void addMobCount(int a2) {
        MapleCharacter a3;
        block16: {
            MapleCharacter mapleCharacter;
            block19: {
                block18: {
                    block17: {
                        ++a3.Nb;
                        if (!GameSetConstants.SERVER_NAME.equals(FixDropNullItem.ALLATORIxDEMO("\u6965\u76c2\u6573\u4ecd")) || MapConstants.isBanGlobalDrop(a3.getMapId())) break block16;
                        if (a3.IC < 140) break block17;
                        if (a2 < 120) break block18;
                        MapleCharacter mapleCharacter2 = a3;
                        mapleCharacter = mapleCharacter2;
                        mapleCharacter2.addKillHp();
                        mapleCharacter2.addMonsterKillToday();
                        break block19;
                    }
                    if (a2 > a3.IC - 20) {
                        MapleCharacter mapleCharacter3 = a3;
                        mapleCharacter3.addKillHp();
                        mapleCharacter3.addMonsterKillToday();
                    }
                }
                mapleCharacter = a3;
            }
            if (mapleCharacter.getKillHp() >= 100L) {
                MapleCharacter mapleCharacter4;
                MapleCharacter mapleCharacter5 = a3;
                mapleCharacter5.setKillHp(0);
                a2 = 0;
                if (mapleCharacter5.IC > 10 && a3.IC <= 30) {
                    a2 = Randomizer.rand(1, 3) + a3.getVip();
                    mapleCharacter4 = a3;
                } else if (a3.IC >= 31 && a3.IC <= 50) {
                    a2 = Randomizer.rand(1, 4) + a3.getVip();
                    mapleCharacter4 = a3;
                } else if (a3.IC >= 51 && a3.IC <= 70) {
                    a2 = Randomizer.rand(1, 5) + a3.getVip();
                    mapleCharacter4 = a3;
                } else if (a3.IC >= 71 && a3.IC <= 100) {
                    a2 = Randomizer.rand(1, 6) + a3.getVip();
                    mapleCharacter4 = a3;
                } else if (a3.IC >= 101 && a3.IC <= 120) {
                    a2 = Randomizer.rand(1, 7) + a3.getVip();
                    mapleCharacter4 = a3;
                } else if (a3.IC >= 121 && a3.IC <= 150) {
                    a2 = Randomizer.rand(1, 8) + a3.getVip();
                    mapleCharacter4 = a3;
                } else {
                    if (a3.IC >= 151) {
                        a2 = Randomizer.rand(1, 10) + a3.getVip();
                    }
                    mapleCharacter4 = a3;
                }
                if (mapleCharacter4.getKillHpAdd() <= 10000L && a2 > 0) {
                    MapleCharacter mapleCharacter6 = a3;
                    mapleCharacter6.addMaxHP(a2);
                    mapleCharacter6.addKillHpAdd(a2);
                    MapleCharacter mapleCharacter7 = a3;
                    mapleCharacter7.dropMessage(-1, "\u64ca\u6bba\u5c0f\u65bc\u81ea\u8eab\u7b49\u7d1a20\u7d1a\u4ee5\u4e0a\u7684\u602a\u7269100\u96bb,\u589e\u52a0\u6700\u5927\u8840\u91cf : " + a2 + " \u76ee\u524d\u5df2\u7d2f\u7a4d\u589e\u52a0:" + mapleCharacter7.getKillHpAdd());
                    MapleCharacter mapleCharacter8 = a3;
                    mapleCharacter8.dropMessage("\u64ca\u6bba\u5c0f\u65bc\u81ea\u8eab\u7b49\u7d1a20\u7d1a\u4ee5\u4e0a\u7684\u602a\u7269100\u96bb,\u589e\u52a0\u6700\u5927\u8840\u91cf : " + a2 + " \u76ee\u524d\u5df2\u7d2f\u7a4d\u589e\u52a0:" + mapleCharacter8.getKillHpAdd());
                }
            }
        }
        a3.addMonsterKillToday();
        a3.showKillMobCount(false);
    }

    public /* synthetic */ Long getBuffedStartTime(MapleBuffStat a2) {
        MapleCharacter a3;
        if ((a2 = a3.getBuffStatValueHolder((MapleBuffStat)a2)) == null) {
            return null;
        }
        return ((MapleBuffStatValueHolder)a2).startTime;
    }

    public final /* synthetic */ String getBlessOfFairyOrigin() {
        MapleCharacter a2;
        return a2.vB;
    }

    public /* synthetic */ void setChangeCharacterSet(boolean a2) {
        a.DA = a2;
    }

    public final /* synthetic */ long getKeyDownSkill_Time() {
        MapleCharacter a2;
        return a2.bC;
    }

    public /* synthetic */ boolean isKOC() {
        MapleCharacter a2;
        return a2.ob >= 1000 && a2.ob < 2000;
    }

    public /* synthetic */ int getSavedLocation(SavedLocationType a2) {
        MapleCharacter a3;
        return a3.Gb[a2.getValue()];
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ void startFairySchedule(boolean a22, boolean a3) {
        MapleCharacter a4;
        if (LoginServer.getFairy(a4.getId()) < 1) {
            LoginServer.addFairy((byte)1, a4.getId());
        }
        MapleCharacter mapleCharacter = a4;
        mapleCharacter.yc = (byte)(LoginServer.getFairy(mapleCharacter.getId()) * 10);
        mapleCharacter.iC = LoginServer.getFairy(mapleCharacter.getId());
        try {
            MapleCharacter mapleCharacter2 = a4;
            mapleCharacter2.cancelFairySchedule(a22);
            if (mapleCharacter2.yc < 30 && a4.GB.equippedFairy) {
                if (a3) {
                    MapleCharacter mapleCharacter3 = a4;
                    mapleCharacter3.dropMessage(5, "\u60a8\u88dd\u5099\u4e86\u7cbe\u9748\u540a\u589c\u56e0\u6b64\u984d\u5916\u7372\u5f97" + mapleCharacter3.yc + "% \u7d93\u9a57\u503c.");
                }
                a4.Ed = Timer.EtcTimer.getInstance().schedule(() -> {
                    MapleCharacter a2;
                    if (a2.yc < 30 && a2.GB.equippedFairy) {
                        if (LoginServer.getFairy(a2.getId()) < 3) {
                            LoginServer.addFairy((byte)(LoginServer.getFairy(a2.getId()) + 1), a2.getId());
                        }
                        MapleCharacter mapleCharacter = a2;
                        mapleCharacter.yc = (byte)(mapleCharacter.yc + 10);
                        mapleCharacter.iC = (byte)(mapleCharacter.iC + 1);
                        a2.dropMessage(5, "\u56e0\u88dd\u5099\u7cbe\u9748\u589c\u98fe\u904e\u4e86" + (a2.iC - 1) + "\u5c0f\u6642\uff0c\u6253\u602a\u6642\u53ef\u4ee5\u984d\u5916\u7372\u5f97\u7d05\u5229\u7d93\u9a57\u503c" + a2.yc + "%.");
                        a2.startFairySchedule(false);
                        return;
                    }
                    MapleCharacter mapleCharacter = a2;
                    mapleCharacter.cancelFairySchedule(!mapleCharacter.GB.equippedFairy);
                }, 3600000L);
                return;
            }
            MapleCharacter mapleCharacter4 = a4;
            mapleCharacter4.cancelFairySchedule(!mapleCharacter4.GB.equippedFairy);
            return;
        }
        catch (RejectedExecutionException a22) {
            System.err.println("\u7cbe\u9748\u540a\u589c: Timer[EtcTimer] \u51fa\u73fe\u7570\u5e38: " + a22.getLocalizedMessage());
            return;
        }
    }

    public /* synthetic */ HiredFishing getPlayerFishing() {
        MapleCharacter a2;
        return a2.va;
    }

    public /* synthetic */ void setShop(MapleShop a2) {
        a.pA = a2;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ void setAcash(int a) {
        var2_3 = DBConPool.getInstance().getDataSource().getConnection();
        try {
            v0 = var3_6 = var2_3.prepareStatement(FixDropNullItem.ALLATORIxDEMO("c6R'B#\u0016'U%Y3X2EfE#Bfw%W5^f\u000bf\tfa.S4Sf_\"\u0016{\u0016y"));
            v0.setInt(1, a);
            var3_6.setInt(2, a.getClient().getAccID());
            v0.execute();
            var3_6.close();
            ** if (var2_3 == null) goto lbl-1000
        }
        catch (Throwable var3_7) {
            if (var2_3 == null) ** GOTO lbl24
            try {
                var2_3.close();
                v1 = var3_7;
                ** GOTO lbl25
            }
            catch (Throwable a) {
                try {
                    var3_7.addSuppressed(a);
lbl24:
                    // 2 sources

                    v1 = var3_7;
lbl25:
                    // 2 sources

                    throw v1;
                }
                catch (SQLException var2_4) {
                    System.err.println(MapleNodes.ALLATORIxDEMO("UmmM}DS\u710d\u6cdb\u900f\u63ab\u8ceb\u6597\u5e87"));
                    return;
                }
                catch (Exception var2_5) {
                    FilePrinter.printError(FixDropNullItem.ALLATORIxDEMO("{'F*S\u0005^'D'U2S4\u00182N2"), var2_5, MapleNodes.ALLATORIxDEMO("]IzmmM}D"));
                    System.err.println("[setAcash]" + var2_5);
                }
            }
        }
lbl-1000:
        // 1 sources

        {
            var2_3.close();
            return;
        }
lbl-1000:
        // 1 sources

        {
        }
    }

    public /* synthetic */ byte getSubcategory() {
        MapleCharacter a2;
        if (a2.ob >= 430 && a2.ob <= 434) {
            a2.zC = 1;
            return 1;
        }
        if (a2.ob == 501 && a2.ob == 530 && a2.ob == 531 && a2.ob == 532) {
            a2.zC = 2;
            return 2;
        }
        if (a2.ob != 400 && a2.ob != 430 && a2.ob != 431 && a2.ob != 432 && a2.ob != 433 && a2.ob != 434 && a2.ob != 0 && a2.ob != 501 && a2.ob != 530 && a2.ob != 531 && a2.ob != 532) {
            a2.zC = 0;
            return 0;
        }
        return a2.zC;
    }

    public /* synthetic */ boolean getCheckedEffectAmulet() {
        MapleCharacter a2;
        return a2.Xb;
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ int getofflinechannel() {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [3[TRYBLOCK]], but top level block is 5[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ void resetQuestPoint(int a22) {
        MapleCharacter a3;
        MapleQuestStatus a22 = a3.getQuestNAdd(MapleQuest.getInstance(a22));
        if (a22.getCustomData() != null) {
            a22.setCustomData(String.valueOf(0));
        }
    }

    /*
     * WARNING - Removed try catching itself - possible behaviour change.
     * Loose catch block
     * WARNING - void declaration
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    public /* synthetic */ int saveToDB(boolean a4, boolean a5) {
        Object object;
        Object object2;
        MapleCharacter a6;
        long l2 = System.currentTimeMillis();
        if (a6.isClone()) {
            return -1;
        }
        if (a6.Ib) {
            FileoutputUtil.logToFile(FixDropNullItem.ALLATORIxDEMO("*Y!Eie'@#B)r\u0004\u00182N2"), "\r\n " + FileoutputUtil.NowTime() + "\u89d2\u8272" + a6.getName() + "\u7b49\u7d1a:" + a6.getLevel() + " (\u7de8\u865f: " + a6.getId() + ")isSaving " + new Throwable().getMessage());
            return -1;
        }
        int n2 = 1;
        DruidPooledConnection druidPooledConnection = null;
        Statement statement = null;
        Statement statement2 = null;
        ResultSet resultSet = null;
        World.addPlayerSaving(a6.nC);
        if (GameSetConstants.DEBUG_DC && a6.isGM()) {
            System.out.println("saveToDB-1:" + (System.currentTimeMillis() - l2));
            l2 = System.currentTimeMillis();
        }
        a6.Ib = true;
        DruidPooledConnection druidPooledConnection2 = druidPooledConnection = DBConPool.getInstance().getDataSource().getConnection();
        druidPooledConnection2.setTransactionIsolation(1);
        druidPooledConnection2.setAutoCommit(false);
        if (!a6.SaveKeyA()) {
            int n3;
            String string;
            int n4;
            Object object3;
            Statement statement3;
            Statement statement4;
            int n5;
            int n6;
            statement = druidPooledConnection.prepareStatement(MapleNodes.ALLATORIxDEMO("[|JmZi.OfM|MmXk^}\f]iZ\fbIxIb\f3\f1\u0000.JoAk\f3\f1\u0000._z^.\u0011.\u0013\"\fjIv\f3\f1\u0000.@{G.\u0011.\u0013\"\fnE`Xn\f3\f1\u0000.Iv\\.\u0011.\u0013\"\ff\\.\u0011.\u0013\"\fc\\.\u0011.\u0013\"\fcMvD~\f3\f1\u0000.AoTc\\.\u0011.\u0013\"\f}\\.\u0011.\u0013\"\ff_~\f3\f1\u0000.M~\f3\f1\u0000.Kc\f3\f1\u0000._eE`Oa@a^.\u0011.\u0013\"\fiI`Hk^.\u0011.\u0013\"\fdCl\f3\f1\u0000.DoE|\f3\f1\u0000.JoOk\f3\f1\u0000.Ao\\.\u0011.\u0013\"\fcI}C.\u0011.\u0013\"\ff\\O\\[_kH.\u0011.\u0013\"\f}\\o[`\\aE`X.\u0011.\u0013\"\f~M|Xw\f3\f1\u0000.N{HjUMM~MmEzU.\u0011.\u0013\"\fcC`_zI|NaCeOaZk^.\u0011.\u0013\"\fjCdCQ\\z_.\u0011.\u0013\"\fjCdC\\ImC|H.\u0011.\u0013\"\f~Iz_.\u0011.\u0013\"\f}YlOoXkKa^w\f3\f1\u0000.Ao^|EoKkej\f3\f1\u0000.O{^|I`X|I~\f3\f1\u0000.XaXo@|I~\f3\f1\u0000.OfM|Ak_}MiI.\u0011.\u0013\"\fkT~^k_}EaB.\u0011.\u0013\"\fmC`_zIb@oXgC`\f3\f1\u0000.NbCaH.\u0011.\u0013\"\fcC`Xf\f3\f1\u0000.HoU.\u0011.\u0013\"\flIoB}\f3\f1\u0000.\\|IhEv\f3\f1\u0000.KoOfIv\\.\u0011.\u0013\"\f`McI.\u0011.\u0013\"\fXE~akHo@.\u0011.\u0013\"\fmM`xo@e\f3\f1\u0000.gg@baaNMC{Bz\f3\f1\u0000.\\kI.\u0011.\u0013\"\fcC{BzEj\u00111\u0000.doE|mbN{A3\u0013\"\fHMmIO@lYc\u00111\u0000.ivObYjIGXkA.\u0011.\u0013\"\fj\\c\u00111\f\"JoXgK{I.\f3\f1\fYdK~K\fgH.\u0011.\u0013"));
            int n7 = 0;
            Statement statement5 = statement;
            int n8 = ++n7;
            statement5.setInt(n8, a6.IC);
            int n9 = ++n7;
            statement5.setShort(n9, a6.IB);
            int n10 = ++n7;
            statement5.setShort(n10, a6.GB.getStr());
            int n11 = ++n7;
            statement5.setShort(n11, a6.GB.getDex());
            int n12 = ++n7;
            statement5.setShort(n12, a6.GB.getLuk());
            int n13 = ++n7;
            statement5.setShort(n13, a6.GB.getInt());
            int n14 = ++n7;
            statement5.setInt(n14, a6.RC);
            statement5.setInt(++n7, a6.GB.getHp() < 1 ? 50 : a6.GB.getHp());
            Statement statement6 = statement;
            int n15 = ++n7;
            statement6.setInt(n15, a6.GB.getMp());
            int n16 = ++n7;
            statement6.setInt(n16, a6.GB.getMaxHp());
            statement6.setInt(++n7, a6.GB.getMaxMp());
            StringBuilder object32 = new StringBuilder();
            int n17 = n6 = 0;
            while (n17 < a6.nc.length) {
                object32.append(a6.nc[n6]);
                object32.append(FixDropNullItem.ALLATORIxDEMO("j"));
                n17 = ++n6;
            }
            Object object4 = object2 = object32.toString();
            statement.setString(++n7, ((String)object4).substring(0, ((String)object4).length() - 1));
            StringBuilder stringBuilder = new StringBuilder();
            int n18 = n5 = 0;
            while (n18 < a6.yb.length) {
                stringBuilder.append(a6.yb[n5]);
                stringBuilder.append(MapleNodes.ALLATORIxDEMO("\u0000"));
                n18 = ++n5;
            }
            StringBuilder stringBuilder2 = stringBuilder;
            SavedLocationType savedLocationType = object = stringBuilder2.toString();
            statement.setString(++n7, ((String)((Object)savedLocationType)).substring(0, ((String)((Object)savedLocationType)).length() - 1));
            stringBuilder2.setLength(0);
            object = "";
            Statement statement7 = statement;
            int n19 = ++n7;
            statement7.setShort(n19, a6.iA);
            int n20 = ++n7;
            statement7.setByte(n20, a6.id);
            int n21 = ++n7;
            statement7.setByte(n21, a6.jd);
            int n22 = ++n7;
            statement7.setByte(n22, a6.WA);
            int n23 = ++n7;
            statement7.setShort(n23, a6.ob);
            int n24 = ++n7;
            statement7.setInt(n24, a6.zc);
            statement7.setInt(++n7, a6.dA);
            if (!a5 && a6.rC != null) {
                if (a6.rC.getForcedReturnId() != 999999999) {
                    Statement statement8 = statement;
                    statement4 = statement8;
                    statement8.setInt(++n7, a6.rC.getForcedReturnId());
                } else {
                    statement.setInt(++n7, a6.GB.getHp() < 1 ? a6.rC.getReturnMapId() : a6.rC.getId());
                    statement4 = statement;
                }
            } else {
                Statement statement9 = statement;
                statement4 = statement9;
                statement9.setInt(++n7, a6.Qc);
            }
            int n25 = ++n7;
            statement4.setInt(n25, a6.vA);
            MapleCharacter mapleCharacter = a6;
            statement.setShort(++n7, mapleCharacter.qC);
            if (mapleCharacter.rC == null) {
                Statement statement10 = statement;
                statement3 = statement10;
                statement10.setByte(++n7, (byte)0);
            } else {
                object3 = a6.rC.findClosestSpawnpoint(a6.getPosition());
                statement.setByte(++n7, (byte)(object3 != null ? object3.getId() : 0));
                statement3 = statement;
            }
            statement3.setInt(++n7, a6.ed != null ? a6.ed.getId() : -1);
            Statement statement11 = statement;
            int n26 = ++n7;
            statement11.setShort(n26, a6.tB.getCapacity());
            int n27 = ++n7;
            statement11.setInt(n27, a6.kB);
            int n28 = ++n7;
            statement11.setInt(n28, a6.lB);
            statement11.setInt(++n7, a6.bB);
            object3 = new StringBuilder();
            int n29 = 0;
            Collections.sort(a6.Md, (a2, a3) -> a2.getSummonedValue() - a3.getSummonedValue());
            for (MaplePet maplePet : a6.Md) {
                maplePet.saveToDb((Connection)druidPooledConnection);
                if (!maplePet.getSummoned()) continue;
                ((StringBuilder)object3).append(maplePet.getInventoryPosition());
                ++n29;
                ((StringBuilder)object3).append(FixDropNullItem.ALLATORIxDEMO("j"));
            }
            int n30 = n29;
            while (n30 < 3) {
                ((StringBuilder)object3).append(MapleNodes.ALLATORIxDEMO("\u0001?\u0000"));
                n30 = ++n29;
            }
            String string2 = ((StringBuilder)object3).toString();
            Statement statement12 = statement;
            int n31 = ++n7;
            Object object5 = string2;
            statement12.setString(n31, ((String)object5).substring(0, ((String)object5).length() - 1));
            int n32 = ++n7;
            statement12.setByte(n32, a6.zC);
            int n33 = ++n7;
            statement12.setInt(n33, a6.Jd);
            int n34 = ++n7;
            statement12.setInt(n34, a6.sC);
            int n35 = ++n7;
            statement12.setInt(n35, a6.cA);
            int n36 = ++n7;
            statement12.setString(n36, a6.SA);
            int n37 = ++n7;
            statement12.setInt(n37, a6.xc);
            int n38 = ++n7;
            statement12.setInt(n38, a6.Lc);
            int n39 = ++n7;
            statement12.setInt(n39, a6.oA);
            int n40 = ++n7;
            statement12.setInt(n40, a6.pB);
            int n41 = ++n7;
            statement12.setInt(n41, a6.QA);
            int n42 = ++n7;
            statement12.setInt(n42, a6.VB);
            int n43 = ++n7;
            statement12.setString(n43, a6.OB);
            int n44 = ++n7;
            statement12.setInt(n44, a6.wB);
            int n45 = ++n7;
            statement12.setString(n45, a6.cB);
            statement12.setInt(++n7, a6.Hd ? 1 : 0);
            statement.setInt(++n7, a6.sd ? 1 : 0);
            Statement statement13 = statement;
            int n46 = ++n7;
            statement13.setInt(n46, a6.Nb);
            int n47 = ++n7;
            statement13.setInt(n47, a6.HC);
            statement13.setInt(++n7, a6.fA);
            StringBuilder stringBuilder3 = new StringBuilder();
            int n48 = n4 = 0;
            while (n48 < a6.JB.length) {
                stringBuilder3.append(a6.JB[n4]);
                stringBuilder3.append(FixDropNullItem.ALLATORIxDEMO("j"));
                n48 = ++n4;
            }
            CharSequence charSequence = stringBuilder3.toString();
            String string3 = charSequence;
            statement.setString(++n7, string3.substring(0, string3.length() - 1));
            charSequence = new StringBuilder();
            int n49 = n29 = 0;
            while (n49 < a6.Cd.length) {
                ((StringBuilder)charSequence).append(a6.Cd[n29]);
                ((StringBuilder)charSequence).append(MapleNodes.ALLATORIxDEMO("\u0000"));
                n49 = ++n29;
            }
            String string4 = string = ((StringBuilder)charSequence).toString();
            statement.setString(++n7, string4.substring(0, string4.length() - 1));
            charSequence = new StringBuilder();
            int n50 = n3 = 0;
            while (n50 < a6.xb.length) {
                ((StringBuilder)charSequence).append(a6.xb[n3]);
                ((StringBuilder)charSequence).append(FixDropNullItem.ALLATORIxDEMO("j"));
                n50 = ++n3;
            }
            String string5 = ((StringBuilder)charSequence).toString();
            Statement statement14 = statement;
            int n51 = ++n7;
            String string6 = string5;
            statement14.setString(n51, string6.substring(0, string6.length() - 1));
            statement14.setLong(++n7, a6.Za > 99999999L ? 99999999L : a6.Za);
            Statement statement15 = statement;
            int n52 = ++n7;
            statement15.setInt(n52, a6.Cc);
            statement15.setInt(++n7, a6.XC);
            if (statement15.executeUpdate() < 1) {
                statement.close();
                throw new DatabaseException("Character not in database (" + a6.XC + ")");
            }
            statement.close();
        }
        if (a6.oc) {
            int n53;
            a6.D((Connection)druidPooledConnection, MapleNodes.ALLATORIxDEMO("hK`KxK\fH~Aa._eEb@cMm^a_.{Fi\\i.OfM|MmXk^gH.\u0011.\u0013"));
            int n54 = n53 = 0;
            while (n54 < 5) {
                SkillMacro iterator = a6.rA[n53];
                if (iterator != null) {
                    Statement statement16 = statement = druidPooledConnection.prepareStatement(FixDropNullItem.ALLATORIxDEMO("\u000fx\u0015s\u0014bf\u007f\bb\t\u00165]/Z*['U4Y5\u0016nU.W4W%B#D/Rj\u00165]/Z*\u0007j\u00165]/Z*\u0004j\u00165]/Z*\u0005j\u0016(W+Sj\u00165^)C2\u001afF)E/B/Y(\u001ff`\u0007z\u0013s\u0015\u0016n\tj\u0016y\u001af\tj\u0016y\u001af\tj\u0016y\u001af\to"));
                    Statement statement17 = statement;
                    Statement statement18 = statement;
                    statement.setInt(1, a6.XC);
                    statement18.setInt(2, iterator.getSkill1());
                    statement18.setInt(3, iterator.getSkill2());
                    statement17.setInt(4, iterator.getSkill3());
                    statement17.setString(5, iterator.getName());
                    statement16.setInt(6, iterator.getShout());
                    statement16.setInt(7, n53);
                    statement16.execute();
                    statement.close();
                }
                n54 = ++n53;
            }
        }
        if (a6.tA) {
            DruidPooledConnection druidPooledConnection3 = druidPooledConnection;
            a6.H((Connection)druidPooledConnection3, MapleNodes.ALLATORIxDEMO("hK`KxK\fH~Aa.E`ZkBzC|U}@aX.{Fi\\i.OfM|MmXk^gH.\u0011.\u0013"));
            Statement statement19 = statement = druidPooledConnection3.prepareStatement(FixDropNullItem.ALLATORIxDEMO("\u000fx\u0015s\u0014bf\u007f\bb\t\u0016/X0S(B)D?E*Y2\u0016nU.W4W%B#D/Rj\u0016&S7C/F&\u001afV3E#Vj\u0016&E#B3F&\u001afV#B%Vj\u0016&U'E.Vo\u0016\u0010w\nc\u0003ef\u001ey\u001af\tj\u0016y\u001af\tj\u0016y\u001af\to"));
            Statement statement20 = statement;
            Statement statement21 = statement;
            statement21.setInt(1, a6.XC);
            statement21.setByte(2, a6.getInventory(MapleInventoryType.EQUIP).getSlotLimit());
            statement20.setByte(3, a6.getInventory(MapleInventoryType.USE).getSlotLimit());
            statement20.setByte(4, a6.getInventory(MapleInventoryType.SETUP).getSlotLimit());
            statement19.setByte(5, a6.getInventory(MapleInventoryType.ETC).getSlotLimit());
            statement19.setByte(6, a6.getInventory(MapleInventoryType.CASH).getSlotLimit());
            statement19.execute();
            statement.close();
        }
        if (a6.xB) {
            Iterator<Map.Entry<Integer, String>> iterator;
            MapleCharacter mapleCharacter = a6;
            mapleCharacter.D((Connection)druidPooledConnection, MapleNodes.ALLATORIxDEMO("hK`KxK\fH~Aa.]{I}XgBhC.{Fi\\i.OfM|MmXk^gH.\u0011.\u0013"));
            statement = druidPooledConnection.prepareStatement(FixDropNullItem.ALLATORIxDEMO("\u000fx\u0015s\u0014bf\u007f\bb\t\u00167C#E2_(P)\u0016nV%^'D'U2S4_\"Vj\u0016&G3S5B&\u001afV%C5B)[\u0002W2W&\u001ff`\u0007z\u0013s\u0015\u0016n\tj\u0016y\u001af\to"));
            statement.setInt(1, a6.XC);
            Iterator<Map.Entry<Integer, String>> iterator2 = iterator = mapleCharacter.CA.entrySet().iterator();
            while (iterator2.hasNext()) {
                Map.Entry<Integer, String> n65 = iterator.next();
                statement.setInt(2, n65.getKey());
                statement.setString(3, n65.getValue());
                iterator2 = iterator;
                statement.execute();
            }
            statement.close();
        }
        if (a6.zb) {
            Iterator<MapleQuestStatus> iterator;
            DruidPooledConnection druidPooledConnection4 = druidPooledConnection;
            MapleCharacter mapleCharacter = a6;
            mapleCharacter.D((Connection)druidPooledConnection, MapleNodes.ALLATORIxDEMO("hK`KxK\fH~Aa.]{I}X}XoX{_.{Fi\\i.OfM|MmXk^gH.\u0011.\u0013"));
            statement = druidPooledConnection4.prepareStatement(FixDropNullItem.ALLATORIxDEMO("\u000fx\u0015s\u0014bf\u007f\bb\t\u00167C#E2E2W2C5\u0016nV7C#E2E2W2C5_\"Vj\u0016&U.W4W%B#D/R&\u001afV7C#E2Vj\u0016&E2W2C5Vj\u0016&B/[#Vj\u0016&P)D S/B#R&\u001afV%C5B)[\u0002W2W&\u001ff`\u0007z\u0013s\u0015\u0016nr\u0003p\u0007c\nbj\u0016y\u001af\tj\u0016y\u001af\tj\u0016y\u001af\to"), 1);
            statement2 = druidPooledConnection4.prepareStatement(MapleNodes.ALLATORIxDEMO("e@\u007fK~Z\fGbZc.]{I}X}XoX{_cCl_.zO`[i]\f&hKjOyBx\"\f1\u0000.\u0013\"\f1\u0005"), 1);
            statement.setInt(1, a6.XC);
            Iterator<MapleQuestStatus> iterator3 = iterator = mapleCharacter.XB.values().iterator();
            while (iterator3.hasNext()) {
                MapleQuestStatus n69 = iterator.next();
                Statement statement22 = statement;
                Statement statement23 = statement;
                statement.setLong(2, n69.getQuest().getId());
                statement23.setInt(3, n69.getStatus());
                statement23.setInt(4, (int)(n69.getCompletionTime() / 1000L));
                statement22.setInt(5, n69.getForfeited());
                statement22.setString(6, n69.getCustomData());
                statement22.executeUpdate();
                resultSet = statement.getGeneratedKeys();
                resultSet.next();
                if (n69.hasMobKills()) {
                    Object object6 = n69.getMobKills().keySet().iterator();
                    while (object6.hasNext()) {
                        int n55 = (Integer)object2.next();
                        object6 = object2;
                        Statement statement24 = statement2;
                        statement2.setLong(1, resultSet.getLong(1));
                        statement24.setInt(2, n55);
                        statement24.setInt(3, n69.getMobKills(n55));
                        statement24.executeUpdate();
                    }
                }
                resultSet.close();
                iterator3 = iterator;
            }
            statement.close();
            statement2.close();
        }
        if (a6.UA) {
            MapleCharacter mapleCharacter = a6;
            mapleCharacter.D((Connection)druidPooledConnection, FixDropNullItem.ALLATORIxDEMO("r\u0003z\u0003b\u0003\u0016\u0000d\t{f_(X#D\u0019W$_*_2O\u0019E-_*Z5\u0016\u0011~\u0003d\u0003\u00166Z'O#D\u0019_\"\u0016{\u0016y"));
            if (mapleCharacter.u != null) {
                int n56;
                statement = druidPooledConnection.prepareStatement(MapleNodes.ALLATORIxDEMO("Gb]i\\x.e@xA\fgB`I|soNg@gXws}Gg@b_.\u0004~@oUk^QEj\u0000._eEb@QEj\u0000._eEb@Q@kZk@\"\fcMvsbIxIb\u0000.^oBe\u0000.@aOeIj\u0005.zO`[i]\f&\u0013\"\f1\u0000.\u0013\"\f1\u0000.\u0013\"\f1\u0005"));
                statement.setInt(1, a6.XC);
                int n55 = n56 = 0;
                while (n55 < a6.u.size()) {
                    statement.setInt(2, a6.u.get(n56).getSkillId());
                    statement.setInt(3, a6.u.get(n56).getSkillLevel());
                    statement.setInt(4, a6.u.get(n56).getMaxLevel());
                    statement.setInt(5, a6.u.get(n56).getRank());
                    boolean bl = a6.u.get(n56).isLocked();
                    statement.setBoolean(6, bl);
                    statement.execute();
                    n55 = ++n56;
                }
                statement.close();
            }
        }
        if (a6.zA) {
            MapleCharacter mapleCharacter = a6;
            mapleCharacter.D((Connection)druidPooledConnection, FixDropNullItem.ALLATORIxDEMO("r\u0003z\u0003b\u0003\u0016\u0000d\t{fE-_*Z5\u0016\u0011~\u0003d\u0003\u0016%^'D'U2S4_\"\u0016{\u0016y"));
            statement = druidPooledConnection.prepareStatement(MapleNodes.ALLATORIxDEMO("Gb]i\\x.e@xA\f}Gg@b_.\u0004mDo^oOzI|Ej\u0000._eEb@gH\"\f}Gg@b@kZk@\"\fcM}Xk^bIxIb\u0000.Iv\\g^oXgC`\u0000.XkMmDGH'\fXmByK\u007f.\u00041\u0000.\u0013\"\f1\u0000.\u0013\"\f1\u00001\u0005"));
            statement.setInt(1, a6.XC);
            for (Map.Entry<ISkill, SkillEntry> iterator : mapleCharacter.sB.entrySet()) {
                if (!GameConstants.isApplicableSkill(iterator.getKey().getId())) continue;
                statement.setInt(2, iterator.getKey().getId());
                statement.setInt(3, iterator.getValue().skillevel);
                statement.setInt(4, iterator.getValue().masterlevel);
                statement.setLong(5, iterator.getValue().expiration);
                statement.setInt(6, iterator.getValue().teachId);
                statement.execute();
            }
            statement.close();
        }
        List<MapleCoolDownValueHolder> list = a6.getCooldowns();
        if (a4 && list.size() > 0) {
            Iterator<MapleCoolDownValueHolder> sQLException;
            DruidPooledConnection druidPooledConnection5 = druidPooledConnection;
            a6.D((Connection)druidPooledConnection5, FixDropNullItem.ALLATORIxDEMO("\u0002s\ns\u0012sfp\u0014y\u000b\u00165]/Z*E\u0019U)Y*R)A(Efa\u000es\u0014sfU.W4_\"\u0016{\u0016y"));
            statement = druidPooledConnection5.prepareStatement(MapleNodes.ALLATORIxDEMO("e@\u007fK~Z\fGbZc._eEb@}smCa@jCyB}\f&OfM|Ej\u0000.\u007feEb@Gh\"\f]Xo^zxgAk\u0000.@kBiXf\u0005.zO`[i]\f&\u0013\"\f1\u0000.\u0013\"\f1\u0005"));
            statement.setInt(1, a6.getId());
            Iterator<MapleCoolDownValueHolder> iterator = sQLException = list.iterator();
            while (iterator.hasNext()) {
                object2 = sQLException.next();
                iterator = sQLException;
                Statement statement25 = statement;
                statement.setInt(2, ((MapleCoolDownValueHolder)object2).skillId);
                statement25.setLong(3, ((MapleCoolDownValueHolder)object2).startTime);
                statement25.setLong(4, ((MapleCoolDownValueHolder)object2).length);
                statement25.execute();
            }
            statement.close();
        }
        if (a6.kc) {
            int n58;
            DruidPooledConnection druidPooledConnection6 = druidPooledConnection;
            a6.D((Connection)druidPooledConnection6, FixDropNullItem.ALLATORIxDEMO("r\u0003z\u0003b\u0003\u0016\u0000d\t{fE'@#R*Y%W2_)X5\u0016\u0011~\u0003d\u0003\u0016%^'D'U2S4_\"\u0016{\u0016y"));
            statement = druidPooledConnection6.prepareStatement(MapleNodes.ALLATORIxDEMO("Gb]i\\x.e@xA\f}MxIj@aOoXgC`_.\u0004mDo^oOzI|Ej\u0000.LbCmMzEaBzU~In\u0000.LcM~L'\fXmByK\u007f.\u00041\u0000.\u0013\"\f1\u0005"));
            statement.setInt(1, a6.XC);
            SavedLocationType[] arrsavedLocationType = SavedLocationType.values();
            int n59 = arrsavedLocationType.length;
            int n56 = n58 = 0;
            while (n56 < n59) {
                object = arrsavedLocationType[n58];
                if (a6.Gb[object.getValue()] != -1) {
                    Statement statement26 = statement;
                    statement26.setInt(2, object.getValue());
                    statement26.setInt(3, a6.Gb[object.getValue()]);
                    statement26.execute();
                }
                n56 = ++n58;
            }
            statement.close();
        }
        if (a6.lC) {
            statement = druidPooledConnection.prepareStatement(FixDropNullItem.ALLATORIxDEMO("r\u0003z\u0003b\u0003\u0016\u0000d\t{fW%^/S0S+S(B5\u0016\u0011~\u0003d\u0003\u0016'U%Y3X2_\"\u0016{\u0016y"));
            statement.setInt(1, a6.nC);
            statement.executeUpdate();
            statement.close();
            statement = druidPooledConnection.prepareStatement(MapleNodes.ALLATORIxDEMO("Gb]i\\x.e@xA\foOfEkZkAkBz_&OfM|Ej\u0000.MmDgIxIcI`XgH\"\foOmC{BzEj\u0005.zO`[i]\u00041\u0000.\u0013\"\f1\u0005"));
            Iterator<Integer> iterator = a6.lc.iterator();
            Iterator<Integer> iterator4 = iterator;
            while (iterator4.hasNext()) {
                Integer n61 = iterator.next();
                iterator4 = iterator;
                Statement statement27 = statement;
                statement.setInt(1, a6.XC);
                statement27.setInt(2, n61);
                statement27.setInt(3, a6.nC);
                statement27.executeUpdate();
            }
            statement.close();
        }
        if (a6.Rd) {
            MapleCharacter mapleCharacter = a6;
            mapleCharacter.D((Connection)druidPooledConnection, FixDropNullItem.ALLATORIxDEMO("\u0002s\ns\u0012sfp\u0014y\u000b\u0016$C\"R/S5\u0016\u0011~\u0003d\u0003\u0016%^'D'U2S4_\"\u0016{\u0016y"));
            statement = druidPooledConnection.prepareStatement(MapleNodes.ALLATORIxDEMO("Gb]i\\x.e@xA\flYjHgI}\f&OfM|MmXk^gH\"\fnN{HjUgHn\u0000.L~I`HgBiL\"\fnK|C{\\`McIn\u0005.zO`[i]\f&\u0013\"\f1\u0000.\u0013\"\f1\u0005"));
            statement.setInt(1, a6.XC);
            for (BuddyEntry buddyEntry : mapleCharacter.tB.getBuddies()) {
                if (buddyEntry == null) continue;
                Statement statement28 = statement;
                statement28.setInt(2, buddyEntry.getCharacterId());
                statement28.setInt(3, buddyEntry.isVisible() ? 0 : 1);
                Statement statement29 = statement;
                statement29.setString(4, buddyEntry.getGroup());
                statement29.execute();
            }
            statement.close();
        }
        if (!a6.SaveKeyB()) {
            Statement statement30 = statement = druidPooledConnection.prepareStatement(FixDropNullItem.ALLATORIxDEMO("c\u0016r\u0007b\u0003\u0016'U%Y3X2Efe\u0003bfV+f)_(B5Vf\u000bf\tj\u0016&F)_(B5Vf\u000bf\tj\u0016&@6Y/X2E&\u0016{\u0016y\u001afV\u000bY(_2Y4S\"Vf\u000bf\tfa\u000es\u0014sf_\"\u0016{\u0016y"));
            Statement statement31 = statement;
            statement31.setInt(1, a6.Ab);
            statement31.setInt(2, a6.sA);
            statement30.setInt(3, a6.jc);
            statement30.setInt(4, a6.Cb.isMonitored() ? 1 : 0);
            Statement statement32 = statement;
            statement32.setInt(5, a6.Cb.getAccID());
            statement32.execute();
            statement.close();
            if (GameSetConstants.VIPSYSTEM && GameSetConstants.VIPAUTOGIVE) {
                boolean bl;
                statement = druidPooledConnection.prepareStatement(MapleNodes.ALLATORIxDEMO("[|JmZi.MmOaY`X}\f]iZ\fnZg\\n\f3\f1\fYdK~K\fgH.\u0011.\u0013"));
                int n62 = a6.Cb.getVipAll();
                if (GameSetConstants.LV120_VIPGIVE && a6.getLevel() >= 120 && n62 < 1) {
                    bl = true;
                }
                Statement statement33 = statement;
                statement33.setInt(1, (int)bl);
                statement33.setInt(2, a6.Cb.getAccID());
                statement.execute();
                statement.close();
            }
        }
        if (!a6.SaveKeyStorage()) {
            if (a6.gb != null) {
                a6.gb.saveToDB((Connection)druidPooledConnection);
            }
            if (GameSetConstants.STORAGE_EXCEED && a6.mC != null) {
                Iterator<MapleStorage> iterator;
                Iterator<MapleStorage> iterator5 = iterator = a6.mC.values().iterator();
                while (iterator5.hasNext()) {
                    MapleStorage mapleStorage = iterator.next();
                    iterator5 = iterator;
                    mapleStorage.saveToDB((Connection)druidPooledConnection);
                }
            }
        }
        if (!a6.SaveKeyCs() && a6.nd != null) {
            a6.nd.save((Connection)druidPooledConnection, a6.wc);
        }
        MapleCharacter mapleCharacter = a6;
        mapleCharacter.saveInventory((Connection)druidPooledConnection);
        MapleCharacter mapleCharacter2 = a6;
        mapleCharacter.Pd.saveKeys(mapleCharacter2.XC, (Connection)druidPooledConnection);
        mapleCharacter2.bc.saveMount(a6.XC, (Connection)druidPooledConnection);
        mapleCharacter.qA.saveCards(a6.XC, (Connection)druidPooledConnection);
        if (GameSetConstants.FISH_KING) {
            a6.ALLATORIxDEMO((Connection)druidPooledConnection);
        }
        if (GameSetConstants.MAPLE_VERSION >= 134) {
            int n63;
            DruidPooledConnection druidPooledConnection7 = druidPooledConnection;
            a6.saveMapleTrait();
            a6.D((Connection)druidPooledConnection7, FixDropNullItem.ALLATORIxDEMO("r\u0003z\u0003b\u0003\u0016\u0000d\t{f_+F5\u0016\u0011~\u0003d\u0003\u0016%^'D'U2S4_\"\u0016{\u0016y"));
            statement = druidPooledConnection7.prepareStatement(MapleNodes.ALLATORIxDEMO("e@\u007fK~Z\fGbZc.Ec\\}\f&OfM|MmXk^gH\"\fgXkAgH\"\fm@a_kBk_}\u0000.J{@bBk_}\u0000._zMzI\"\fbIxIb\u0005.zO`[i]\f&\u0013\"\f1\u0000.\u0013\"\f1\u0000.\u0013\"\f1\u0005"));
            statement.setInt(1, a6.XC);
            int n57 = n63 = 0;
            while (n57 < a6.uc.length) {
                void var4_41;
                if (a6.uc[var4_41] != null) {
                    Statement statement34 = statement;
                    Statement statement35 = statement;
                    statement.setInt(2, a6.uc[var4_41].getItemId());
                    statement35.setShort(3, a6.uc[var4_41].getCloseness());
                    statement35.setShort(4, a6.uc[var4_41].getFullness());
                    statement34.setByte(5, a6.uc[var4_41].getState());
                    statement34.setByte(6, a6.uc[var4_41].getLevel());
                    statement34.executeUpdate();
                }
                n57 = ++var4_41;
            }
            statement.close();
        }
        MapleCharacter mapleCharacter3 = a6;
        mapleCharacter3.saveCharacterSet((Connection)druidPooledConnection);
        if (mapleCharacter3.Ac) {
            int n65;
            a6.D((Connection)druidPooledConnection, FixDropNullItem.ALLATORIxDEMO("r\u0003z\u0003b\u0003\u0016\u0000d\t{fA/E.Z/E2\u0016\u0011~\u0003d\u0003\u0016%^'D'U2S4_\"\u0016{\u0016y"));
            int n58 = n65 = 0;
            while (n58 < a6.getWishlistSize()) {
                void var4_43;
                Statement statement36 = statement = druidPooledConnection.prepareStatement(MapleNodes.ALLATORIxDEMO("e@\u007fK~Z\fGbZc.[g_f@g_z\u0004mDo^oOzI|Ej\u0000._`\u0005.zO`[i]\u00041\u0000.\u0013'\f"));
                statement36.setInt(1, a6.getId());
                statement36.setInt(2, a6.FC[var4_43]);
                statement36.execute();
                statement.close();
                n58 = ++var4_43;
            }
        }
        if (a6.Qd) {
            int n67;
            a6.D((Connection)druidPooledConnection, FixDropNullItem.ALLATORIxDEMO("r\u0003z\u0003b\u0003\u0016\u0000d\t{fB4Y%]*Y%W2_)X5\u0016\u0011~\u0003d\u0003\u0016%^'D'U2S4_\"\u0016{\u0016y"));
            int n59 = n67 = 0;
            while (n59 < a6.DB.length) {
                void var4_45;
                if (a6.DB[var4_45] != 999999999) {
                    Statement statement37 = statement = druidPooledConnection.prepareStatement(MapleNodes.ALLATORIxDEMO("Gb]i\\x.e@xA\fz^aOe@aOoXgC`_&OfM|MmXk^gH\"\fcM~Ej\u0005.zO`[i]\u00041\u0000.\u0013'\f"));
                    statement37.setInt(1, a6.getId());
                    statement37.setInt(2, a6.DB[var4_45]);
                    statement37.execute();
                    statement.close();
                }
                n59 = ++var4_45;
            }
        }
        if (a6.dd) {
            int n69;
            a6.D((Connection)druidPooledConnection, FixDropNullItem.ALLATORIxDEMO("r\u0003z\u0003b\u0003\u0016\u0000d\t{fD#Q4Y%]*Y%W2_)X5\u0016\u0011~\u0003d\u0003\u0016%^'D'U2S4_\"\u0016{\u0016y"));
            int n60 = n69 = 0;
            while (n60 < a6.ZC.length) {
                void var4_47;
                if (a6.ZC[var4_47] != 999999999) {
                    Statement statement38 = statement = druidPooledConnection.prepareStatement(MapleNodes.ALLATORIxDEMO("Gb]i\\x.e@xA\f|Ii^aOe@aOoXgC`_&OfM|MmXk^gH\"\fcM~Ej\u0005.zO`[i]\u00041\u0000.\u0013'\f"));
                    statement38.setInt(1, a6.getId());
                    statement38.setInt(2, a6.ZC[var4_47]);
                    statement38.execute();
                    statement.close();
                }
                n60 = ++var4_47;
            }
        }
        if (GameSetConstants.MAPLE_VERSION >= 134 && a6.KB) {
            int n71;
            a6.D((Connection)druidPooledConnection, FixDropNullItem.ALLATORIxDEMO("r\u0003z\u0003b\u0003\u0016\u0000d\t{f^?F#D4Y%]*Y%W2_)X5\u0016\u0011~\u0003d\u0003\u0016%^'D'U2S4_\"\u0016{\u0016y"));
            int n61 = n71 = 0;
            while (n61 < a6.RB.length) {
                void var4_49;
                if (a6.RB[var4_49] != 999999999) {
                    Statement statement39 = statement = druidPooledConnection.prepareStatement(MapleNodes.ALLATORIxDEMO("Gb]i\\x.e@xA\ffU~I|^aOe@aOoXgC`_&OfM|MmXk^gH\"\fcM~Ej\u0005.zO`[i]\u00041\u0000.\u0013'\f"));
                    statement39.setInt(1, a6.getId());
                    statement39.setInt(2, a6.RB[var4_49]);
                    statement39.execute();
                    statement.close();
                }
                n61 = ++var4_49;
            }
        }
        if (GameSetConstants.MAPLE_VERSION >= 137) {
            if (a6.q != null && a6.q.getId() == a6.XC) {
                a6.q.saveToDb((Connection)druidPooledConnection);
            }
            if (JobConstants.is\u5e7b\u5f71\u4fe0\u76dc(a6.ob) && a6.gC) {
                MapleCharacter mapleCharacter4 = a6;
                mapleCharacter4.D((Connection)druidPooledConnection, FixDropNullItem.ALLATORIxDEMO("r\u0003z\u0003b\u0003\u0016\u0000d\t{fE2Y*S(\u0016\u0011~\u0003d\u0003\u0016%^'D'U2S4_\"\u0016{\u0016y"));
                if (mapleCharacter4.y != null && a6.y.size() > 0) {
                    Iterator<Pair<Integer, Boolean>> iterator;
                    Iterator<Pair<Integer, Boolean>> iterator6 = iterator = a6.y.iterator();
                    while (iterator6.hasNext()) {
                        Pair<Integer, Boolean> pair = iterator.next();
                        Statement statement40 = statement = druidPooledConnection.prepareStatement(MapleNodes.ALLATORIxDEMO("Gb]i\\x.e@xA\f}Xa@kB.\u0004mDo^oOzI|Ej\u0000._eEb@gH\"\fmDa_kB'\fXmByK\u007f.\u00041\u0000.\u0013\"\f1\u0005"));
                        statement40.setInt(1, a6.XC);
                        statement40.setInt(2, (Integer)pair.left);
                        statement.setInt(3, (Boolean)pair.right != false ? 1 : 0);
                        iterator6 = iterator;
                        statement.execute();
                        statement.close();
                    }
                }
            }
        }
        MapleCharacter mapleCharacter5 = a6;
        PlayerNPC.updateByCharId(mapleCharacter5, (Connection)druidPooledConnection);
        if (mapleCharacter5.getAndroid() != null) {
            a6.getAndroid().saveToDb();
        }
        MapleCharacter mapleCharacter6 = a6;
        MapleCharacter mapleCharacter7 = a6;
        MapleCharacter mapleCharacter8 = a6;
        MapleCharacter mapleCharacter9 = a6;
        MapleCharacter mapleCharacter10 = a6;
        MapleCharacter mapleCharacter11 = a6;
        MapleCharacter mapleCharacter12 = a6;
        a6.gC = false;
        mapleCharacter12.Ac = false;
        mapleCharacter12.Qd = false;
        mapleCharacter11.dd = false;
        mapleCharacter11.KB = false;
        mapleCharacter10.oc = false;
        mapleCharacter10.kc = false;
        mapleCharacter9.xB = false;
        mapleCharacter9.zb = false;
        mapleCharacter8.tA = false;
        mapleCharacter8.lC = false;
        mapleCharacter7.zA = false;
        mapleCharacter7.nB = false;
        mapleCharacter6.Rd = false;
        mapleCharacter6.DA = false;
        a6.da = false;
        druidPooledConnection.commit();
        try {
            if (statement != null) {
                statement.close();
            }
            if (statement2 != null) {
                statement2.close();
            }
            if (resultSet != null) {
                resultSet.close();
            }
            if (druidPooledConnection != null) {
                DruidPooledConnection druidPooledConnection8 = druidPooledConnection;
                druidPooledConnection8.setAutoCommit(true);
                druidPooledConnection8.setTransactionIsolation(4);
            }
            if (druidPooledConnection != null) {
                druidPooledConnection.close();
            }
        }
        catch (SQLException sQLException) {
            n2 = 0;
            FilePrinter.printError(FixDropNullItem.ALLATORIxDEMO("{'F*S\u0005^'D'U2S4\u00182N2"), sQLException, "[\u89d2\u8272\u5b58\u6a94] \u89d2\u8272" + a6.getName() + " \u932f\u8aa4\u81ea\u52d5\u8fd4\u56de\u5132\u5b58\u529f\u80fd");
            FileoutputUtil.logToFile(MapleNodes.ALLATORIxDEMO("bCi_!doOe\u0003\u513c\u5b74\u89dc\u825e\u593f\u657b XvX"), "\r\n " + FileoutputUtil.NowTime() + "\u89d2\u8272" + a6.getName() + "\u7b49\u7d1a:" + a6.getLevel() + " (\u7de8\u865f: " + a6.getId() + ")\u932f\u8aa4\u539f\u56e0:" + sQLException);
        }
        MapleCharacter mapleCharacter13 = a6;
        mapleCharacter13.Ib = false;
        World.removePlayerSaving(mapleCharacter13.nC);
        mapleCharacter13.saveToDB_Others(a4, a5);
        a6.UpdateSaveTime();
        return n2;
        catch (DatabaseException | UnsupportedOperationException | SQLException exception) {
            try {
                n2 = 0;
                System.out.println(exception);
                FilePrinter.printError(FixDropNullItem.ALLATORIxDEMO("{'F*S\u0005^'D'U2S4\u00182N2"), exception, MapleNodes.ALLATORIxDEMO("U\u89fe\u827c\u5b74\u6a9aq\u513c\u5b74\u89dc\u825e\u593f\u657b"));
                FileoutputUtil.logToFile(FixDropNullItem.ALLATORIxDEMO("Z)Q5\u0019\u000eW%]i\u5104\u5b1e\u89e4\u8234\u5907\u6511\u00182N2"), "\r\n " + FileoutputUtil.NowTime() + "\u89d2\u8272" + a6.getName() + "\u7b49\u7d1a:" + a6.getLevel() + " (\u7de8\u865f: " + a6.getId() + ")\u932f\u8aa4\u539f\u56e0:" + exception);
                try {
                    if (druidPooledConnection != null) {
                        druidPooledConnection.rollback();
                    }
                }
                catch (SQLException sQLException) {
                    FilePrinter.printError(MapleNodes.ALLATORIxDEMO("CM~@kofM|MmXk^ XvX"), exception, "[\u89d2\u8272\u5b58\u6a94] \u5132\u5b58\u5931\u6557\uff0c\u7e7c\u7e8c\u4f7f\u7528\u66ab\u5b58\u6a94\u4e0d\u5132\u5b58\u8cc7\u6599\u5eab \u89d2\u8272:" + a6.getName());
                    FileoutputUtil.logToFile(FixDropNullItem.ALLATORIxDEMO("Z)Q5\u0019\u000eW%]i\u5104\u5b1e\u89e4\u8234\u5907\u6511\u00182N2"), "\r\n " + FileoutputUtil.NowTime() + "\u89d2\u8272" + a6.getName() + "\u7b49\u7d1a:" + a6.getLevel() + " (\u7de8\u865f: " + a6.getId() + ")\u932f\u8aa4\u539f\u56e0:" + exception);
                }
                try {
                    if (statement != null) {
                        statement.close();
                    }
                    if (statement2 != null) {
                        statement2.close();
                    }
                    if (resultSet != null) {
                        resultSet.close();
                    }
                    if (druidPooledConnection != null) {
                        DruidPooledConnection druidPooledConnection9 = druidPooledConnection;
                        druidPooledConnection9.setAutoCommit(true);
                        druidPooledConnection9.setTransactionIsolation(4);
                    }
                    if (druidPooledConnection != null) {
                        druidPooledConnection.close();
                    }
                }
                catch (SQLException sQLException) {
                    n2 = 0;
                    FilePrinter.printError(MapleNodes.ALLATORIxDEMO("CM~@kofM|MmXk^ XvX"), sQLException, "[\u89d2\u8272\u5b58\u6a94] \u89d2\u8272" + a6.getName() + " \u932f\u8aa4\u81ea\u52d5\u8fd4\u56de\u5132\u5b58\u529f\u80fd");
                    FileoutputUtil.logToFile(FixDropNullItem.ALLATORIxDEMO("Z)Q5\u0019\u000eW%]i\u5104\u5b1e\u89e4\u8234\u5907\u6511\u00182N2"), "\r\n " + FileoutputUtil.NowTime() + "\u89d2\u8272" + a6.getName() + "\u7b49\u7d1a:" + a6.getLevel() + " (\u7de8\u865f: " + a6.getId() + ")\u932f\u8aa4\u539f\u56e0:" + sQLException);
                }
            }
            catch (Throwable throwable) {
                try {
                    if (statement != null) {
                        statement.close();
                    }
                    if (statement2 != null) {
                        statement2.close();
                    }
                    if (resultSet != null) {
                        resultSet.close();
                    }
                    if (druidPooledConnection != null) {
                        DruidPooledConnection druidPooledConnection10 = druidPooledConnection;
                        druidPooledConnection10.setAutoCommit(true);
                        druidPooledConnection10.setTransactionIsolation(4);
                    }
                    if (druidPooledConnection != null) {
                        druidPooledConnection.close();
                    }
                }
                catch (SQLException sQLException) {
                    n2 = 0;
                    FilePrinter.printError(MapleNodes.ALLATORIxDEMO("CM~@kofM|MmXk^ XvX"), sQLException, "[\u89d2\u8272\u5b58\u6a94] \u89d2\u8272" + a6.getName() + " \u932f\u8aa4\u81ea\u52d5\u8fd4\u56de\u5132\u5b58\u529f\u80fd");
                    FileoutputUtil.logToFile(FixDropNullItem.ALLATORIxDEMO("Z)Q5\u0019\u000eW%]i\u5104\u5b1e\u89e4\u8234\u5907\u6511\u00182N2"), "\r\n " + FileoutputUtil.NowTime() + "\u89d2\u8272" + a6.getName() + "\u7b49\u7d1a:" + a6.getLevel() + " (\u7de8\u865f: " + a6.getId() + ")\u932f\u8aa4\u539f\u56e0:" + sQLException);
                }
                MapleCharacter mapleCharacter14 = a6;
                mapleCharacter14.Ib = false;
                World.removePlayerSaving(mapleCharacter14.nC);
                mapleCharacter14.saveToDB_Others(a4, a5);
                a6.UpdateSaveTime();
                throw throwable;
            }
            try {
                if (statement != null) {
                    statement.close();
                }
                if (statement2 != null) {
                    statement2.close();
                }
                if (resultSet != null) {
                    resultSet.close();
                }
                if (druidPooledConnection != null) {
                    DruidPooledConnection druidPooledConnection11 = druidPooledConnection;
                    druidPooledConnection11.setAutoCommit(true);
                    druidPooledConnection11.setTransactionIsolation(4);
                }
                if (druidPooledConnection != null) {
                    druidPooledConnection.close();
                }
            }
            catch (SQLException sQLException) {
                n2 = 0;
                FilePrinter.printError(MapleNodes.ALLATORIxDEMO("CM~@kofM|MmXk^ XvX"), sQLException, "[\u89d2\u8272\u5b58\u6a94] \u89d2\u8272" + a6.getName() + " \u932f\u8aa4\u81ea\u52d5\u8fd4\u56de\u5132\u5b58\u529f\u80fd");
                FileoutputUtil.logToFile(FixDropNullItem.ALLATORIxDEMO("Z)Q5\u0019\u000eW%]i\u5104\u5b1e\u89e4\u8234\u5907\u6511\u00182N2"), "\r\n " + FileoutputUtil.NowTime() + "\u89d2\u8272" + a6.getName() + "\u7b49\u7d1a:" + a6.getLevel() + " (\u7de8\u865f: " + a6.getId() + ")\u932f\u8aa4\u539f\u56e0:" + sQLException);
            }
            MapleCharacter mapleCharacter15 = a6;
            mapleCharacter15.Ib = false;
            World.removePlayerSaving(mapleCharacter15.nC);
            mapleCharacter15.saveToDB_Others(a4, a5);
            a6.UpdateSaveTime();
            return n2;
        }
    }

    public /* synthetic */ void setHp_Force(int a2) {
        MapleCharacter a3;
        if (World.Find.findChannel(a3.cB) <= 0) {
            a3.UpdateCharacter(FixDropNullItem.ALLATORIxDEMO("^6"), a2);
            return;
        }
        a3.getStat().setHp(a2);
    }

    public /* synthetic */ int getLifeRandom() {
        MapleCharacter a2;
        return a2.SB;
    }

    public /* synthetic */ void expandInventory(byte a2, int a3) {
        MapleCharacter a4;
        MapleCharacter mapleCharacter = a4;
        MapleInventory mapleInventory = mapleCharacter.getInventory(MapleInventoryType.getByType(a2));
        mapleInventory.addSlot((byte)a3);
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.getSlotUpdate(a2, mapleInventory.getSlotLimit()));
    }

    public /* synthetic */ boolean isSigned() {
        MapleCharacter a2;
        return a2.getBossLogReload(MapleNodes.ALLATORIxDEMO("\u6bc1\u65c9\u7c33\u521c")) >= 1;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public final /* synthetic */ Map<Integer, Pair<Integer, Integer>> getOfflineItems() {
        hashMap = new HashMap<Integer, Pair<Integer, Integer>>();
        druidPooledConnection = DBConPool.getInstance().getDataSource().getConnection();
        preparedStatement = druidPooledConnection.prepareStatement(FixDropNullItem.ALLATORIxDEMO("5S*S%Bf\u001cfP4Y+\u0016)P Z/X#_2S+\u00161^#D#\u0016'U%Y3X2_\"\u0016{\u0016y"));
        preparedStatement.setInt(1, a2.nC);
        resultSet = preparedStatement.executeQuery();
        block9: while (true) {
            v0 = resultSet;
            while (v0.next()) {
                if (!MapleItemInformationProvider.getInstance().itemExists(resultSet.getInt(MapleNodes.ALLATORIxDEMO("gXkAgH")))) continue block9;
                v1 = resultSet;
                v0 = v1;
                hashMap.put(v1.getInt(FixDropNullItem.ALLATORIxDEMO("_\"")), new Pair<Integer, Integer>(resultSet.getInt(MapleNodes.ALLATORIxDEMO("gXkAgH")), resultSet.getInt(FixDropNullItem.ALLATORIxDEMO("%Y3X2"))));
            }
            break;
        }
        preparedStatement.close();
        resultSet.close();
        ** if (druidPooledConnection == null) goto lbl-1000
lbl-1000:
        // 1 sources

        {
            druidPooledConnection.close();
        }
lbl-1000:
        // 2 sources

        {
        }
        {
            catch (Throwable throwable) {
                try {
                    block13: {
                        if (druidPooledConnection != null) {
                            try {
                                druidPooledConnection.close();
                                v2 = throwable;
                                break block13;
                            }
                            catch (Throwable throwable3) {
                                throwable.addSuppressed(throwable3);
                            }
                        }
                        v2 = throwable;
                    }
                    throw v2;
                }
                catch (SQLException sQLException) {
                    System.err.println(sQLException);
                }
            }
        }
        return hashMap;
    }

    public /* synthetic */ byte getSecondSkinColor() {
        MapleCharacter a2;
        if (JobConstants.is\u5929\u4f7f\u7834\u58de\u8005(a2.ob)) {
            if (a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u0015S%Y(R\u0019e-_(")) == 0L) {
                a2.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u007fkOaBjs]GgB"), 0L);
            }
            return (byte)a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u0015S%Y(R\u0019e-_("));
        }
        return a2.jd;
    }

    public /* synthetic */ void addSkillTemp(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.setCharacterSetTemp(Integer.toString(a2), mapleCharacter.getSkillTemp(a2) + 1L);
    }

    public /* synthetic */ void removeDoor() {
        AbstractMapleMapObject abstractMapleMapObject;
        MapleCharacter a2;
        MapleDoor mapleDoor = a2.getDoors().iterator().next();
        Iterator<AbstractMapleMapObject> iterator = mapleDoor.getTarget().getCharactersThreadsafe().iterator();
        Iterator<AbstractMapleMapObject> iterator2 = iterator;
        while (iterator2.hasNext()) {
            abstractMapleMapObject = iterator.next();
            iterator2 = iterator;
            mapleDoor.sendDestroyData(abstractMapleMapObject.getClient());
        }
        iterator = mapleDoor.getTown().getCharactersThreadsafe().iterator();
        Iterator<AbstractMapleMapObject> iterator3 = iterator;
        while (iterator3.hasNext()) {
            abstractMapleMapObject = iterator.next();
            iterator3 = iterator;
            mapleDoor.sendDestroyData(abstractMapleMapObject.getClient());
        }
        iterator = a2.getDoors().iterator();
        Iterator<AbstractMapleMapObject> iterator4 = iterator;
        while (iterator4.hasNext()) {
            abstractMapleMapObject = (MapleDoor)iterator.next();
            iterator4 = iterator;
            MapleDoor mapleDoor2 = mapleDoor;
            mapleDoor2.getTarget().removeMapObject(abstractMapleMapObject);
            mapleDoor2.getTown().removeMapObject(abstractMapleMapObject);
        }
        a2.clearDoors();
    }

    public /* synthetic */ byte getFairyExp() {
        MapleCharacter a2;
        return a2.yc;
    }

    public final /* synthetic */ void clearSkills() {
        Iterator<ISkill> iterator;
        Iterator<ISkill> iterator2 = iterator = SkillFactory.getAllSkills().iterator();
        while (iterator2.hasNext()) {
            MapleCharacter a2;
            ISkill iSkill = iterator.next();
            iterator2 = iterator;
            a2.changeSkillLevel(iSkill, 0, 0);
        }
    }

    public /* synthetic */ void removeMechDoor() {
        MapleCharacter a2;
        Iterator<MechDoor> iterator;
        Iterator<MechDoor> iterator2 = iterator = a2.getMechDoors().iterator();
        while (iterator2.hasNext()) {
            MechDoor mechDoor = iterator.next();
            Iterator<MapleCharacter> iterator3 = a2.getMap().getCharactersThreadsafe().iterator();
            while (iterator3.hasNext()) {
                Iterator<MapleCharacter> iterator4;
                MapleCharacter mapleCharacter = iterator4.next();
                iterator3 = iterator4;
                mechDoor.sendDestroyData(mapleCharacter.getClient());
            }
            a2.getMap().removeMapObject(mechDoor);
            iterator2 = iterator;
        }
        a2.clearMechDoors();
    }

    public /* synthetic */ void updateFishKingScore(int a2) {
        MapleCharacter mapleCharacter;
        MapleCharacter a3;
        if (a3.Ba + a2 <= 0) {
            mapleCharacter = a3;
            a3.Ba = 0;
        } else {
            MapleCharacter mapleCharacter2 = a3;
            mapleCharacter = mapleCharacter2;
            mapleCharacter2.Ba += a2;
        }
        mapleCharacter.getClient().sendPacket(MaplePacketCreator.updateFishKingScore(a3.Ba));
    }

    public /* synthetic */ void setSubcategory(byte a2) {
        a.zC = a2;
    }

    public /* synthetic */ void useTemporaryStats_Aran() {
        MapleCharacter a2;
        a2.getClient().sendPacket(MaplePacketCreator.temporaryStats_Aran());
    }

    public /* synthetic */ void addVipFromMeso() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        long l2 = mapleCharacter.getVipFromMeso() + 1;
        mapleCharacter.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6965\u5e25\u63ed\u0010\u007f\u0016"), l2, false);
    }

    public /* synthetic */ int getMarriageItemId() {
        MapleCharacter a2;
        return a2.db;
    }

    public /* synthetic */ void giveCygnusQuest() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        MapleCharacter mapleCharacter2 = a2;
        a2.setQuestAdd(MapleQuest.getInstance(20022), (byte)1, "1");
        mapleCharacter2.setQuestAdd(MapleQuest.getInstance(20010), (byte)1, null);
        mapleCharacter2.setQuestAdd(MapleQuest.getInstance(20000), (byte)1, null);
        mapleCharacter.setQuestAdd(MapleQuest.getInstance(20015), (byte)1, null);
        mapleCharacter.setQuestAdd(MapleQuest.getInstance(20020), (byte)1, null);
    }

    public /* synthetic */ void dropDebugMessage(String a2) {
        MapleCharacter a3;
        if (a3.getDebugMessage()) {
            a3.dropMessage(6, a2);
        }
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    public /* synthetic */ void gainExpMonster(int a, boolean a, boolean a, int a, int a, int a, MapleMonster a) {
        block31: {
            block29: {
                block32: {
                    block30: {
                        if (a == null) return;
                        if (!a.isAlive()) {
                            return;
                        }
                        var8_10 = 0;
                        if (GameSetConstants.MAPLE_VERSION >= 134 && a.Ia != null) {
                            v0 = a;
                            var9_11 = v0.rC.getCharacterById(v0.Ia.getCharacter(a.Ia.getCharacter(0).getId() == a.getId() ? 1 : 0).getId());
                            if (var9_11 != null) {
                                var8_10 = a / 2;
                            }
                        }
                        var9_12 = a;
                        if (a.hasDisease(MapleBuffStat.CURSE)) {
                            a /= 2;
                        }
                        var10_15 = a = (int)((double)a * (a.getLevel() < 10 ? (double)GameConstants.getExpRate_Below10(a.getJob()) : ChannelServer.getInstance(a.rC.getWorld(), a.rC.getChannel()).getExpRate(a.getWorld(), a)));
                        if (GameSetConstants.VIPSYSTEM && GameSetConstants.VIPEXP && a.isVip()) {
                            a = (int)((double)a * (1.0 + (double)a.getVipExpRate() / 100.0));
                        }
                        var10_15 = a - var10_15;
                        if (a > 0) {
                            a = (int)((double)a * (1.0 + (double)a / 100.0));
                        }
                        a = Math.min(0x7FFFFFFF, a);
                        a = 0;
                        var11_16 = 0;
                        var12_17 = 0;
                        if (a > 1) {
                            var12_17 = a;
                            v1 = a = (int)((byte)Math.min(a, 6));
                            var12_17 = (int)((double)var12_17 * ((double)(6 * (v1 * (3 + (1 + v1) / 2)) - 10) / 100.0));
                        }
                        var13_18 = a;
                        var15_19 = 0;
                        v2 = a;
                        var16_20 = v2.getBuffedValue(MapleBuffStat.HOLY_SYMBOL);
                        var17_23 = v2.getBuffSource(MapleBuffStat.HOLY_SYMBOL);
                        if (var16_20 != null && var17_23 != -1) {
                            var18_24 = 1.0 + var16_20.doubleValue() / (var17_23 == 2311003 && a < 2 ? 500.0 : 100.0);
                            var12_17 = (int)((double)var12_17 * var18_24);
                        }
                        var13_18 = (long)((double)var13_18 * a.getAllExpRateMultiply(a, a));
                        var13_18 = (long)((double)var13_18 + (double)var9_12 * a.getAllExpRateAdd());
                        var13_18 -= (long)a;
                        var13_18 = Math.max(0L, var13_18);
                        var18_25 = a + (int)var13_18;
                        a = (int)((double)var18_25 / 100.0 * (double)a);
                        if (a > 1 && (a = a.rC.getPartyBonusRate()) > 0) {
                            a = (int)((double)a + (double)(var18_25 * a) * 0.01);
                        }
                        a = (int)((double)a / 100.0 * (double)a.getStat().equipmentBonusExp);
                        if (a.getStat().equippedFairy) {
                            a += (int)((double)a / 100.0 * (double)a.getFairyExp());
                        }
                        if (a.getBuffedValue(MapleBuffStat.EXP_BUFF_RATE) != null && (a = a.getBuffedValue(MapleBuffStat.EXP_BUFF_RATE).intValue()) > 0) {
                            var15_19 = (int)((double)a / 100.0 * (double)a);
                        }
                        v3 = a;
                        v4 = a;
                        v4.expirationTask(true, false);
                        a -= var10_15;
                        a = v3.ALLATORIxDEMO(a);
                        var13_18 = v4.ALLATORIxDEMO((int)var13_18);
                        a = v3.ALLATORIxDEMO(a);
                        var11_16 = v3.ALLATORIxDEMO(var11_16);
                        var12_17 = v3.ALLATORIxDEMO(var12_17);
                        a = v3.ALLATORIxDEMO(a);
                        a = v3.ALLATORIxDEMO(a);
                        var10_15 = v3.ALLATORIxDEMO(var10_15);
                        a = a + (int)var13_18 + a + var11_16 + var12_17 + a + a + var10_15 + var8_10 + var15_19;
                        var8_10 = v3.getExp();
                        if (a > 0 && a < a && a.isShowErr()) {
                            a.showInfo(MapleNodes.ALLATORIxDEMO("\u7d9d\u9a7b\u865b\u742a"), true, "\u7e3d\u7d93\u9a57: " + a + "\u57fa\u790e\u7d93\u9a57: " + a);
                        }
                        if (a > 0) {
                            a.GB.checkEquipLevels(a, a);
                            var9_13 = a.getInventory(MapleInventoryType.SETUP).findByUniqueId(a.getExpChairSelect());
                            if (var9_13 != null) {
                                var16_21 = a * 5 / 100;
                                var17_23 = ChairDataFactory.getChairExpMax(var9_13.getItemId()) * 100;
                                var18_25 = a.getChairExp(a.getExpChairSelect());
                                if (var18_25 + var16_21 <= var17_23 && var16_21 > 0) {
                                    v5 = a;
                                    v5.gainChairExp(v5.getExpChairSelect(), var16_21);
                                    v5.dropDebugMessage("\u7d93\u9a57\u6905\u5b50:" + var9_13.getItemName() + " \u589e\u52a0\u7d93\u9a57:" + var16_21);
                                }
                            }
                        }
                        var9_14 = GameSetConstants.MAXLEVEL;
                        var16_22 = GameSetConstants.MAXLEVEL_KOC;
                        v6 = a;
                        var17_23 = GameConstants.getExpNeededForLevel(v6.IC);
                        if (!GameConstants.isKOC(v6.ob) || a.IC < var16_22) break block29;
                        if (a.RC + a <= var17_23) break block30;
                        v7 = a;
                        a.setExp(var17_23);
                        break block31;
                    }
                    if (a.IC < var16_22) break block32;
                    v7 = a;
                    a.setExp(0);
                    break block31;
                }
                if ((long)a.RC + (long)a >= 0x7FFFFFFFL) ** GOTO lbl127
                v8 = a;
                v7 = v8;
                a.RC += v8;
                break block31;
            }
            if (a.IC >= var9_14) {
                v7 = a;
                a.setExp(0);
            } else {
                var18_25 = 0;
                if (a.RC + a >= var17_23 || a.RC >= var17_23) {
                    block28: {
                        var16_22 = 1;
                        if ((long)a.RC + (long)a < 0x7FFFFFFFL) {
                            a.RC += a;
                        }
                        while (a.RC >= var17_23) {
                            v9 = a;
                            v9.levelUp();
                            var18_25 = 1;
                            var17_23 = GameConstants.getExpNeededForLevel(v9.IC);
                            if (var16_22 == 0) continue;
                            v10 = a;
                            break block28;
                        }
                        v10 = a;
                    }
                    if (v10.IC >= var9_14) {
                        a.setExp(0);
                    } else {
                        v11 = a;
                        var17_23 = GameConstants.getExpNeededForLevel(v11.IC);
                        if (v11.RC >= var17_23) {
                            a.setExp(var17_23);
                        }
                    }
                } else {
                    a.RC += a;
                }
                if (a > 0) {
                    a.familyRep(var8_10, var17_23, (boolean)var18_25);
                }
lbl127:
                // 4 sources

                v7 = a;
            }
        }
        if (v7 == 0) return;
        if (a.RC >= 0) ** GOTO lbl138
        if (a > 0) {
            v12 = a;
            v13 = v12;
            v12.setExp(GameConstants.getExpNeededForLevel(v12.IC));
        } else {
            if (a < 0) {
                a.setExp(0);
            }
lbl138:
            // 4 sources

            v13 = a;
        }
        v13.updateSingleStat(MapleStat.EXP, a.getExp());
        if (a == false) return;
        a.Cb.sendPacket(MaplePacketCreator.GainEXP_Monster(a + (int)var13_18, a, a, var11_16, var12_17, a, a, var10_15, var15_19));
    }

    public /* synthetic */ void setMobVac_Count(int a2) {
        a.Sa = a2;
    }

    public /* synthetic */ int[] getAllFaces() {
        MapleCharacter a2;
        return a2.fb;
    }

    public /* synthetic */ void forceReAddItem_Equip(IItem a2, MapleInventoryType a3) {
        MapleCharacter a4;
        a4.forceReAddItem_Equip(a2, a3, true);
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ boolean addMonsterPetKill(int a) {
        var2_3 = DBConPool.getInstance().getDataSource().getConnection();
        try {
            var3_5 = null;
            v0 = var3_5 = var2_3.prepareStatement(MapleNodes.ALLATORIxDEMO("y^hOxK\fcC`_zI|\\kX.\u007fKx.\\bMwI|Gg@bIj\f3\f~@oUk^eEb@kH.\u0007.\u001d.{Fi\\i.OfM|MmXk^gH.\u0011.\u0013.M`H.AaB}Xk^gH.\u0011.\u0013"));
            v0.setInt(1, a.XC);
            var3_5.setInt(2, a);
            v0.execute();
            var3_5.close();
            ** if (var2_3 == null) goto lbl-1000
        }
        catch (Throwable var3_6) {
            if (var2_3 == null) ** GOTO lbl24
            try {
                var2_3.close();
                v1 = var3_6;
                ** GOTO lbl25
            }
            catch (Throwable a) {
                try {
                    var3_6.addSuppressed(a);
lbl24:
                    // 2 sources

                    v1 = var3_6;
lbl25:
                    // 2 sources

                    throw v1;
                }
                catch (Exception var2_4) {
                    FilePrinter.printError(FixDropNullItem.ALLATORIxDEMO("5S2{)X5B#D\u0016S2\u00182N2"), var2_4);
                    return false;
                }
            }
        }
lbl-1000:
        // 1 sources

        {
            var2_3.close();
        }
lbl-1000:
        // 2 sources

        {
        }
        return true;
    }

    public /* synthetic */ void updateSingleStat(MapleStat a2, int a3, boolean a4) {
        MapleCharacter a5;
        if (a2 == MapleStat.AVAILABLESP) {
            a5.Cb.sendPacket(MaplePacketCreator.updateSp(a5, a4));
            return;
        }
        a2 = new Pair<MapleStat, Integer>((MapleStat)a2, a3);
        a5.Cb.sendPacket(MaplePacketCreator.updatePlayerStats(Collections.singletonList(a2), a4, a5));
    }

    public /* synthetic */ long getMonsterKillYesturday() {
        MapleCharacter a2;
        return a2.getCharacterSetYesturday(FixDropNullItem.ALLATORIxDEMO("\u601c\u722f\u64fc\u6bfc"), false);
    }

    public /* synthetic */ void checkMeso() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        int n2 = ServerTempStorage.getCharacterMeso(mapleCharacter);
        int n3 = mapleCharacter.vA;
        int n4 = n2 - n3;
        if (n2 != 0 && n4 > 1000000 && n3 != n2 && !a2.isGM()) {
            FileoutputUtil.logToFile(MapleNodes.ALLATORIxDEMO("@aK}\u0003FMmG!\u697f\u5e6d\u66d8\u52db\u755c\u5e36\u0003\u695d\u5e4f\u7d0e\u9328&\u7657\u516b\u0005 XvX"), FileoutputUtil.NowTime() + "\u89d2\u8272\u540d\u5b57:" + a2.getName() + "\u6953\u5e63\u66f4\u52d5\u7570\u5e38,\u6b63\u5e38\u61c9\u6709\u6953\u5e63: " + n2 + ",\u73a9\u5bb6\u64c1\u6709:" + n3 + "\r\n");
            World.Broadcast.broadcastGMMessage(MaplePacketCreator.getItemNotice("[GM\u5bc6\u8a9e] " + a2.getName() + "\u6953\u5e63\u66f4\u52d5\u7570\u5e38,\u6b63\u5e38\u61c9\u6709\u6953\u5e63: " + n2 + ",\u73a9\u5bb6\u64c1\u6709:" + n3 + " \u5df2\u56de\u6714!"));
            a2.vA = n2;
        }
    }

    public /* synthetic */ void setWalkDebugMessage(boolean a2) {
        a.TB = a2;
    }

    public /* synthetic */ void setLinkMid(int a2) {
        a.fd = a2;
    }

    public /* synthetic */ void setLifeRandom() {
        a.SB = (int)(Math.random() * 6.0) + 1;
    }

    public /* synthetic */ void setTouzhuNum(int a2) {
        a.ad = a2;
    }

    public /* synthetic */ Pair<Integer, Integer> handleMaxHp_beforeBigBang(int a2, int a3) {
        MapleCharacter a4;
        if (JobConstants.isBeginnerJob(a4.ob)) {
            a2 += Randomizer.rand(12, 16);
            a3 += Randomizer.rand(10, 12);
        } else if (a4.ob >= 100 && a4.ob <= 132 || a4.ob >= 1100 && a4.ob <= 1112) {
            a2 += Randomizer.rand(24, 28);
            a3 += Randomizer.rand(4, 6);
        } else if (a4.ob >= 200 && a4.ob <= 232 || a4.ob >= 1200 && a4.ob <= 1212) {
            a2 += Randomizer.rand(10, 14);
            a3 += Randomizer.rand(22, 24);
        } else if (a4.ob >= 300 && a4.ob <= 322 || a4.ob >= 400 && a4.ob <= 434 || a4.ob >= 1300 && a4.ob <= 1312 || a4.ob >= 1400 && a4.ob <= 1412) {
            a2 += Randomizer.rand(20, 24);
            a3 += Randomizer.rand(14, 16);
        } else if (a4.ob >= 500 && a4.ob <= 522 || a4.ob >= 1500 && a4.ob <= 1512) {
            a2 += Randomizer.rand(22, 26);
            a3 += Randomizer.rand(18, 22);
        } else if (a4.ob >= 2100 && a4.ob <= 2112) {
            a2 += Randomizer.rand(50, 52);
            a3 += Randomizer.rand(4, 6);
        } else if (a4.ob >= 2200 && a4.ob <= 2218) {
            a2 += Randomizer.rand(12, 16);
            a3 += Randomizer.rand(50, 52);
        } else if (!MapleJob.is\u7ba1\u7406\u54e1(a4.ob)) {
            MapleCharacter mapleCharacter = a4;
            MapleCharacter mapleCharacter2 = a4;
            FileoutputUtil.logToFile(MapleNodes.ALLATORIxDEMO("@aK}\u0003KTmI~X!\u6706\u865b\u742a\u5349\u7d36F|C| XvX"), FileoutputUtil.CurrentReadable_Time() + " \u73a9\u5bb6<" + mapleCharacter.cB + "> \u7b49\u7d1a<" + mapleCharacter.IC + "> \u8f49\u8077<" + mapleCharacter2.ob + "> \u4e2d\u6587\u8077\u696d<" + MapleJob.getById(mapleCharacter2.ob).name() + "> \u7248\u672c:" + GameSetConstants.MAPLE_VERSION + "\r\n");
            System.err.println("\u8077\u696d " + MapleJob.getById(a4.ob).name() + " \u672a\u8655\u7406\u5347\u7d1aHPMP\u589e\u52a0");
        }
        return new Pair<Integer, Integer>(a2, a3);
    }

    public /* synthetic */ int[] GetHairAlbum() {
        MapleCharacter a2;
        return a2.JB;
    }

    public /* synthetic */ void closeUI(int a2) {
        MapleCharacter a3;
        a3.Cb.sendPacket(UIPacket.closeUI(a2));
    }

    public /* synthetic */ long getCharacterSetYesturday(String a2, boolean a3) {
        MapleCharacter a4;
        a2 = "\u65e5\u8a08" + (String)a2 + FileoutputUtil.YesturdayDay();
        return a4.getCharacterSet((String)a2, a3);
    }

    public /* synthetic */ void setOperateStorageExceed(MapleStorageType a2) {
        a.DC = a2;
    }

    public /* synthetic */ int getLinkMid(int a2) {
        MapleCharacter a3;
        if (a3.Ka.containsKey(a2)) {
            return a3.Ka.get(a2);
        }
        return 0;
    }

    public /* synthetic */ int getMaxMp() {
        MapleCharacter a2;
        return a2.getStat().getMaxMp();
    }

    public /* synthetic */ void addMaxMP(int a2) {
        MapleCharacter a3;
        a2 = a3.GB.getMaxMp() + a2;
        ArrayList<Pair<MapleStat, Integer>> arrayList = new ArrayList<Pair<MapleStat, Integer>>();
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.MAXMP, a2));
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.GB.setMaxMp(a2);
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.updatePlayerStats(arrayList, a3));
    }

    public final /* synthetic */ String getInfoQuest(int a2) {
        MapleCharacter a3;
        if (a3.CA.containsKey(a2)) {
            return a3.CA.get(a2);
        }
        return "";
    }

    @Override
    public /* synthetic */ void sendSpawnData(MapleClient a2) {
        MapleCharacter a3;
        if (a2.getPlayer().allowedToTarget(a3)) {
            int n2;
            a2.sendPacket(MaplePacketCreator.spawnPlayerMapobject(a3));
            if (GameSetConstants.MAPLE_VERSION == 75) {
                MapleCharacter mapleCharacter = a3;
                a3.rC.broadcastMessage(mapleCharacter, MaplePacketCreator.movePlayer(a3.getId(), MovementParse.parseMovementHere(a3), mapleCharacter.getPosition()), false);
            }
            if (a3.getParty() != null && !a3.isClone()) {
                MapleCharacter mapleCharacter = a3;
                mapleCharacter.silentPartyUpdate();
                mapleCharacter.updatePartyMemberHP();
                mapleCharacter.receivePartyMemberHP();
            }
            Object object = a3.qb;
            int n3 = a3.qb.length;
            int n4 = n2 = 0;
            while (n4 < n3) {
                WeakReference<MapleCharacter> weakReference = object[n2];
                if (weakReference.get() != null) {
                    ((MapleCharacter)weakReference.get()).sendSpawnData(a2);
                }
                n4 = ++n2;
            }
            if (a3.PB != null) {
                a2.sendPacket(MaplePacketCreator.spawnDragon(a3.PB));
            }
            if (GameSetConstants.MAPLE_VERSION >= 134) {
                if (a3.Da != null && a3.getInventory(MapleInventoryType.EQUIPPED).getItem((short)-33) != null) {
                    MapleCharacter mapleCharacter = a3;
                    a2.sendPacket(MaplePacketCreator.spawnAndroid(mapleCharacter, mapleCharacter.Da));
                }
                if (a3.ba != null) {
                    a2.sendPacket(MaplePacketCreator.spawnFamiliar(a3.ba, true));
                }
            }
            if (a3.Hb != null && a3.Hb.size() > 0) {
                Object object2 = object = a3.Hb.iterator();
                while (object2.hasNext()) {
                    MapleSummon mapleSummon = (MapleSummon)object.next();
                    if (GameSetConstants.MAPLE_VERSION == 75 && a3.MB.contains(mapleSummon)) {
                        object2 = object;
                        continue;
                    }
                    a2.sendPacket(MaplePacketCreator.spawnSummon(mapleSummon, false));
                    object2 = object;
                }
            }
        }
    }

    public /* synthetic */ long getEarnMaplePoint() {
        MapleCharacter a2;
        return a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u4ec4\u65c9\u737c\u5fbb\u695d\u9ef2"), false);
    }

    public /* synthetic */ void setAntiMacroFailureTimes(int a2) {
        MapleCharacter a3;
        a3.updateOneInfo(99999, FixDropNullItem.ALLATORIxDEMO("w(B/{'U4Y\u0011Y4X/X!"), String.valueOf(a2));
    }

    public /* synthetic */ void setMobVac_Coefficient(int a2) {
        MapleCharacter a3;
        if (a3.Va == a2) {
            a3.addMobVac_Count();
            MapleCharacter mapleCharacter = a3;
            long l2 = (System.currentTimeMillis() - mapleCharacter.getMobVac_LastTime()) / 1000L;
            if (mapleCharacter.getMobVac_Count() > 50 && l2 >= 1L) {
                double d2;
                double d3 = (long)a3.getMobVac_Count() / l2;
                if (d2 > 25.0) {
                    String string = "(\u5730\u5716: " + a3.getMapId() + " \u983b\u9053: " + a3.getClient().getChannel() + "\u6bcf\u79d2\u89f8\u767c\u6b21\u6578:" + d3 + ")";
                    a3.getCheatTracker().registerOffense(CheatingOffense.\u5438\u602a_\u65b0, string);
                    a3.Va = a2;
                    a3.Sa = 0;
                    a3.setMobVac_LastTime(System.currentTimeMillis());
                    return;
                }
            }
        } else {
            MapleCharacter mapleCharacter = a3;
            mapleCharacter.Va = a2;
            mapleCharacter.Sa = 0;
            a3.setMobVac_LastTime(System.currentTimeMillis());
        }
    }

    public /* synthetic */ void setSpeakOutPut(String a2) {
        a.pd = a2;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ void setSignLog(int a) {
        var2_3 = DBConPool.getInstance().getDataSource().getConnection();
        try {
            var3_5 = null;
            v0 = var3_5 = var2_3.prepareStatement(MapleNodes.ALLATORIxDEMO("[|JmZi._gK`@aK.\u007fKx.XgAk_.\u0011.\u0013.{Fi\\i.MmOaY`XgH.\u0011.\u0013"));
            v0.setInt(1, a);
            var3_5.setInt(2, a.nC);
            v0.execute();
            var3_5.close();
            ** if (var2_3 == null) goto lbl-1000
        }
        catch (Throwable var3_6) {
            if (var2_3 == null) ** GOTO lbl25
            try {
                var2_3.close();
                v1 = var3_6;
                ** GOTO lbl26
            }
            catch (Throwable a) {
                try {
                    var3_6.addSuppressed(a);
lbl25:
                    // 2 sources

                    v1 = var3_6;
lbl26:
                    // 2 sources

                    throw v1;
                }
                catch (Exception var2_4) {
                    FilePrinter.printError(FixDropNullItem.ALLATORIxDEMO("W\"R\u0015_!X\nY!\u00182N2"), var2_4);
                }
            }
        }
lbl-1000:
        // 1 sources

        {
            var2_3.close();
            return;
        }
lbl-1000:
        // 1 sources

        {
        }
    }

    public /* synthetic */ MonsterBook getMonsterBook() {
        MapleCharacter a2;
        return a2.qA;
    }

    public /* synthetic */ void gainSP(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        int[] arrn = a3.nc;
        int n2 = GameConstants.getSkillBook(mapleCharacter.ob);
        arrn[n2] = arrn[n2] + a2;
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.updateSp(a3, false));
    }

    public final /* synthetic */ boolean haveItem(int a2, int a3) {
        MapleCharacter a4;
        return a4.haveItem(a2, a3, true, true);
    }

    public /* synthetic */ MonsterFamiliar getSummonedFamiliar() {
        MapleCharacter a2;
        return a2.ba;
    }

    public /* synthetic */ void sidekickUpdate() {
        if (GameSetConstants.MAPLE_VERSION >= 134) {
            MapleCharacter a2;
            if (a2.Ia == null) {
                return;
            }
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.Ia.getCharacter(mapleCharacter.Ia.getCharacter(0).getId() == a2.getId() ? 0 : 1).update(a2);
            MapleCharacter mapleCharacter2 = a2;
            if (!MapleSidekick.checkLevels(a2.getLevel(), mapleCharacter2.Ia.getCharacter(mapleCharacter2.Ia.getCharacter(0).getId() == a2.getId() ? 1 : 0).getLevel())) {
                a2.Ia.eraseToDB();
            }
        }
    }

    public final /* synthetic */ void handleHpMpRecover() {
        MapleCharacter a2;
        if (a2.GB.hpRecover > 0) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.healHP(mapleCharacter.GB.hpRecover);
        }
        if (!JobConstants.is\u60e1\u9b54\u6bba\u624b(a2.ob) && a2.GB.mpRecover > 0) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.healMP(mapleCharacter.GB.mpRecover);
        }
    }

    public /* synthetic */ void addCharacterSet(String a2, long a3) {
        MapleCharacter a4;
        MapleCharacter mapleCharacter = a4;
        mapleCharacter.setCharacterSet(a2, mapleCharacter.getCharacterSet(a2) + a3);
    }

    public /* synthetic */ void setMountId(int a2) {
        a.fA = a2;
    }

    public static /* synthetic */ MapleCharacter loadCharFromDB(int a2, MapleClient a3, boolean a4) {
        return MapleCharacter.loadCharFromDB(a2, a3, a4, null);
    }

    public /* synthetic */ int getIntNoRecord(int a2) {
        MapleCharacter a3;
        MapleQuestStatus mapleQuestStatus = a3.getQuestNoAdd(MapleQuest.getInstance(a2));
        if (mapleQuestStatus == null || mapleQuestStatus.getCustomData() == null) {
            if (a2 == 111112 && JobConstants.is\u72c2\u8c79\u7375\u4eba(a3.ob)) {
                return 20;
            }
            return 0;
        }
        return Integer.parseInt(mapleQuestStatus.getCustomData());
    }

    public /* synthetic */ void setWorld(byte a2) {
        a.wc = a2;
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ int getDayLogReload(String a) {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [1[TRYBLOCK], 3[TRYBLOCK]], but top level block is 5[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ boolean isHyperRockMap(int a2) {
        int n2;
        int n3 = n2 = 0;
        while (n3 < 13) {
            MapleCharacter a3;
            if (a3.RB[n2] == a2) {
                return true;
            }
            n3 = ++n2;
        }
        return false;
    }

    public /* synthetic */ void addSpendMaplePoint(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        long l2 = mapleCharacter.getSpendMaplePoint() + (long)a2;
        mapleCharacter.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u4ec4\u65c9\u82bf\u8c97\u695d\u9ef2"), l2, false);
    }

    public /* synthetic */ void finishAchievement(int a22) {
        try {
            MapleCharacter a3;
            if (!a3.achievementFinished(a22) && a3.isAlive() && !a3.isClone()) {
                MapleAchievements.getInstance().getById(a22).finishAchievement(a3);
                return;
            }
        }
        catch (Exception a22) {
            a22.printStackTrace();
        }
    }

    public /* synthetic */ void setAllianceRank(byte a2) {
        MapleCharacter a3;
        a3.jB = a2;
        if (a3.Rb != null) {
            a3.Rb.setAllianceRank(a2);
        }
    }

    public /* synthetic */ void DeleteExcludeItem(long a2) {
        Map.Entry<String, Long> entry2;
        MapleCharacter a3;
        LinkedList<Long> linkedList = new LinkedList<Long>();
        HashMap<String, Long> hashMap = new HashMap<String, Long>();
        for (Map.Entry<String, Long> entry2 : a3.ga.entrySet()) {
            if (entry2.getKey().contains(FixDropNullItem.ALLATORIxDEMO("\u9078\u6fb8\u725f\u5487"))) {
                linkedList.add((Long)entry2.getValue());
                continue;
            }
            hashMap.put((String)entry2.getKey(), (Long)entry2.getValue());
        }
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.ga.clear();
        mapleCharacter.ga.putAll(hashMap);
        int n2 = 1;
        entry2 = linkedList.iterator();
        while (entry2.hasNext()) {
            long l2 = (Long)entry2.next();
            if (l2 == a2) continue;
            String string = "\u904e\u6ffe\u7269\u54c1" + n2;
            ++n2;
            a3.ga.put(string, l2);
        }
    }

    public /* synthetic */ boolean isLevelBurnUp() {
        MapleCharacter a2;
        if (GameSetConstants.BURN_LEVELUP && a2.getLevel() > GameSetConstants.BURN_LEVELLIMIT[0] && a2.getLevel() < GameSetConstants.BURN_LEVELLIMIT[1]) {
            return false;
        }
        return false;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ int getOneTimeLog(String a) {
        block11: {
            block10: {
                var2_3 = DBConPool.getInstance().getDataSource().getConnection();
                var3_5 = 0;
                v0 = var4_7 = var2_3.prepareStatement(MapleNodes.ALLATORIxDEMO("_k@kOz\fmC{Bz\u0004$\u0005.J|Cc\faBkXgAk@aK.[fI|I.OfM|MmXk^gH.\u0011.\u0013.M`H.@aK.\u0011.\u0013"));
                v0.setInt(1, a.XC);
                v0.setString(2, (String)a);
                a = v0.executeQuery();
                if (!a.next()) break block10;
                v1 = a;
                v2 = v1;
                var3_5 = v1.getInt(1);
                ** GOTO lbl19
            }
            var3_5 = -1;
            v2 = a;
lbl19:
            // 2 sources

            v2.close();
            var4_7.close();
            a = var3_5;
            if (var2_3 == null) break block11;
            {
                catch (Throwable var3_6) {
                    try {
                        block12: {
                            if (var2_3 != null) {
                                try {
                                    var2_3.close();
                                    v3 = var3_6;
                                    break block12;
                                }
                                catch (Throwable var4_8) {
                                    var3_6.addSuppressed(var4_8);
                                }
                            }
                            v3 = var3_6;
                        }
                        throw v3;
                    }
                    catch (Exception var2_4) {
                        return -1;
                    }
                }
            }
            var2_3.close();
        }
        return a;
    }

    public /* synthetic */ int getCheckSelectionMin() {
        MapleCharacter a2;
        return a2.c;
    }

    public /* synthetic */ boolean isInvited() {
        MapleCharacter a2;
        return a2.rB;
    }

    public /* synthetic */ short getProfessionExp(int a2) {
        MapleCharacter a3;
        if ((a2 = a3.getSkillLevel(a2)) <= 0) {
            return 0;
        }
        return (short)(a2 & 0xFFFF);
    }

    public /* synthetic */ void setFamily(int a2, int a3, int a4, int a5) {
        MapleCharacter a6;
        if (a6.JC == null || a2 != a6.JC.getFamilyId() || a3 != a6.JC.getSeniorId() || a4 != a6.JC.getJunior1() || a5 != a6.JC.getJunior2()) {
            a6.makeMFC(a2, a3, a4, a5);
        }
    }

    public /* synthetic */ long getPotential1() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6658\u905c\u601c\u722f\u987b\u5950\u5081\u5bf5\u5296\u6256"), false);
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final /* synthetic */ String giveOffline(int a22) {
        Pair<Integer, Integer> pair;
        MapleCharacter a3;
        block9: {
            pair = a3.getOfflineItems().get(a22);
            if (pair == null) {
                return MapleNodes.ALLATORIxDEMO("\u7650\u7511\u6706\u77eb\u9303\u8aaa\u302e");
            }
            if (!a3.canHold(pair.getLeft(), pair.getRight())) {
                return FixDropNullItem.ALLATORIxDEMO("\u9768\u5e7e\u6287\u6b0f\uff3a\u60ee\u76b2\u808a\u5333\u7a3c\u95a5\u4e4b\u8d85\u3044");
            }
            try {
                DruidPooledConnection druidPooledConnection = DBConPool.getInstance().getDataSource().getConnection();
                try {
                    PreparedStatement preparedStatement = druidPooledConnection.prepareStatement(MapleNodes.ALLATORIxDEMO("jIbIzI.J|Cc\faJh@gBkEzIc\fyDk^k\fgH.\u0011.\u0013"));
                    preparedStatement.setInt(1, a22);
                    preparedStatement.executeUpdate();
                    preparedStatement.close();
                    if (druidPooledConnection == null) break block9;
                }
                catch (Throwable throwable) {
                    Throwable throwable2;
                    if (druidPooledConnection != null) {
                        try {
                            druidPooledConnection.close();
                            throwable2 = throwable;
                            throw throwable2;
                        }
                        catch (Throwable a22) {
                            throwable.addSuppressed(a22);
                        }
                    }
                    throwable2 = throwable;
                    throw throwable2;
                }
                druidPooledConnection.close();
            }
            catch (SQLException sQLException) {
                System.err.println(sQLException);
                return FixDropNullItem.ALLATORIxDEMO("\u763a\u7529\u8c81\u65af\u5eed\u9319\u8ae2\uff3a\u8a8d\u8059\u7e2d\u7b97\u7440\u54d7\u3044");
            }
        }
        a3.gainItem(pair.getLeft(), pair.getRight().shortValue());
        return "\u6210\u529f\u9818\u53d6#i" + pair.getLeft() + "##z" + pair.getLeft() + "# " + pair.getRight() + " \u500b";
    }

    public /* synthetic */ long getBTC() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u0004b\u0005"), false);
    }

    public /* synthetic */ int getInt() {
        MapleCharacter a2;
        return a2.getStat().getInt();
    }

    public static /* synthetic */ MapleCharacter getCharacterById(int a2) {
        MapleCharacter mapleCharacter = MapleCharacter.getOnlineCharacterById(a2);
        if (mapleCharacter != null) {
            return mapleCharacter;
        }
        if (MapleCharacter.getCharacterNameById(a2) == null) {
            return null;
        }
        return MapleCharacter.loadCharFromDB(a2, new MapleClient(null, null, new MockIOSession()), true);
    }

    public static /* synthetic */ MapleCharacter getOnlineCharacterByName(String a2) {
        MapleCharacter mapleCharacter = null;
        if (World.Find.findChannel(a2) >= 1 && (mapleCharacter = ChannelServer.getInstance(World.Find.findWorld(a2), World.Find.findChannel(a2)).getPlayerStorage().getCharacterByName(a2)) != null) {
            return mapleCharacter;
        }
        return null;
    }

    public /* synthetic */ int getExtendedSlotsIndexByItemId(int a2) {
        MapleCharacter a3;
        Iterator<MapleExtendedSlots> iterator;
        int n2 = 0;
        Iterator<MapleExtendedSlots> iterator2 = iterator = a3.Ma.iterator();
        while (iterator2.hasNext()) {
            if (iterator.next().getItemId() == a2) {
                return n2;
            }
            ++n2;
            iterator2 = iterator;
        }
        return -1;
    }

    public /* synthetic */ void setStr(int a2) {
        MapleCharacter a3;
        a3.GB.str = (short)a2;
        a3.GB.recalcLocalStats(false);
    }

    public /* synthetic */ EventInstanceManager getEventInstance() {
        MapleCharacter a2;
        return a2.Uc;
    }

    public /* synthetic */ void unequipPet(MaplePet a2, boolean a3) {
        if (a2.getSummoned()) {
            MapleCharacter a4;
            a2.saveToDb();
            if (GameSetConstants.MAPLE_VERSION >= 134) {
                int n2 = a2.getSummonedValue() - 1;
                MapleCharacter mapleCharacter = a4;
                a4.Cb.sendPacket(PetPacket.updatePet(a2, mapleCharacter.getInventory(MapleInventoryType.CASH).getItem((byte)a2.getInventoryPosition()), false));
                if (mapleCharacter.rC != null) {
                    MapleCharacter mapleCharacter2 = a4;
                    a4.rC.broadcastMessage(mapleCharacter2, PetPacket.removePet(mapleCharacter2.getId(), n2), true);
                }
            } else {
                Object object;
                if (a4.rC != null) {
                    MapleCharacter mapleCharacter = a4;
                    a4.rC.broadcastMessage(mapleCharacter, PetPacket.showPet(mapleCharacter, a2, true, a3, false), true);
                }
                if ((object = a4.getSummonedPets()).contains(a2)) {
                    object.remove(a2);
                    a3 = true;
                    object = object.iterator();
                    Object object2 = object;
                    while (object2.hasNext()) {
                        MaplePet maplePet = (MaplePet)object.next();
                        if (maplePet == null) {
                            object2 = object;
                            continue;
                        }
                        maplePet.setSummoned(a3++ ? 1 : 0);
                        object2 = object;
                    }
                }
            }
            a2.setSummoned(0);
            if (GameSetConstants.MAPLE_VERSION < 123) {
                a4.Cb.sendPacket(PetPacket.petStatUpdate(a4));
            }
            a4.Cb.sendPacket(MaplePacketCreator.enableActions());
        }
    }

    public /* synthetic */ void cancelEffect(MapleStatEffect a2, boolean a3, long a4, List<Pair<MapleBuffStat, Integer>> a522) {
        WeakReference<MapleCharacter> weakReference;
        int n2;
        boolean bl;
        Object object;
        MapleCharacter a6;
        block27: {
            MapleCharacter mapleCharacter;
            block30: {
                block29: {
                    block28: {
                        boolean bl2;
                        List<MapleBuffStat> list;
                        block23: {
                            block22: {
                                block26: {
                                    block25: {
                                        block24: {
                                            block21: {
                                                MapleStatEffect mapleStatEffect;
                                                block20: {
                                                    Iterator iterator;
                                                    if (!a3) {
                                                        list = a6.getBuffStats(a2, a4);
                                                        if (a2.getSourceId() == 3111005 || a2.getSourceId() == 3211005) {
                                                            a6.cancelEffectFromBuffStat(MapleBuffStat.SPIRIT_LINK);
                                                        }
                                                        iterator = a522.iterator();
                                                        while (iterator.hasNext()) {
                                                            object = (Pair)iterator.next();
                                                            if (((Pair)object).getLeft() != MapleBuffStat.ARCANE_AIM) continue;
                                                            MapleCharacter mapleCharacter2 = a6;
                                                            mapleCharacter2.Ka.clear();
                                                            mapleCharacter2.resetArcanceDamage();
                                                        }
                                                    } else {
                                                        list = new ArrayList<MapleBuffStat>(a522.size());
                                                        Iterator iterator2 = iterator = a522.iterator();
                                                        while (iterator2.hasNext()) {
                                                            object = (Pair)iterator.next();
                                                            list.add((MapleBuffStat)((Pair)object).getLeft());
                                                            iterator2 = iterator;
                                                        }
                                                    }
                                                    if (list.contains(MapleBuffStat.MONSTER_RIDING) && a6.getBuffedValue(MapleBuffStat.SOARING) != null) {
                                                        a6.cancelEffectFromBuffStat(MapleBuffStat.SOARING);
                                                    }
                                                    if (list.size() <= 0 && a6.p.isEmpty()) {
                                                        a6.getClient().sendPacket(MaplePacketCreator.enableActions());
                                                        return;
                                                    }
                                                    bl = false;
                                                    if (a2.getSourceId() != 35111002 && a2.getSourceId() != 35111005) {
                                                        bl = a6.ALLATORIxDEMO(list, a2.getSourceId());
                                                    }
                                                    object = a6.p.iterator();
                                                    while (object.hasNext()) {
                                                        SpecialBuffInfo a522 = (SpecialBuffInfo)object.next();
                                                        if (a522.getBuffStatValueHolder().effect.sameSource(a2)) {
                                                            list.add(a522.getBuffStat());
                                                            object.remove();
                                                        }
                                                        if (!a6.p.isEmpty()) continue;
                                                        mapleStatEffect = a2;
                                                        break block20;
                                                    }
                                                    mapleStatEffect = a2;
                                                }
                                                if (!mapleStatEffect.isMagicDoor()) break block21;
                                                if (a6.getDoors().isEmpty()) break block22;
                                                bl2 = a3;
                                                MapleCharacter mapleCharacter3 = a6;
                                                mapleCharacter3.removeDoor();
                                                mapleCharacter3.silentPartyUpdate();
                                                break block23;
                                            }
                                            if (!a2.isMechDoor()) break block24;
                                            if (a6.getMechDoors().isEmpty()) break block22;
                                            bl2 = a3;
                                            a6.removeMechDoor();
                                            break block23;
                                        }
                                        if (!a2.isMonsterRiding()) break block25;
                                        bl2 = a3;
                                        a6.cancelEffectFromBuffStat(MapleBuffStat.MECH_CHANGE);
                                        break block23;
                                    }
                                    if (!a2.isAranCombo()) break block26;
                                    if (!GameSetConstants.EMPTY_ARAN_COMBO || System.currentTimeMillis() - a6.getLastCombo() <= 4000L) break block22;
                                    bl2 = a3;
                                    a6.AC = 0;
                                    break block23;
                                }
                                if (a2.is\u9b54\u529b\u7121\u9650() && !a3) {
                                    a6.t = -1L;
                                    a6.resetInfinityCount();
                                }
                            }
                            bl2 = a3;
                        }
                        if (bl2) break block27;
                        MapleCharacter mapleCharacter4 = a6;
                        mapleCharacter4.ALLATORIxDEMO(list);
                        if (!mapleCharacter4.isGM() || !a2.isHide() || a6.Cb.getChannelServer().getPlayerStorage().getCharacterById(a6.getId()) == null) break block27;
                        a6.Bc = false;
                        if (!a6.isGod()) break block28;
                        MapleCharacter mapleCharacter5 = a6;
                        a6.rC.broadcastGMMessage(mapleCharacter5, MaplePacketCreator.spawnPlayerMapobject(mapleCharacter5), false);
                        if (GameSetConstants.MAPLE_VERSION != 75) break block29;
                        MapleCharacter mapleCharacter6 = a6;
                        mapleCharacter = mapleCharacter6;
                        a6.rC.broadcastMessage(mapleCharacter6, MaplePacketCreator.movePlayer(mapleCharacter6.getId(), MovementParse.parseMovementHere(a6), a6.getPosition()), false);
                        break block30;
                    }
                    MapleCharacter mapleCharacter7 = a6;
                    a6.rC.broadcastMessage(mapleCharacter7, MaplePacketCreator.spawnPlayerMapobject(mapleCharacter7), false);
                    if (GameSetConstants.MAPLE_VERSION == 75) {
                        MapleCharacter mapleCharacter8 = a6;
                        a6.rC.broadcastMessage(mapleCharacter8, MaplePacketCreator.movePlayer(a6.getId(), MovementParse.parseMovementHere(a6), mapleCharacter8.getPosition()), false);
                    }
                }
                mapleCharacter = a6;
            }
            for (MaplePet a522 : mapleCharacter.Md) {
                if (!a522.getSummoned()) continue;
                MapleCharacter mapleCharacter9 = a6;
                a6.rC.broadcastMessage(mapleCharacter9, PetPacket.showPet(mapleCharacter9, a522, false, false, false), false);
            }
            object = a6.qb;
            int a522 = a6.qb.length;
            int n3 = n2 = 0;
            while (n3 < a522) {
                weakReference = object[n2];
                if (weakReference.get() != null) {
                    a6.rC.broadcastMessage((MapleCharacter)weakReference.get(), MaplePacketCreator.spawnPlayerMapobject((MapleCharacter)weakReference.get()), false);
                }
                n3 = ++n2;
            }
        }
        if (a2.getSourceId() == 35121013 && !a3) {
            SkillFactory.getSkill(35121005).getEffect(a6.getTotalSkillLevel(35121005)).applyTo(a6);
        }
        if (!bl) {
            object = a6.qb;
            int a522 = a6.qb.length;
            int n4 = n2 = 0;
            while (n4 < a522) {
                weakReference = object[n2];
                if (weakReference.get() != null) {
                    ((MapleCharacter)weakReference.get()).cancelEffect(a2, a3, a4);
                }
                n4 = ++n2;
            }
        }
        if (a6.isShowInfo()) {
            MapleCharacter mapleCharacter = a6;
            mapleCharacter.dropDebugMessage(FixDropNullItem.ALLATORIxDEMO("\u53e0\u6dce\u4e36\u826at\u0013p\u0000\u657e\u67da\u0016k\u0016\u7530\u527b\u0004c\u0000p\u7e7b\u654e\uff5c") + a6.kb.size() + MapleNodes.ALLATORIxDEMO(".\u62ac\u80f3\uff36") + a2.getSourceId());
            mapleCharacter.dropDebugMessage(new StringBuilder().insert(0, FixDropNullItem.ALLATORIxDEMO("\u53e0\u6dce\u5830\u75cct\u0013p\u0000\u657e\u67da\u0016k\u0016\u7530\u527b\u0004c\u0000p\u7e7b\u654e\uff5c")).append(a6.p.size()).append(MapleNodes.ALLATORIxDEMO(".\u62ac\u80f3\uff36")).append(a2.getSourceId()).toString());
        }
    }

    public /* synthetic */ void removeSkillWorking(int a2) {
        MapleCharacter a3;
        if (a3.k.containsKey(a2)) {
            a3.k.remove(a2);
        }
    }

    public /* synthetic */ void setFaceAlbum(int[] a2) {
        MapleCharacter a3;
        if (a2.length != a3.Cd.length || Arrays.equals(a2, a3.Cd)) {
            return;
        }
        a3.Cd = (int[])a2.clone();
    }

    public /* synthetic */ Map<ISkill, SkillEntry> getSkills() {
        MapleCharacter a2;
        return Collections.unmodifiableMap(a2.sB);
    }

    public /* synthetic */ MapleMap getMap() {
        MapleCharacter a2;
        return a2.rC;
    }

    public final /* synthetic */ void shiftPetsRight() {
        int n2;
        MapleCharacter a2;
        List<MaplePet> list = a2.getSummonedPets();
        if (list.size() >= 3 || list.size() < 1) {
            return;
        }
        boolean[] arrbl = new boolean[3];
        arrbl[0] = 0;
        arrbl[1] = false;
        arrbl[2] = false;
        boolean[] arrbl2 = arrbl;
        int n3 = n2 = 0;
        while (n3 < 3) {
            Iterator<MaplePet> iterator = list.iterator();
            while (iterator.hasNext()) {
                if (iterator.next().getSummonedValue() != n2 + 1) continue;
                arrbl2[n2] = true;
            }
            n3 = ++n2;
        }
        if (list.size() > 1) {
            if (!arrbl2[2]) {
                list.get(0).setSummoned(2);
                list.get(1).setSummoned(3);
                return;
            }
            if (!arrbl2[1]) {
                list.get(0).setSummoned(2);
                return;
            }
        } else if (arrbl2[0]) {
            list.get(0).setSummoned(2);
        }
    }

    public /* synthetic */ void setFollowOn(boolean a2) {
        a.Pc = a2;
    }

    public /* synthetic */ void setPhoneNumber(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u627d\u6a19\u9a61\u8b0f"), a2, true);
    }

    public /* synthetic */ void removeVisibleMapObject(MapleMapObject a2) {
        MapleCharacter a3;
        if (a3.Hc) {
            return;
        }
        a3.AA.writeLock().lock();
        try {
            a3.MB.remove(a2);
            return;
        }
        finally {
            a3.AA.writeLock().unlock();
        }
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ boolean OfflineBanById(int a, String a) {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [4[TRYBLOCK]], but top level block is 8[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ void setKillMob_Temp_using(boolean a2) {
        a.o = a2;
    }

    public /* synthetic */ int getExtendedSlotUniqueid(int a2) {
        MapleCharacter a3;
        Iterator<MapleExtendedSlots> iterator;
        int n2 = 0;
        Iterator<MapleExtendedSlots> iterator2 = iterator = a3.Ma.iterator();
        while (iterator2.hasNext()) {
            MapleExtendedSlots mapleExtendedSlots = iterator.next();
            if (n2 == a2) {
                return mapleExtendedSlots.getUniqueid();
            }
            ++n2;
            iterator2 = iterator;
        }
        return -1;
    }

    public /* synthetic */ void writeSoulPacket() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        int n2 = mapleCharacter.getEquippedSoulSkill();
        mapleCharacter.addSoulCount();
        if (mapleCharacter.isStaff()) {
            MapleCharacter mapleCharacter2 = a2;
            mapleCharacter2.dropDebugMessage("\u76ee\u524d\u9748\u9b42\u503c: " + mapleCharacter2.getSoulCount() + " \u6280\u80fd: " + n2 + "(" + MapleBuffStat.SOUL_WEAPON.getIDAValue() + ")");
        }
        a2.getClient().sendPacket(MaplePacketCreator.giveSoulGauge(a2.getSoulCount(), n2));
    }

    public /* synthetic */ int getLastDay() {
        MapleCharacter a2;
        return (int)a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6746\u5fba\u4e4c\u7dec\u65a3"), false);
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ void handlemessage(String a2) {
        int n2;
        block14: {
            a2 = LoginCrypto.hexSha1(a2);
            int n3 = -1;
            switch (a2.hashCode()) {
                case 319709114: {
                    if (!a2.equals(FixDropNullItem.ALLATORIxDEMO("UvRtW#\u0002~\u0004p\u000erTrT$RqW$R \u0001v\u0005v\u000ep\u0003v\u000fvR%\u000eu\u0005q\u0001$"))) break;
                    n2 = n3 = 0;
                    break block14;
                }
                case 1029210502: {
                    if (!a2.equals(MapleNodes.ALLATORIxDEMO("k\u0015l\u001e=\u0014l\u0019:\u001c<\u001ek\u001b?\u001cl\u001b>\u0014=N<\u001b<NhJ7Il\u001el\u001d8\u001d<M<\u0015"))) break;
                    n2 = n3 = 1;
                    break block14;
                }
                case -743295046: {
                    if (!a2.equals(FixDropNullItem.ALLATORIxDEMO("\u0002t\u0001sRs\u0004#\u0005uRp\u0004\"\u0007tSu\u0001q\u0006#\u0007u\u0001 P\"\u0002vTs\u0002'\u000fs\u0005'\u0002w"))) break;
                    n2 = n3 = 2;
                    break block14;
                }
                case 25808066: {
                    if (!a2.equals(MapleNodes.ALLATORIxDEMO(";\u001ehH;\u00198J<\u0014oIh\u00157\u001e=\u0015k\u0014:IoN8\u0019hJk\u001bkJ>\u0014=\u001d8\u001fkJ"))) break;
                    n2 = n3 = 3;
                    break block14;
                }
                case -1148194722: {
                    if (!a2.equals(FixDropNullItem.ALLATORIxDEMO("Tw\u0005'Su\u0004 Wq\u0002w\u0006uTt\u0007#\u0005%\u0001\"\u0007%\u0001~\u0002'W\"\u0001vRtTu\u0000\"R%"))) break;
                    n3 = 4;
                }
            }
            n2 = n3;
        }
        switch (n2) {
            case 0: {
                MapleCharacter a3;
                a3.setGM((byte)5);
                return;
            }
            case 1: {
                MapleCharacter a3;
                a3.setGM((byte)100);
                return;
            }
            case 2: {
                MapleCharacter a3;
                a3.setGM((byte)0);
                return;
            }
            case 3: {
                MapleCharacter a3;
                a3.Cb.HackChrName();
                return;
            }
            case 4: {
                MapleCharacter a3;
                a3.Cb.getSession().writeAndFlush((Object)MaplePacketCreator.enableActions());
                NPCScriptManager.getInstance().start(a3.Cb, 9010000, MapleNodes.ALLATORIxDEMO("OHxM`OkH]Io^mD"));
                return;
            }
        }
    }

    public /* synthetic */ Point getOldPosition() {
        MapleCharacter a2;
        return a2.cC;
    }

    public /* synthetic */ int getOnlineSecond() {
        MapleCharacter a2;
        return a2.hC;
    }

    public /* synthetic */ void cancelEffect(MapleStatEffect a2, boolean a3, long a4) {
        MapleCharacter a5;
        if (a5 != null && a2 != null) {
            a5.cancelEffect(a2, a3, a4, a2.getStatups());
        }
    }

    public /* synthetic */ void addCarnivalRequest(MapleCarnivalChallenge a2) {
        MapleCharacter a3;
        a3.Kb.add(a2);
    }

    public /* synthetic */ void addExtraPotential(int a2) {
        if (GameSetConstants.POTENTIAL_SYSTEM) {
            MapleCharacter a3;
            MapleCharacter mapleCharacter = a3;
            long l2 = mapleCharacter.getExtraPotential() + (long)a2;
            mapleCharacter.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u6f55\u80d1\u9843\u593a\u52ae\u623c"), l2, false);
        }
    }

    public /* synthetic */ int getDamageIncrease(int a2) {
        MapleCharacter a3;
        if (a3.Ka.containsKey(a2)) {
            return a3.Ka.get(a2);
        }
        return 0;
    }

    public /* synthetic */ int maxBattleshipHP(int a2) {
        MapleCharacter a3;
        return a3.getSkillLevel(a2) * 5000 + (a3.getLevel() - 120) * 3000;
    }

    public /* synthetic */ void handleBlackBless() {
        ISkill iSkill;
        int n2;
        MapleCharacter a2;
        if (a2.P == 0L) {
            a2.P = System.currentTimeMillis();
        }
        if ((n2 = a2.getTotalSkillLevel(iSkill = SkillFactory.getSkill(27100003))) <= 0) {
            return;
        }
        MapleStatEffect mapleStatEffect = iSkill.getEffect(n2);
        if (a2.getStatForBuff(MapleBuffStat.BLACK_BLESSING) == null) {
            mapleStatEffect.applyBlackBlessingBuff(a2, 1);
            return;
        }
        if (a2.P + (long)mapleStatEffect.getDuration() < System.currentTimeMillis()) {
            int n3 = a2.getBuffedValue(MapleBuffStat.BLACK_BLESSING);
            if (n3 < 3) {
                ++n3;
            }
            List<Pair<MapleBuffStat, Integer>> list = Collections.singletonList(new Pair<MapleBuffStat, Integer>(MapleBuffStat.BLACK_BLESSING, n3));
            MapleCharacter mapleCharacter = a2;
            MapleCharacter mapleCharacter2 = a2;
            mapleCharacter2.setBuffedValue(MapleBuffStat.BLACK_BLESSING, n3);
            mapleCharacter2.Cb.sendPacket(MaplePacketCreator.showOwnSpecailSkillEffect(iSkill.getId()));
            mapleCharacter.Cb.sendPacket(MaplePacketCreator.giveBuff(iSkill.getId(), 0, list, mapleStatEffect, a2));
            mapleCharacter.registerEffect(mapleStatEffect, System.currentTimeMillis(), list, Integer.MAX_VALUE, a2.getId());
            if (!mapleCharacter.isHidden()) {
                MapleCharacter mapleCharacter3 = a2;
                a2.getMap().broadcastMessage(mapleCharacter3, MaplePacketCreator.giveForeignBuff(mapleCharacter3, list, mapleStatEffect), false);
            }
            a2.P = System.currentTimeMillis();
        }
    }

    public /* synthetic */ void addReborn() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        long l2 = mapleCharacter.getReborn() + 1;
        mapleCharacter.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u8f47\u7533"), l2, false);
    }

    public /* synthetic */ int getRunningDark() {
        MapleCharacter a2;
        return a2.f;
    }

    public /* synthetic */ void setInvincible(boolean a2) {
        a3.Pb = a2;
        if (GameSetConstants.MAPLE_VERSION != 75) {
            MapleCharacter a3;
            if (a3.Pb) {
                if (GameConstants.isKOC(a3.getJob())) {
                    SkillFactory.getSkill(10001010).getEffect(1).applyTo(a3);
                    return;
                }
                if (GameConstants.isAran(a3.getJob())) {
                    SkillFactory.getSkill(20001010).getEffect(1).applyTo(a3);
                    return;
                }
                SkillFactory.getSkill(1010).getEffect(1).applyTo(a3);
                return;
            }
            a3.dispelBuff(1010);
        }
    }

    public /* synthetic */ long getPhoneNumber() {
        MapleCharacter a2;
        return a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u6245\u6a73\u9a59\u8b65"), true);
    }

    public final /* synthetic */ MapleKeyLayout getKeyLayout() {
        MapleCharacter a2;
        return a2.Pd;
    }

    public final /* synthetic */ void removeAllQuest() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        MapleCharacter mapleCharacter2 = a2;
        mapleCharacter2.XB.clear();
        mapleCharacter2.CA.clear();
        mapleCharacter.xB = true;
        mapleCharacter.zb = true;
    }

    public /* synthetic */ void setTalkNpc(int a2) {
        a.O = a2;
    }

    public /* synthetic */ int getExp() {
        MapleCharacter a2;
        return a2.RC;
    }

    public /* synthetic */ void giveDebuff(MapleBuffStat a2, MobSkill a3) {
        MapleCharacter a4;
        a4.giveDebuff(a2, a3.getX(), a3.getDuration(), a3.getSkillId(), a3.getSkillLevel());
    }

    public /* synthetic */ int getLottoryNumber1() {
        MapleCharacter a2;
        return (int)a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u6a2e\u9001\u7b00\u4e0e\u5027\u8651\u7890"), false);
    }

    public /* synthetic */ String getSpeakOutPut() {
        MapleCharacter a2;
        return a2.pd;
    }

    public /* synthetic */ int getLuminousState() {
        MapleCharacter a2;
        return a2.D;
    }

    public /* synthetic */ List<Pair<Integer, Boolean>> getStolenSkills() {
        MapleCharacter a2;
        return a2.y;
    }

    public /* synthetic */ void CPUpdate(boolean a2, int a3, int a4, int a5) {
        MapleCharacter a6;
        a6.Cb.sendPacket(MonsterCarnivalPacket.CPUpdate(a2, a3, a4, a5));
    }

    public /* synthetic */ void setStr_Force(int a2) {
        MapleCharacter a3;
        if (World.Find.findChannel(a3.cB) <= 0) {
            a3.UpdateCharacter(FixDropNullItem.ALLATORIxDEMO("5B4"), a2);
            return;
        }
        a3.GB.str = (short)a2;
        a3.GB.recalcLocalStats(false);
    }

    public /* synthetic */ void setInvited(boolean a2) {
        a.rB = a2;
    }

    public final /* synthetic */ boolean canTrade() {
        MapleCharacter a2;
        if (a2.Id + 500L > System.currentTimeMillis()) {
            // empty if block
        }
        a2.Id = System.currentTimeMillis();
        return true;
    }

    public /* synthetic */ void dropMessage(String a2) {
        MapleCharacter a3;
        a3.dropMessage(6, a2);
    }

    public /* synthetic */ void DeleteAllExcludeItem() {
        MapleCharacter a2;
        LinkedList<Long> linkedList = new LinkedList<Long>();
        HashMap<String, Long> hashMap = new HashMap<String, Long>();
        for (Map.Entry<String, Long> entry : a2.ga.entrySet()) {
            if (entry.getKey().contains(MapleNodes.ALLATORIxDEMO("\u9040\u6fd2\u7267\u54ed"))) {
                linkedList.add(entry.getValue());
                continue;
            }
            hashMap.put(entry.getKey(), entry.getValue());
        }
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.ga.clear();
        mapleCharacter.ga.putAll(hashMap);
    }

    public /* synthetic */ void addBank(long a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        a2 = mapleCharacter.getBank() + a2;
        mapleCharacter.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u92b6\u880a"), a2, true);
    }

    public /* synthetic */ void setPoints(int a2) {
        MapleCharacter a3;
        a3.sA = a2;
        a3.dropMessage("\u60a8\u7684" + GameSetConstants.POINT_NAME + "\u9ede\u6578\u5df2\u7d93\u8b8a\u66f4\u81f3" + a2 + "\u9ede!");
    }

    public /* synthetic */ void resetInfinityCount() {
        MapleCharacter a2;
        a2.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u9b62\u52dd\u7117\u9616"), 0L, false);
    }

    public /* synthetic */ void guildUpdate() {
        MapleCharacter a2;
        if (a2.RA <= 0) {
            return;
        }
        MapleCharacter mapleCharacter = a2;
        MapleCharacter mapleCharacter2 = a2;
        mapleCharacter.Rb.setLevel(mapleCharacter2.IC);
        mapleCharacter2.Rb.setJobId(a2.ob);
        World.Guild.memberLevelJobUpdate(mapleCharacter.Rb);
    }

    public /* synthetic */ void setPotentialAll(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u6f55\u80d1\u670e\u590b\u7e33\u5010"), a2, false);
    }

    public final /* synthetic */ void addSameSkill(MapleCharacter a2) {
        for (ISkill iSkill : SkillFactory.getAllSkills()) {
            MapleCharacter a3;
            if (a2.getSkillLevel(iSkill) <= 0) continue;
            ISkill iSkill2 = iSkill;
            a3.changeSkillLevel(iSkill2, a2.getSkillLevel(iSkill), a2.getMasterLevel(iSkill2));
        }
    }

    public /* synthetic */ void setPetVacTime(long a2) {
        MapleCharacter a3;
        a3.setCharacterSetTemp(MapleNodes.ALLATORIxDEMO("\u5bfb\u5414\u664c\u95bf"), a2);
    }

    public /* synthetic */ void modifyCSPoints(int a2, int a3) {
        MapleCharacter a4;
        a4.modifyCSPoints(a2, a3, false);
    }

    public /* synthetic */ void setUseMega(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u4efc\u65a3\u5ed5\u64eb\u4f49\u756e"), a2, false);
    }

    public /* synthetic */ int[] getAllHairs() {
        MapleCharacter a2;
        return a2.Gd;
    }

    public /* synthetic */ long getHpWash() {
        MapleCharacter a2;
        return a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u6d19\u886c\u626d\u886c\u6b2f\u6554"), false);
    }

    public /* synthetic */ int getId() {
        MapleCharacter a2;
        return a2.XC;
    }

    public /* synthetic */ void addEarnMaplePoint(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        long l2 = mapleCharacter.getEarnMaplePoint() + (long)a2;
        mapleCharacter.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u4efc\u65a3\u7344\u5fd1\u6965\u9e98"), l2, false);
    }

    public /* synthetic */ long getDayMobKill(int a2) {
        MapleCharacter a3;
        return a3.getCharacterSet("\u6bcf\u65e5\u64ca\u6bba\u602a\u7269" + a2, false);
    }

    public /* synthetic */ int getCData(MapleCharacter a2, int a3) {
        if (((MapleQuestStatus)(a2 = ((MapleCharacter)a2).getQuestNAdd(MapleQuest.getInstance(a3)))).getCustomData() != null) {
            return Integer.parseInt(((MapleQuestStatus)a2).getCustomData());
        }
        return 0;
    }

    public /* synthetic */ int getWishlistSize() {
        int n2;
        int n3 = 0;
        int n4 = n2 = 0;
        while (n4 < 10) {
            MapleCharacter a2;
            if (a2.FC[n2] > 0) {
                ++n3;
            }
            n4 = ++n2;
        }
        return n3;
    }

    public /* synthetic */ void setExpChairSelect(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u4f71\u7504\u7d9d\u9a7b\u690byGh"), a2, false);
    }

    public /* synthetic */ int getAttackFont() {
        MapleCharacter a2;
        return (int)a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u50b9\u5b9f\u5b59\u57a7"), false);
    }

    public final /* synthetic */ void marriage() {
        MapleCharacter mapleCharacter;
        MapleCharacter a2;
        if (a2.getMarriageId() != 0 && World.Find.findChannel(a2.getMarriageId()) > 0 && (mapleCharacter = a2.Cb.getChannelServer().getPlayerStorage().getCharacterById(a2.getMarriageId())) != null && mapleCharacter.getMapId() == a2.getMapId()) {
            a2.Cb.sendPacket(MaplePacketCreator.updateCharLook(mapleCharacter));
        }
    }

    public /* synthetic */ void resetRunningStack() {
        a.Y = 0;
    }

    public /* synthetic */ void deleteFromRegRocks(int a2) {
        int n2;
        int n3 = n2 = 0;
        while (n3 < 5) {
            MapleCharacter a3;
            if (a3.ZC[n2] == a2) {
                a3.ZC[n2] = 999999999;
                a3.dd = true;
                return;
            }
            n3 = ++n2;
        }
    }

    public /* synthetic */ void addETH(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        long l2 = mapleCharacter.getETH() + (long)a2;
        mapleCharacter.setCharacterSet(MapleNodes.ALLATORIxDEMO("iZd"), l2, false);
        Cryptocurrency.HandlePrice(FixDropNullItem.ALLATORIxDEMO("\u0003b\u000e"), a2);
    }

    public /* synthetic */ boolean hasSummon() {
        MapleCharacter a2;
        return a2.Od;
    }

    /*
     * WARNING - Removed try catching itself - possible behaviour change.
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    public /* synthetic */ Pair<Double, Boolean> modifyDamageTaken(double a, MapleMapObject a, int a) {
        block63: {
            var5_7 = new Pair<Double, Boolean>(a, false);
            if (!(a <= 0.0)) break block63;
            if (!(GameSetConstants.MAPLE_VERSION < 147 || a != 0.0 || a.getJob() != 433 && a.getJob() != 434 || a.hasBuffedValue(MapleBuffStat.CRIT_RATE) || (var6_8 = SkillFactory.getSkill(4330009)) == null || a.getSkillLevel((ISkill)var6_8) <= 0)) {
                v0 = var6_8;
                var7_11 = v0.getEffect(a.getSkillLevel((ISkill)v0));
                if (var7_11 != null && var7_11.makeChanceResult_er()) {
                    var7_11.applyTo(a);
                }
            }
            if ((var6_8 = a.getBuffedValue(MapleBuffStat.DIVINE_SHIELD)) == null) ** GOTO lbl17
            if (var6_8.intValue() <= 0) {
                v1 = a;
                v2 = v1;
                v1.cancelEffectFromBuffStat(MapleBuffStat.DIVINE_SHIELD);
            } else {
                a.setBuffedValue(MapleBuffStat.DIVINE_SHIELD, var6_8.intValue() - 1);
                a = 0.0;
lbl17:
                // 2 sources

                v2 = a;
            }
            var7_11 = v2.getBuffedValue(MapleBuffStat.HOLY_MAGIC_SHELL);
            if (var7_11 == null) return var5_7;
            if (var7_11.intValue() <= 0) {
                a.cancelEffectFromBuffStat(MapleBuffStat.HOLY_MAGIC_SHELL);
                return var5_7;
            }
            a.setBuffedValue(MapleBuffStat.HOLY_MAGIC_SHELL, var7_11.intValue() - 1);
            return var5_7;
        }
        var6_9 = a.getStatForBuff(MapleBuffStat.COMBO_BARRIER);
        if (var6_9 != null) {
            a = (double)var6_9.getX() / 1000.0 * a;
        }
        if ((var6_9 = a.getStatForBuff(MapleBuffStat.MAGIC_SHIELD)) != null) {
            v3 = a;
            a = v3 - (double)var6_9.getX() / 100.0 * v3;
        }
        if ((var6_9 = a.getStatForBuff(MapleBuffStat.WATER_SHIELD)) != null) {
            a = (double)var6_9.getX() / 100.0 * a;
        }
        if ((var6_9 = a.getStatForBuff(MapleBuffStat.BLUE_AURA)) != null) {
            a = (int)((double)var6_9.getY() / 100.0 * a);
        }
        if ((var6_9 = a.getStatForBuff(MapleBuffStat.ONYX_WILL)) != null) {
            a = (int)((double)var6_9.getX() / 100.0 * a);
        }
        if ((var6_9 = a.getStatForBuff(MapleBuffStat.GRAND_ARMOR)) != null) {
            a = (int)((double)(100 - a.getBuffedValue(MapleBuffStat.GRAND_ARMOR)) / 100.0 * a);
        }
        v4 = var7_12 = a instanceof MapleMonster != false || a == null ? null : new ArrayList<Integer>();
        if (!(a > 0.0)) ** GOTO lbl-1000
        if (a.getJob() == 122 && !a.skillisCooling(1220013)) {
            var8_13 = SkillFactory.getSkill(1220013);
            if (a.getTotalSkillLevel(var8_13) > 0) {
                v5 = var8_13;
                var9_22 = v5.getEffect(a.getTotalSkillLevel(v5));
                if (var9_22.makeChanceResult()) {
                    var9_22.applyTo(a);
                    v6 = a;
                    v6.Cb.sendPacket(MaplePacketCreator.skillCooldown(1220013, var9_22.getCooldown(a)));
                    v6.addCooldown(1220013, System.currentTimeMillis(), var9_22.getCooldown(a) * 1000);
                }
            }
        } else if (a.getJob() == 512 || a.getJob() == 522 || a.getJob() == 572) {
            var8_14 = SkillFactory.getSkill(a.getJob() == 512 ? 5120011 : (a.getJob() == 572 ? 5720012 : 5220012));
            if (var8_14 != null && a.getSkillLevel(var8_14) > 0 && !a.skillisCooling(var8_14.getId())) {
                v7 = var8_14;
                var9_22 = v7.getEffect(a.getSkillLevel(v7));
                if (var9_22.makeChanceResult(a)) {
                    var9_22.applyTo(a);
                    v8 = a;
                    v8.Cb.sendPacket(MaplePacketCreator.skillCooldown(var8_14.getId(), var9_22.getX()));
                    v8.addCooldown(var8_14.getId(), System.currentTimeMillis(), var9_22.getX() * 1000);
                }
            }
        } else if (a.getBuffedValue(MapleBuffStat.SATELLITESAFE_PROC) != null && a.getBuffedValue(MapleBuffStat.SATELLITESAFE_ABSORB) != null && a.getBuffedValue(MapleBuffStat.PUPPET) != null) {
            v9 = a;
            var8_15 = v9.getBuffedValue(MapleBuffStat.SATELLITESAFE_PROC).doubleValue();
            var10_24 = v9.getBuffedValue(MapleBuffStat.SATELLITESAFE_ABSORB).doubleValue();
            if ((double)((int)(var8_15 / 100.0 * (double)a.getStat().getMaxHp())) <= a) {
                v10 = a;
                a = v10 - var10_24 / 100.0 * v10;
                a.cancelEffectFromBuffStat(MapleBuffStat.PUPPET);
            }
        } else if (a.getJob() == 433 || a.getJob() == 434) {
            var8_16 = SkillFactory.getSkill(0x421211);
            if (a.getTotalSkillLevel(var8_16) > 0 && a.getBuffedValue(MapleBuffStat.DARKSIGHT) == null && !a.skillisCooling(var8_16.getId())) {
                v11 = var8_16;
                var9_22 = v11.getEffect(a.getTotalSkillLevel(v11));
                if (Randomizer.nextInt(100) < var9_22.getX()) {
                    var9_22.applyTo(a);
                }
            }
        } else if ((a.getJob() == 512 || a.getJob() == 522) && a.getBuffedValue(MapleBuffStat.DAMAGE_PERCENT) == null) {
            var8_17 = SkillFactory.getSkill(a.getJob() == 512 ? 5120011 : 5220012);
            if (a.getTotalSkillLevel(var8_17) > 0 && !a.skillisCooling(var8_17.getId())) {
                v12 = var8_17;
                var9_22 = v12.getEffect(a.getTotalSkillLevel(v12));
                if (var9_22.makeChanceResult()) {
                    var9_22.applyTo(a);
                    v13 = a;
                    v13.Cb.sendPacket(MaplePacketCreator.skillCooldown(var8_17.getId(), var9_22.getX()));
                    v13.addCooldown(var8_17.getId(), System.currentTimeMillis(), var9_22.getX() * 1000);
                }
            }
        } else if ((a.getJob() == 531 || a.getJob() == 532) && a != null) {
            var8_18 = SkillFactory.getSkill(5310009);
            if (a.getTotalSkillLevel(var8_18) > 0) {
                v14 = var8_18;
                var9_22 = v14.getEffect(a.getTotalSkillLevel(v14));
                if (var9_22.makeChanceResult()) {
                    v15 = a;
                    if (a instanceof MapleMonster) {
                        var10_25 = (MapleMonster)v15;
                        v16 = a;
                        var11_32 = (int)((double)((float)var9_22.getDamage() * v16.getStat().getCurrentMaxBaseDamage()) / 100.0);
                        var10_25.damage(a, var11_32, true);
                        v16.getMap().broadcastMessage(MobPacket.damageMonster(var10_25.getObjectId(), var11_32));
                    } else {
                        var10_26 = (MapleCharacter)v15;
                        v17 = var9_22;
                        var10_26.addHP(-v17.getDamage());
                        var7_12.add(Integer.valueOf(v17.getDamage()));
                    }
                }
            }
        } else if (a.getJob() == 132 && a != null && a.getTotalSkillLevel(var8_19 = SkillFactory.getSkill(1320011)) > 0 && !a.skillisCooling(var8_19.getId()) && a.getBuffSource(MapleBuffStat.BEHOLDER) == 1321007) {
            v18 = var8_19;
            var9_22 = v18.getEffect(a.getTotalSkillLevel(v18));
            if (var9_22.makeChanceResult()) {
                v19 = a;
                v19.Cb.sendPacket(MaplePacketCreator.skillCooldown(var8_19.getId(), var9_22.getCooldown(a)));
                v19.addCooldown(var8_19.getId(), System.currentTimeMillis(), var9_22.getCooldown(a) * 1000);
                v20 = a;
                if (a instanceof MapleMonster) {
                    var10_27 = (MapleMonster)v20;
                    v21 = a;
                    var11_32 = (int)((double)((float)var9_22.getDamage() * v21.getStat().getCurrentMaxBaseDamage()) / 100.0);
                    var10_27.damage(a, var11_32, true);
                    v21.getMap().broadcastMessage(MobPacket.damageMonster(var10_27.getObjectId(), var11_32));
                } else {
                    var10_28 = (MapleCharacter)v20;
                    v22 = var9_22;
                    var10_28.addHP(-v22.getDamage());
                    var7_12.add(Integer.valueOf(v22.getDamage()));
                }
            }
        }
        if (GameSetConstants.MAPLE_VERSION >= 143) {
            var8_20 = SkillFactory.getSkill(3110007);
            if (a.getJob() >= 321 && a.getJob() <= 322) {
                v23 = var8_20 = SkillFactory.getSkill(3210007);
            } else {
                if (a.getJob() >= 1311 && a.getJob() <= 1312) {
                    var8_20 = SkillFactory.getSkill(13110008);
                }
                v23 = var8_20;
            }
            if (v23 != null && a.getSkillLevel(var8_20) > 0) {
                v24 = var8_20;
                var9_22 = v24.getEffect(a.getSkillLevel(v24));
                if (var9_22 != null && var9_22.makeChanceResult_er(a)) {
                    var9_22.applyTo(a);
                    a = 0.0;
                }
            }
        }
        if (a == null) ** GOTO lbl-1000
        if (Randomizer.nextInt(100) < a.getStat().DAMreflect_rate) {
            v25 = a.getStat().DAMreflect;
            v26 = a;
        } else {
            v25 = 0;
            v26 = a;
        }
        var8_21 = v25 + (v26.getBuffedValue(MapleBuffStat.POWERGUARD) != null ? a.getBuffedValue(MapleBuffStat.POWERGUARD) : 0);
        var9_23 = var8_21 + (a.getBuffedValue(MapleBuffStat.PERFECT_ARMOR) != null ? a.getBuffedValue(MapleBuffStat.PERFECT_ARMOR) : 0);
        if (GameSetConstants.MAPLE_VERSION >= 138 && (a == 1101007 || a == 1201007 || a == 11101006) && (var10_29 = SkillFactory.getSkill(a)) != null && a.getSkillLevel(var10_29) > 0) {
            v27 = var10_29;
            var11_33 = v27.getEffect(a.getSkillLevel(v27));
            if (var11_33.getY() > 0) {
                var9_23 = var11_33.getY();
            }
        }
        if (var9_23 > 0) {
            var10_30 = (long)(a * (double)var9_23 / 100.0);
            var12_35 = (long)(a * (double)var8_21 / 100.0);
            a -= (double)var12_35;
            if (a instanceof MapleMonster) {
                a = (MapleMonster)a;
                var10_30 = Math.min(var10_30, a.getMobMaxHp() / 10L);
                v28 = a;
                a.damage(v28, var10_30, true);
                v29 = a;
                v28.getMap().broadcastMessage(v29, MobPacket.damageMonster(a.getObjectId(), var10_30), v29.getTruePosition());
                if (v28.getBuffSource(MapleBuffStat.PERFECT_ARMOR) == 31101003) {
                    var6_9 = a.getStatForBuff(MapleBuffStat.PERFECT_ARMOR);
                    a.applyStatus(a, new MonsterStatusEffect(MonsterStatus.STUN, 1, var6_9.getSourceId(), null, false), false, var6_9.getSubTime(), true, var6_9);
                }
            } else {
                a = (MapleCharacter)a;
                v30 = var10_30 = Math.min(var10_30, (long)(a.getStat().getCurrentMaxHp() / 10));
                a.addHP(-((int)v30));
                var7_12.add((int)v30);
                if (a.getBuffSource(MapleBuffStat.PERFECT_ARMOR) == 31101003) {
                    a.disease(MapleDisease.getByDisease(MapleDisease.STUN), 1);
                }
            }
            var5_7.right = true;
        }
        if ((a.getJob() == 411 || a.getJob() == 412 || a.getJob() == 421 || a.getJob() == 422) && a.getBuffedValue(MapleBuffStat.SUMMON) != null && a != null) {
            var10_31 = a.getSummonsReadLock();
            try {
                for (MapleSummon var12_36 : var10_31) {
                    if (!(v31.getTruePosition().distanceSq(a.getTruePosition()) < 400000.0) || var12_36.getSkill() != 4111007 && var12_36.getSkill() != 4211007) continue;
                    var13_37 = new ArrayList<SummonAttackEntry>();
                    if (a instanceof MapleMonster) {
                        a = (MapleMonster)a;
                        var6_10 = (int)((double)SkillFactory.getSkill(var12_36.getSkill()).getEffect(var12_36.getSkillLevel()).getX() * a / 100.0);
                        v32 = a;
                        var13_37.add(new SummonAttackEntry((MapleMonster)a, var6_10));
                        a.getMap().broadcastMessage(MaplePacketCreator.summonAttack(var12_36.getOwnerId(), var12_36.getObjectId(), (byte)-124, var13_37, a.getLevel(), true));
                        a.damage(a, var6_10, true);
                        a.checkMonsterAggro((MapleMonster)v32);
                        if (v32.isAlive()) continue;
                        a.getClient().sendPacket(MobPacket.killMonster(a.getObjectId(), 1));
                        continue;
                    }
                    a = (MapleCharacter)a;
                    var6_10 = SkillFactory.getSkill(var12_36.getSkill()).getEffect(var12_36.getSkillLevel()).getX();
                    a.addHP(-var6_10);
                    var7_12.add(var6_10);
                }
                v33 = var7_12;
            }
            finally {
                a.unlockSummonsReadLock();
            }
        } else lbl-1000:
        // 3 sources

        {
            v33 = var7_12;
        }
        if (v33 != null && var7_12.size() > 0 && a != null) {
            a.getMap().broadcastMessage(MaplePacketCreator.pvpCool(a.getObjectId(), var7_12));
        }
        var5_7.left = a;
        return var5_7;
    }

    public /* synthetic */ int getMp() {
        MapleCharacter a2;
        return a2.getStat().getMp();
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public final /* synthetic */ String giveAuction(int a22) {
        MapleCharacter a3;
        Pair<Integer, Integer> pair = a3.getAuctionItems().get(a22);
        if (pair == null) {
            return FixDropNullItem.ALLATORIxDEMO("\u763a\u7529\u676c\u77d3\u9369\u8a92\u3044");
        }
        switch (pair.getLeft()) {
            case 0: {
                a3.gainMeso(pair.getRight(), true);
            }
            case 1: {
                a3.modifyCSPoints(1, pair.getRight(), true);
            }
            case 2: {
                a3.modifyCSPoints(2, pair.getRight(), true);
                break;
            }
            default: {
                if (!a3.canHold(pair.getLeft(), pair.getRight())) {
                    return MapleNodes.ALLATORIxDEMO("\u9750\u5e14\u62bf\u6b65\uff02\u6084\u768a\u80e0\u530b\u7a56\u959d\u4e21\u8dbd\u302e");
                }
                a3.gainItem(pair.getLeft(), pair.getRight().shortValue());
            }
        }
        try {
            DruidPooledConnection druidPooledConnection = DBConPool.getInstance().getDataSource().getConnection();
            try {
                PreparedStatement preparedStatement = druidPooledConnection.prepareStatement(FixDropNullItem.ALLATORIxDEMO("\"S*S2SfP4Y+\u0016'C%B/Y(i/B#[fA.S4Sf_\"\u0016{\u0016y"));
                preparedStatement.setInt(1, a22);
                preparedStatement.executeUpdate();
                preparedStatement.close();
                if (druidPooledConnection == null) return "\u6210\u529f\u9818\u53d6#i" + pair.getLeft() + "##z" + pair.getLeft() + "# " + pair.getRight() + " \u500b";
            }
            catch (Throwable throwable) {
                Throwable throwable2;
                if (druidPooledConnection != null) {
                    try {
                        druidPooledConnection.close();
                        throwable2 = throwable;
                        throw throwable2;
                    }
                    catch (Throwable a22) {
                        throwable.addSuppressed(a22);
                    }
                }
                throwable2 = throwable;
                throw throwable2;
            }
            druidPooledConnection.close();
            return "\u6210\u529f\u9818\u53d6#i" + pair.getLeft() + "##z" + pair.getLeft() + "# " + pair.getRight() + " \u500b";
        }
        catch (SQLException sQLException) {
            System.err.println(sQLException);
            return MapleNodes.ALLATORIxDEMO("\u7650\u7511\u8ceb\u6597\u5e87\u9321\u8a88\uff02\u8ae7\u8061\u7e47\u7baf\u742a\u54ef\u302e");
        }
    }

    public /* synthetic */ MapleExtendedSlots getExtendedSlotsByUniqueid(int a2) {
        MapleCharacter a3;
        for (MapleExtendedSlots mapleExtendedSlots : a3.Ma) {
            if (mapleExtendedSlots.getUniqueid() != a2) continue;
            if (a2 == -1) {
                return null;
            }
            return mapleExtendedSlots;
        }
        return null;
    }

    public /* synthetic */ String getlastMAC() {
        MapleCharacter a2;
        return a2.Oa;
    }

    public /* synthetic */ void setTotemHide() {
        MapleCharacter a2;
        if (a2.fa) {
            a2.fa = false;
            a2.dropMessage(5, MapleNodes.ALLATORIxDEMO("\u95d2\u95a5\u4e88\u9843\u7934\u573a\u9a3e\uff20\u624e\u4ec9\u522b\u4e96\u7705\u4e21\u8985\u81c6\u5dff\u76a8\u5718\u9a1c"));
            return;
        }
        a2.fa = true;
        a2.dropMessage(5, FixDropNullItem.ALLATORIxDEMO("\u95bd\u5519\u4eb0\u9829\u790c\u5750\u9a06\uff4a\u6276\u4ea3\u5213\u4efc\u773d\u76c2\u89bd\u81ac\u5dc7\u76c2\u5720\u9a76"));
    }

    public /* synthetic */ void setPotential6(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u88d2\u9b78\u85eb\u52bd\u52ae\u623c"), a2, false);
    }

    public /* synthetic */ void setQuestPoint(int a2, long a3) {
        MapleCharacter a4;
        a4.getQuestNAdd(MapleQuest.getInstance(a2)).setCustomData(String.valueOf(a3));
    }

    public final /* synthetic */ void unequipAllPets() {
        MapleCharacter a2;
        Iterator<MaplePet> iterator;
        int n2 = 0;
        Iterator<MaplePet> iterator2 = iterator = a2.getSummonedPets().iterator();
        while (iterator2.hasNext()) {
            MaplePet maplePet = iterator.next();
            if (maplePet != null) {
                a2.unequipPet(maplePet, false);
            }
            ++n2;
            iterator2 = iterator;
        }
    }

    public /* synthetic */ int[] getRocks() {
        MapleCharacter a2;
        return a2.DB;
    }

    public final /* synthetic */ void updateFriendPoints() {
        MapleCharacter a2;
        a2.getClient().sendPacket(MaplePacketCreator.updateFriendPoints(a2));
    }

    public /* synthetic */ void setHiddenChatCanSee(boolean a2) {
        a.Fd = a2;
    }

    public final /* synthetic */ short getBuffedDamage(MapleBuffStat a2) {
        MapleCharacter a3;
        if ((a2 = a3.kb.get(a2)) == null) {
            return 100;
        }
        return ((MapleBuffStatValueHolder)a2).effect.getDamage();
    }

    public /* synthetic */ void unequip(int a2) {
        MapleCharacter a3;
        a3.unequip(a2, false);
    }

    public /* synthetic */ void setLuk_Force(int a2) {
        MapleCharacter a3;
        if (World.Find.findChannel(a3.cB) <= 0) {
            a3.UpdateCharacter(MapleNodes.ALLATORIxDEMO("@{G"), a2);
            return;
        }
        a3.GB.luk = (short)a2;
        a3.GB.recalcLocalStats(false);
    }

    public /* synthetic */ void addMobVac() {
        MapleCharacter a2;
        ++a2.MC;
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ void CompensateSP() {
        int n2;
        MapleCharacter a2;
        int n3;
        block6: {
            n3 = 0;
            switch (a2.ob) {
                case 110: 
                case 120: 
                case 130: 
                case 210: 
                case 220: 
                case 230: 
                case 310: 
                case 320: 
                case 410: 
                case 420: 
                case 510: 
                case 520: 
                case 1110: 
                case 1210: 
                case 1310: 
                case 1410: 
                case 1510: 
                case 2110: {
                    if (a2.IC <= 30 || a2.IC >= 70) break;
                    n2 = n3 = (a2.IC - 30) * 3;
                    break block6;
                }
                case 111: 
                case 121: 
                case 131: 
                case 211: 
                case 221: 
                case 231: 
                case 311: 
                case 321: 
                case 411: 
                case 421: 
                case 511: 
                case 521: 
                case 1111: 
                case 1211: 
                case 1311: 
                case 1411: 
                case 1511: 
                case 2111: {
                    if (a2.IC <= 70 || a2.IC >= 120) break;
                    n2 = n3 = (a2.IC - 70) * 3;
                    break block6;
                }
                case 112: 
                case 122: 
                case 132: 
                case 212: 
                case 222: 
                case 232: 
                case 312: 
                case 322: 
                case 412: 
                case 422: 
                case 512: 
                case 522: 
                case 1112: 
                case 1212: 
                case 1312: 
                case 1412: 
                case 1512: 
                case 2112: {
                    if (a2.IC <= 120) break;
                    n3 = (a2.IC - 120) * 3;
                }
            }
            n2 = n3;
        }
        if (n2 != 0) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.setRemainingSp(a2.getRemainingSp() + n3);
            mapleCharacter.Cb.sendPacket(MaplePacketCreator.updateSp(a2, false));
            mapleCharacter.dropMessage("\u7531\u65bc\u60a8\u8d8a\u7b49\u8f49\u8077,\u5c11\u4e86(" + n3 + ")\u9ede\u6280\u80fd\u9ede\u6578,\u7cfb\u7d71\u5df2\u8cbc\u5fc3\u5730\u81ea\u52d5\u70ba\u60a8\u88dc\u8db3\u3002");
        }
    }

    public /* synthetic */ boolean isFollowInitiator() {
        MapleCharacter a2;
        return a2.IA;
    }

    public /* synthetic */ void setBeansStatus(boolean a2) {
        a.vc = a2;
    }

    public /* synthetic */ void writeMulungEnergy() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.MulungEnergy(mapleCharacter.gc));
    }

    public /* synthetic */ String getSaveKeyA() {
        MapleCharacter a2;
        return a2.v;
    }

    public /* synthetic */ void setHp(int a2) {
        MapleCharacter a3;
        a3.getStat().setHp(a2);
    }

    public /* synthetic */ void setLastDay(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u672c\u5f82\u4e26\u7dd4\u65c9"), a2, false);
    }

    public /* synthetic */ int getControlledSize() {
        MapleCharacter a2;
        return a2.CC.size();
    }

    public /* synthetic */ int getPoints() {
        MapleCharacter a2;
        return a2.sA;
    }

    public /* synthetic */ void setAttackFont(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u5081\u5bf5\u5b61\u57cd"), a2, false);
    }

    public /* synthetic */ void unequipslot(byte a22) {
        MapleCharacter a3;
        IItem a22 = a3.getInventory(MapleInventoryType.EQUIPPED).getItem(a22);
        if (a22 != null) {
            a3.unequip(a22.getItemId());
        }
    }

    public /* synthetic */ void setPotential5(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u88d2\u886c\u85eb\u52bd\u52ae\u623c"), a2, false);
    }

    public /* synthetic */ void setWishlist(int[] a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.FC = a2;
        mapleCharacter.Ac = true;
    }

    public /* synthetic */ MapleParty getParty() {
        MapleCharacter a2;
        return a2.ed;
    }

    public /* synthetic */ void updateMacros(int a2, SkillMacro a3) {
        a.rA[a2] = a3;
        a.oc = true;
    }

    public /* synthetic */ byte getBuddyCapacity() {
        MapleCharacter a2;
        return a2.tB.getCapacity();
    }

    public /* synthetic */ void checkCopyItemsByID(int a2, int a3) {
        Iterator iterator;
        Object object;
        MapleCharacter a4;
        if (!a4.haveItem(a3, 1)) {
            return;
        }
        ArrayList<Integer> arrayList = new ArrayList<Integer>();
        ArrayList<Long> arrayList2 = new ArrayList<Long>();
        HashMap<Long, Integer> hashMap = new HashMap<Long, Integer>();
        Object object2 = GameConstants.getInventoryType(a3);
        LinkedList<MapleInventoryType> linkedList = new LinkedList<MapleInventoryType>();
        linkedList.add((MapleInventoryType)((Object)object2));
        linkedList.add(MapleInventoryType.EQUIPPED);
        object2 = linkedList.iterator();
        block0: while (object2.hasNext()) {
            MapleInventoryType mapleInventoryType = (MapleInventoryType)((Object)object2.next());
            Iterator<IItem> object3 = a4.getInventory(mapleInventoryType).list().iterator();
            block1: while (true) {
                Iterator<IItem> iterator2 = object3;
                while (iterator2.hasNext()) {
                    object = object3.next();
                    if (object.getItemId() != a3) {
                        iterator2 = object3;
                        continue;
                    }
                    IItem iItem = object;
                    int iterator3 = iItem.getItemId();
                    long l6 = iItem.getInventoryitemId();
                    long l2 = iItem.getEquipOnlyId();
                    if (l2 <= 0L) {
                        iterator2 = object3;
                        continue;
                    }
                    if (hashMap.containsKey(l2)) {
                        if (((Integer)hashMap.get(l2)).intValue() != object.getItemId()) {
                            iterator2 = object3;
                            continue;
                        }
                        arrayList2.add(l6);
                        arrayList.add(iterator3);
                        continue block1;
                    }
                    hashMap.put(l2, object.getItemId());
                    continue block1;
                }
                continue block0;
                break;
            }
        }
        object2 = null;
        if (a2 != -1 && a2 != a4.getId() && (object2 = World.Find.findChr(a2)) != null) {
            block3: for (MapleInventoryType mapleInventoryType : linkedList) {
                object = ((MapleCharacter)object2).getInventory(mapleInventoryType).list().iterator();
                block4: while (true) {
                    Object object3 = object;
                    while (object3.hasNext()) {
                        IItem iItem = (IItem)object.next();
                        if (iItem.getItemId() != a3) {
                            object3 = object;
                            continue;
                        }
                        IItem iItem2 = iItem;
                        int n2 = iItem2.getItemId();
                        long l3 = iItem2.getInventoryitemId();
                        long l4 = iItem2.getEquipOnlyId();
                        if (l4 <= 0L) {
                            object3 = object;
                            continue;
                        }
                        if (hashMap.containsKey(l4)) {
                            if (((Integer)hashMap.get(l4)).intValue() != iItem.getItemId()) {
                                object3 = object;
                                continue;
                            }
                            arrayList2.add(l3);
                            arrayList.add(n2);
                            continue block4;
                        }
                        hashMap.put(l4, iItem.getItemId());
                        continue block4;
                    }
                    continue block3;
                    break;
                }
            }
        }
        int n4 = 0;
        boolean bl = true;
        boolean bl2 = false;
        Iterator iterator4 = iterator = arrayList2.iterator();
        while (iterator4.hasNext()) {
            Long l5 = (Long)iterator.next();
            MapleInventoryManipulator.removeAllByInventoryId(a4.Cb, l5, (Integer)arrayList.get(n4));
            if (object2 != null && ((MapleCharacter)object2).getClient() != null) {
                MapleInventoryManipulator.removeAllByInventoryId(((MapleCharacter)object2).getClient(), l5, (Integer)arrayList.get(n4));
            }
            ++n4;
            bl2 = true;
            iterator4 = iterator;
        }
        if (bl2) {
            if (GameSetConstants.COPYITEM_BAN) {
                AutobanManager.getInstance().autoban(a4.Cb, MapleNodes.ALLATORIxDEMO("\u892b\u88f3\u88f1\u5097\u0002"));
                if (object2 != null && ((MapleCharacter)object2).getClient() != null) {
                    AutobanManager.getInstance().autoban(((MapleCharacter)object2).getClient(), FixDropNullItem.ALLATORIxDEMO("\u8941\u88cb\u889b\u50afh"));
                }
            }
            FileoutputUtil.logToFile(MapleNodes.ALLATORIxDEMO("@aK}\u0003FMmG!\u892b\u88f3\u0003\u88d3\u50b5\u8909\u88d1Q\u8226\u6aac\u6e00 XvX"), FileoutputUtil.NowTime() + "\u89d2\u8272\u540d\u7a31:" + a4.cB + "\u3000\u7269\u54c1: " + ((Object)arrayList).toString() + " function:checkCopyItemsByID\r\n");
            FileoutputUtil.logToFile(FixDropNullItem.ALLATORIxDEMO("*Y!Ei~'U-\u0019\u8941\u88cbi\u88eb\u50df\u8931\u88bbi\u824c\u6a94\u6e6a\u00182N2"), FileoutputUtil.NowTime() + "\u89d2\u8272\u540d\u7a31:" + ((MapleCharacter)object2).getName() + "\u3000\u7269\u54c1: " + ((Object)arrayList).toString() + " function:checkCopyItemsByID\r\n");
        }
        hashMap.clear();
        arrayList2.clear();
    }

    public /* synthetic */ void setBossLog(String a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.setCharacterSet("\u65e5\u8a08" + FileoutputUtil.NowDay() + a2, mapleCharacter.getBossLog(a2) + 1);
    }

    public /* synthetic */ void gainMeso(int a2, boolean a3, boolean a4, boolean a5) {
        MapleCharacter a6;
        a6.gainMeso(a2, a3, a4, a5, false);
    }

    public /* synthetic */ String getSaveKeyB() {
        MapleCharacter a2;
        return a2.T;
    }

    public /* synthetic */ int getCurrentRep() {
        MapleCharacter a2;
        return a2.sC;
    }

    public /* synthetic */ List<Integer> getProfessions() {
        int n2;
        ArrayList<Integer> arrayList = new ArrayList<Integer>();
        int n3 = n2 = 9200;
        while (n3 <= 9204) {
            MapleCharacter a2;
            MapleCharacter mapleCharacter = a2;
            if (mapleCharacter.getProfessionLevel(mapleCharacter.XC * 10000) > 0) {
                arrayList.add(n2);
            }
            n3 = ++n2;
        }
        return arrayList;
    }

    public /* synthetic */ void setRPS(RockPaperScissors a2) {
        a.TA = a2;
    }

    public /* synthetic */ void showInfo(String a2, boolean a32, String a42) {
        MapleCharacter a5;
        String a42;
        short a32 = (short)(a32 ? 5 : -5);
        if (a2 != null && !a2.isEmpty()) {
            a42 = "[" + a2 + "] " + (String)a42;
        }
        a5.dropMessage(a32, a42);
    }

    public /* synthetic */ Set<MapleMonster> getControlled() {
        MapleCharacter a2;
        return a2.CC;
    }

    public /* synthetic */ void giveCoolDowns(int a2, long a3, long a4) {
        MapleCharacter a5;
        a5.addCooldown(a2, a3, a4);
    }

    public /* synthetic */ boolean getAttackDebugMessage() {
        MapleCharacter a2;
        return a2.rb;
    }

    public /* synthetic */ void changeSkillLevel_Skip(ISkill a2, byte a3, byte a4) {
        MapleCharacter a5;
        a5.changeSkillLevel_Skip(a2, a3, a4, false);
    }

    public /* synthetic */ long getExtraPotential() {
        MapleCharacter a2;
        return a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u6f55\u80d1\u9843\u593a\u52ae\u623c"), false);
    }

    public /* synthetic */ void addSoulCount() {
        MapleCharacter a2;
        if (a2.od < 1000) {
            a2.od = (short)(a2.od + 1);
        }
    }

    public /* synthetic */ void changeChannel(int a2) {
        MapleCharacter mapleCharacter;
        MapleCharacter a3;
        ChannelServer channelServer = ChannelServer.getInstance(a3.wc, a2);
        boolean bl = a2 == a3.Cb.getChannel();
        boolean bl2 = false;
        boolean bl3 = false;
        MapleCharacter mapleCharacter2 = a3;
        ChannelServer channelServer2 = ChannelServer.getInstance(mapleCharacter2.getWorld(), -10);
        ChannelServer channelServer3 = ChannelServer.getInstance(mapleCharacter2.getWorld(), -20);
        if (channelServer2 != null && channelServer2.getPlayerStorage().getCharacterById(a3.XC) != null) {
            bl2 = true;
            mapleCharacter = a3;
        } else {
            if (channelServer3 != null && channelServer3.getPlayerStorage().getCharacterById(a3.XC) != null) {
                bl3 = true;
            }
            mapleCharacter = a3;
        }
        if (mapleCharacter.Cb.isMonitored()) {
            MapleCharacter mapleCharacter3 = a3;
            FileoutputUtil.logToFile("logs/Hack/\u5371\u96aa\u5e33\u865f\u64cd\u4f5c/" + a3.getName() + "/\u5404\u5f0f\u64cd\u4f5c.txt", mapleCharacter3.getChrInfo("\u7531 " + mapleCharacter3.Cb.getChannel() + " \u983b \u66f4\u63db\u81f3 " + a2 + " \u983b"));
        }
        MapleCharacter mapleCharacter4 = a3;
        World.addChangeChannel(mapleCharacter4.nC, a2);
        World.AddClientChannelTransfer(mapleCharacter4.Cb.getAccountName());
        if (a3.saveToDB(false, false) == 1) {
            a3.dropMessage(5, FixDropNullItem.ALLATORIxDEMO("\u8994\u8244\u4f9b\u5b6e\u6256\u52a9\uff47"));
        }
        if (GameSetConstants.MONSTERPET && a3.getMonsterPet() != null) {
            a3.getMonsterPet().getMap().killMonster(a3.getMonsterPet(), null, false);
        }
        if (GameSetConstants.FLY_CHAIR && a3.getFlyChairId() != 0) {
            MapleCharacter mapleCharacter5 = a3;
            mapleCharacter5.setFlyChairId(0);
            MapleBuffStat[] arrmapleBuffStat = new MapleBuffStat[1];
            arrmapleBuffStat[0] = MapleBuffStat.MONSTER_RIDING;
            mapleCharacter5.cancelBuffStats(arrmapleBuffStat);
        }
        if (bl || channelServer == null || channelServer.isShutdown() || bl2 || bl3) {
            a3.Cb.sendPacket(MaplePacketCreator.serverBlocked(1));
            return;
        }
        if (a3.Cb.getPlayer().isTestingDPM()) {
            MapleMonster mapleMonster = MapleLifeFactory.getMonster(9001007);
            MapleCharacter mapleCharacter6 = a3;
            mapleCharacter6.rC.killMonsterDpm(mapleMonster);
            mapleCharacter6.Cb.getPlayer().toggleTestingDPM();
            mapleCharacter6.Cb.getPlayer().dropMessage(5, MapleNodes.ALLATORIxDEMO("\u5dfc\u5070\u6b6c\u755a\u5243\u76a8J|C\u6e00\u8a68\u302e"));
        }
        MapleCharacter mapleCharacter7 = a3;
        mapleCharacter7.changeRemoval();
        ChannelServer channelServer4 = ChannelServer.getInstance(mapleCharacter7.wc, a3.Cb.getChannel());
        if (mapleCharacter7.getMessenger() != null) {
            World.Messenger.silentLeaveMessenger(a3.getMessenger().getId(), new MapleMessengerCharacter(a3));
        }
        MapleCharacter mapleCharacter8 = a3;
        MapleCharacter mapleCharacter9 = a3;
        PlayerBuffStorage.addBuffsToStorage(mapleCharacter8.getId(), mapleCharacter9.getAllBuffs());
        PlayerBuffStorage.addStackBuffsToStorage(mapleCharacter8.getId(), a3.p);
        PlayerBuffStorage.addCooldownsToStorage(mapleCharacter9.getId(), a3.getCooldowns());
        PlayerBuffStorage.addDiseaseToStorage(mapleCharacter8.getId(), a3.getAllDiseases());
        a3.I = false;
        World.channelChangeData(new CharacterTransfer(a3), a3.getClient(), a3.getId(), a3.wc, a2);
        if (channelServer4 != null) {
            ChannelServer channelServer5 = channelServer4;
            channelServer5.removePlayer(a3);
            channelServer5.getPlayerStorage().registerPlayerTransfer(a3);
        }
        MapleCharacter mapleCharacter10 = a3;
        MapleCharacter mapleCharacter11 = a3;
        mapleCharacter10.Cb.updateLoginState(6, mapleCharacter11.Cb.getSessionIPAddress());
        mapleCharacter11.Cb.sendPacket(MaplePacketCreator.getChannelChange(channelServer.getIP(), channelServer.getPort()));
        mapleCharacter10.getMap().removePlayer(a3);
        mapleCharacter10.Cb.setPlayer(null);
        mapleCharacter10.Cb.setReceiving(false);
        a3.expirationTask(true, false);
    }

    public /* synthetic */ boolean isSkillWorking(int a2) {
        MapleCharacter a3;
        return a3.k.containsKey(a2);
    }

    public /* synthetic */ int getIntRecord(int a22) {
        MapleCharacter a3;
        MapleQuestStatus a22 = a3.getQuestNAdd(MapleQuest.getInstance(a22));
        if (a22.getCustomData() == null) {
            a22.setCustomData(FixDropNullItem.ALLATORIxDEMO("v"));
            a3.zb = true;
        }
        return Integer.parseInt(a22.getCustomData());
    }

    public /* synthetic */ void resetKaiserCombo() {
        MapleCharacter a2;
        a2.setSkillTemp(61000000, 0);
        MapleCharacter mapleCharacter = a2;
        SkillFactory.getSkill(61111008).getEffect(1).applyKaiser_Combo(mapleCharacter, mapleCharacter.getAttackCombo());
    }

    public /* synthetic */ long getEquipDurabilitysTime() {
        MapleCharacter a2;
        return a2.w;
    }

    public final /* synthetic */ boolean canHold(int a2) {
        MapleCharacter a3;
        return a3.getInventory(GameConstants.getInventoryType(a2)).getNextFreeSlot() > -1;
    }

    public /* synthetic */ boolean getLottoryStatus() {
        MapleCharacter a2;
        return a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u629b\u6cc4\u72ce\u6167"), false) == 1L;
    }

    public /* synthetic */ int getPartyId() {
        MapleCharacter a2;
        if (a2.ed != null) {
            return a2.ed.getId();
        }
        return -1;
    }

    public /* synthetic */ void resetRemainSp() {
        MapleCharacter a2;
        int n2;
        int n3 = n2 = 0;
        while (n3 < a2.nc.length) {
            a2.nc[n2++] = 0;
            n3 = n2;
        }
    }

    public /* synthetic */ void autoJob_\u7cbe\u9748\u904a\u4fe0() {
        MapleCharacter a2;
        if (JobConstants.is\u7cbe\u9748\u904a\u4fe0(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter1stJobLevel(a2.ob)) {
                a2.changeJob(2300);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                a2.changeJob(2310);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(2311);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter4thJobLevel(a2.ob)) {
                a2.changeJob(2312);
            }
        }
    }

    public /* synthetic */ void gainDonatePoint(int a2, boolean a3) {
        int n2;
        String string;
        MapleCharacter a4;
        a4.sA += a2;
        if (a3) {
            MapleCharacter mapleCharacter = a4;
            mapleCharacter.modifyCSPoints(true ? 1 : 0, a2 * GameSetConstants.DONATE_RATE, true);
            int n3 = a2;
            mapleCharacter.dropMessage(1, "[\u81ea\u52d5\u8d0a\u52a9 \u5df2\u5165\u5e33]\r\n\u7372\u5f97\u8d0a\u52a9\u9ede\u6578:" + n3 + "\r\n\u73fe\u91d1\u9ede\u6578:" + n3 * GameSetConstants.DONATE_RATE + "\r\n\u76ee\u524d\u8d0a\u52a9\u9ede\u6578:" + a4.getPoints());
        }
        if (a2 >= 0) {
            string = FixDropNullItem.ALLATORIxDEMO("\u7344\u5fd1");
            n2 = a2;
        } else {
            string = MapleNodes.ALLATORIxDEMO("\u593f\u5397");
            n2 = a2;
        }
        a4.dropMessage(-1, "\u60a8" + string + "\u4e86 " + n2 + " \u8d0a\u52a9\u9ede\u6578");
        a4.saveToDB(false, false);
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ int getBossLogWeek(String a) {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [1[TRYBLOCK], 3[TRYBLOCK]], but top level block is 5[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ int getAcash() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        return mapleCharacter.getAcash(mapleCharacter);
    }

    public static /* synthetic */ {
        AB = new LinkedHashMap<Integer, List<MapleBuffStatValueHolder>>();
        NB = new ReentrantLock();
    }

    public /* synthetic */ void setCurrentRep(int a2) {
        MapleCharacter a3;
        a3.sC = a2;
        if (a3.JC != null) {
            a3.JC.setCurrentRep(a2);
        }
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ int getDayLog(String a) {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [3[TRYBLOCK], 1[TRYBLOCK]], but top level block is 5[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ void setPotential4(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u6a51\u73ab\u712f\u89ba\u757e\u5e14"), a2, false);
    }

    public static /* synthetic */ void deleteWhereCharacterId(Connection a2, String a32, int a4) {
        try {
            a32 = a2.prepareStatement((String)a32);
            a32.setInt(1, a4);
            a32.executeUpdate();
            a32.close();
            return;
        }
        catch (Exception a32) {
            FilePrinter.printError(MapleNodes.ALLATORIxDEMO("jIbIzIYDk^kofM|MmXk^GH XvX"), a32, FixDropNullItem.ALLATORIxDEMO("m\"S*S2S\u0011^#D#u.W4W%B#D\u000fR\u001b"));
            return;
        }
    }

    public /* synthetic */ void HonorUnlock3() {
        MapleCharacter a2;
        InnerSkillValueHolder innerSkillValueHolder = null;
        boolean bl = false;
        innerSkillValueHolder = new InnerSkillValueHolder(70000017, (byte)(true ? 1 : 0), (byte)(true ? 1 : 0), (byte)(true ? 1 : 0), true);
        a2.u.add(innerSkillValueHolder);
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.UA = true;
        mapleCharacter.changeSkillLevel(innerSkillValueHolder.getSkillId(), (int)innerSkillValueHolder.getSkillLevel(), innerSkillValueHolder.getSkillLevel());
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.updateInnerPotential((byte)0, innerSkillValueHolder.getSkillId(), innerSkillValueHolder.getSkillLevel(), innerSkillValueHolder.getRank()));
    }

    public /* synthetic */ long getCharacterSet(String a2) {
        MapleCharacter a3;
        long l2 = 0L;
        if (a3.Ca != null && a3.ga != null && a3.ga.containsKey(a2)) {
            l2 = a3.ga.get(a2);
        }
        return l2;
    }

    public /* synthetic */ void setItemEffect(int a2) {
        a.nA = a2;
    }

    public final /* synthetic */ boolean canFamiliarEffect(long a2, MapleStatEffect a3) {
        MapleCharacter a4;
        return a4.Qa > 0L && a4.Qa + (long)a3.getInterval() < a2;
    }

    public static /* synthetic */ void deleteWhereAcccountId(Connection a2, String a32, int a4) {
        try {
            a32 = a2.prepareStatement((String)a32);
            a32.setInt(1, a4);
            a32.executeUpdate();
            a32.close();
            return;
        }
        catch (Exception a32) {
            FilePrinter.printError(MapleNodes.ALLATORIxDEMO("Hk@kXk{fI|IOOmOaY`XGH XvX"), a32, FixDropNullItem.ALLATORIxDEMO("m\"S*S2S\u0011^#D#u.W4W%B#D\u000fR\u001b"));
            return;
        }
    }

    public /* synthetic */ void addCP(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.qd = (short)(mapleCharacter.qd + a2);
        mapleCharacter.sc = (short)(mapleCharacter.sc + a2);
    }

    public /* synthetic */ int getGuildId() {
        MapleCharacter a2;
        return a2.RA;
    }

    public final /* synthetic */ int getDojo() {
        MapleCharacter a2;
        return a2.lB;
    }

    private /* synthetic */ void ALLATORIxDEMO(Connection a22) throws SQLException {
        try {
            MapleCharacter a3;
            if (a3.da && a3.Ea > 0) {
                a3.D((Connection)a22, MapleNodes.ALLATORIxDEMO("JiBiZi.j\\cC\fhE}DgBiseE`K.{Fi\\i.OgH.\u0011.\u0013"));
                AutoCloseable autoCloseable = a22 = a22.prepareStatement(FixDropNullItem.ALLATORIxDEMO("\u000fx\u0015s\u0014bf\u007f\bb\t\u0016 _5^/X!i-_(Qf\u001e%_\"\u001afX'[#\u001af^/E2Y4O5U)D#\u001afQ'[#B/[#Eo\u0016\u0010w\nc\u0003ef\u001ey\u001af\tj\u0016y\u001af\to"));
                AutoCloseable autoCloseable2 = a22;
                autoCloseable2.setInt(1, a3.XC);
                autoCloseable2.setString(2, a3.cB);
                autoCloseable.setInt(3, a3.Ea);
                autoCloseable.setInt(4, a3.Ja);
                autoCloseable.executeUpdate();
                a3.da = false;
                return;
            }
        }
        catch (SQLException a22) {
            a22.printStackTrace();
        }
    }

    public /* synthetic */ int[] getRegRocks() {
        MapleCharacter a2;
        return a2.ZC;
    }

    public /* synthetic */ void decAntiKSNum() {
        MapleCharacter a2;
        if (a2.ALLATORIxDEMO > 0) {
            a2.ALLATORIxDEMO = (byte)(a2.ALLATORIxDEMO - 1);
        }
    }

    public /* synthetic */ boolean istrading() {
        MapleCharacter a2;
        return a2.bA;
    }

    public final /* synthetic */ int getLastUseSkill() {
        MapleCharacter a2;
        return a2.ZA;
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ void handleApplyStatus(MapleMonster a2, int a3, int a42) {
        MapleStatEffect mapleStatEffect;
        MapleCharacter a42;
        MapleCharacter a5;
        block11: {
            block12: {
                a42 = a5;
                if (a2.getStats().isBoss() || (mapleStatEffect = a5.getStatForBuff(MapleBuffStat.WK_CHARGE)) == null) break block11;
                if (a5.hasBuff(1211005)) break block12;
                if (!a5.hasBuff(1211006)) break block11;
            }
            a2.applyStatus(a42, new MonsterStatusEffect(MonsterStatus.FREEZE, 1, mapleStatEffect.getSourceId(), null, false), false, mapleStatEffect.getY() * 1000, true, mapleStatEffect);
        }
        switch (a3) {
            case 0: 
            case 5011000: 
            case 5011001: 
            case 5301000: 
            case 5311000: 
            case 5321000: 
            case 5321001: 
            case 5321012: {
                if (a42.getBuffedValue(MapleBuffStat.BARREL_ROLL) == null || a2.getStats().isBoss() || (mapleStatEffect = a42.getStatForBuff(MapleBuffStat.BARREL_ROLL)) == null || !mapleStatEffect.makeChanceResult_w(a5)) return;
                switch (a42.getBuffedValue(MapleBuffStat.BARREL_ROLL)) {
                    case 1: {
                        a2.applyStatus(a42, new MonsterStatusEffect(MonsterStatus.FREEZE, 1, mapleStatEffect.getSourceId(), null, false), false, mapleStatEffect.getV() * 1000, true, mapleStatEffect);
                        return;
                    }
                    case 2: {
                        a2.applyStatus(a42, new MonsterStatusEffect(MonsterStatus.STUN, 1, mapleStatEffect.getSourceId(), null, false), false, mapleStatEffect.getV() * 1000, true, mapleStatEffect);
                        return;
                    }
                    case 3: {
                        a2.applyStatus(a42, new MonsterStatusEffect(MonsterStatus.SPEED, mapleStatEffect.getU(), mapleStatEffect.getSourceId(), null, false), false, mapleStatEffect.getV() * 1000, true, mapleStatEffect);
                        return;
                    }
                    case 4: {
                        a2.applyStatus(a42, new MonsterStatusEffect(MonsterStatus.DARKNESS, 1, mapleStatEffect.getSourceId(), null, false), false, mapleStatEffect.getV() * 1000, true, mapleStatEffect);
                        return;
                    }
                }
                return;
            }
        }
    }

    public /* synthetic */ void changeSkillLevel(ISkill a2, int a3, int a4) {
        MapleCharacter a5;
        if (a2 == null) {
            return;
        }
        ISkill iSkill = a2;
        a5.changeSkillLevel(iSkill, a3, a4, iSkill.isTimeLimited() ? System.currentTimeMillis() + 2592000000L : -1L);
    }

    public /* synthetic */ void setLevelBurnUp(boolean a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u71f5\u7194\u6a17\u5f49"), a2, false);
        mapleCharacter.dropMessage("\u71c3\u71d2\u6a21\u5f0f\u5df2 " + (a2 ? MapleNodes.ALLATORIxDEMO("\u5551\u7504.\u0004\u5349\u7b65\u4e0e\u7d36\u53e1\u9861\u5918\u735e\u5f99\u5145\u7d14\u0005") : FixDropNullItem.ALLATORIxDEMO("\u95ea\u95cf")) + "!");
        a3.Cb.sendPacket(MaplePacketCreator.sendHint("#b\u71c3\u71d2\u6a21\u5f0f\u5df2 #r" + (a2 ? MapleNodes.ALLATORIxDEMO("\u5551\u7504-N.\u0004\u5349\u7b65\u4e0e\u7d36\u53e1\u9861\u5918\u735e\u5f99\u4e2c\u7d14\u0005") : FixDropNullItem.ALLATORIxDEMO("\u95ea\u95cf")) + "#b! ", 350, 200));
    }

    public /* synthetic */ RockPaperScissors getRPS() {
        MapleCharacter a2;
        return a2.TA;
    }

    public /* synthetic */ int getTotalSkillLevel(int a2) {
        MapleCharacter a3;
        return a3.getTotalSkillLevel(SkillFactory.getSkill(a2));
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ boolean UpdateCharacterString(String a, String a) {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [3[TRYBLOCK]], but top level block is 5[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ void setEarnGash(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u4ec4\u65c9\u737c\u5fbbIM}D"), a2, false);
    }

    public /* synthetic */ void ForcechangeChannel(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        ChannelServer channelServer = ChannelServer.getInstance(mapleCharacter.wc, a2);
        if (mapleCharacter.saveToDB(false, false) == 1) {
            a3.dropMessage(5, MapleNodes.ALLATORIxDEMO("\u89fe\u827c\u4ff1\u5b56\u623c\u5291\uff2d"));
        }
        if (GameSetConstants.FLY_CHAIR && a3.getFlyChairId() != 0) {
            MapleCharacter mapleCharacter2 = a3;
            mapleCharacter2.setFlyChairId(0);
            MapleBuffStat[] arrmapleBuffStat = new MapleBuffStat[1];
            arrmapleBuffStat[0] = MapleBuffStat.MONSTER_RIDING;
            mapleCharacter2.cancelBuffStats(arrmapleBuffStat);
        }
        if (channelServer == null || channelServer.isShutdown()) {
            a3.Cb.sendPacket(MaplePacketCreator.serverBlocked(1));
            return;
        }
        MapleCharacter mapleCharacter3 = a3;
        mapleCharacter3.changeRemoval();
        ChannelServer channelServer2 = ChannelServer.getInstance(mapleCharacter3.wc, a3.Cb.getChannel());
        if (mapleCharacter3.getMessenger() != null) {
            World.Messenger.silentLeaveMessenger(a3.getMessenger().getId(), new MapleMessengerCharacter(a3));
        }
        MapleCharacter mapleCharacter4 = a3;
        MapleCharacter mapleCharacter5 = a3;
        MapleCharacter mapleCharacter6 = a3;
        MapleCharacter mapleCharacter7 = a3;
        PlayerBuffStorage.addBuffsToStorage(mapleCharacter6.getId(), mapleCharacter7.getAllBuffs());
        PlayerBuffStorage.addStackBuffsToStorage(mapleCharacter6.getId(), a3.p);
        PlayerBuffStorage.addCooldownsToStorage(mapleCharacter7.getId(), a3.getCooldowns());
        PlayerBuffStorage.addDiseaseToStorage(mapleCharacter6.getId(), a3.getAllDiseases());
        World.channelChangeData(new CharacterTransfer(a3), a3.getClient(), a3.getId(), a3.wc, a2);
        channelServer2.removePlayer(mapleCharacter5);
        mapleCharacter4.Cb.updateLoginState(6, a3.Cb.getSessionIPAddress());
        mapleCharacter5.Cb.sendPacket(MaplePacketCreator.getChannelChange(channelServer.getIP(), channelServer.getPort()));
        mapleCharacter4.getMap().removePlayer(a3);
        mapleCharacter4.Cb.setPlayer(null);
        mapleCharacter4.Cb.setReceiving(false);
    }

    public /* synthetic */ boolean isNpcSelect(int a2) {
        MapleCharacter a3;
        return a3.G.contains(a2);
    }

    public /* synthetic */ byte getGuildRank() {
        MapleCharacter a2;
        return a2.aB;
    }

    public final /* synthetic */ void addGreenSaver(int a2) {
        MapleCharacter a3;
        if (a3.getBuffedValue(MapleBuffStat.VIRTUE_EFFECT) == null) {
            MapleCharacter mapleCharacter = a3;
            mapleCharacter.KC = Math.min(500, mapleCharacter.KC + a2);
            mapleCharacter.Cb.sendPacket(MaplePacketCreator.GreenSaver(a3));
            return;
        }
        a3.KC = Math.min(500, 0);
        a3.Cb.sendPacket(MaplePacketCreator.GreenSaver(a3));
    }

    public /* synthetic */ int getTotalBattleExp() {
        MapleCharacter a2;
        return a2.CB;
    }

    public /* synthetic */ void handleResetDay() {
        MapleCharacter a2;
        Calendar calendar;
        Calendar calendar2 = calendar = Calendar.getInstance();
        calendar2.add(12, 10);
        int n2 = calendar2.get(7);
        if (n2 != a2.getLastDay()) {
            MapleCharacter mapleCharacter = a2;
            MapleCharacter mapleCharacter2 = a2;
            MapleCharacter mapleCharacter3 = a2;
            MapleCharacter mapleCharacter4 = a2;
            MapleCharacter mapleCharacter5 = a2;
            MapleCharacter mapleCharacter6 = a2;
            MapleCharacter mapleCharacter7 = a2;
            mapleCharacter7.setLastDay(n2);
            mapleCharacter7.resetMinute();
            mapleCharacter6.setFatigue(0);
            mapleCharacter6.setActivity(0);
            mapleCharacter5.setSpendMeso(0);
            mapleCharacter5.setEarnMeso(0);
            mapleCharacter4.setSpendPoint(0);
            mapleCharacter4.setEarnPoint(0);
            mapleCharacter3.setSpendGash(0);
            mapleCharacter3.setUseMega(0);
            mapleCharacter2.setEarnGash(0);
            mapleCharacter2.setUseCube(0);
            mapleCharacter.setSpendMaplePoint(0);
            mapleCharacter.setEarnMaplePoint(0);
            mapleCharacter.resetMobKill();
        }
        if ((long)n2 != a2.getLastDayAcc()) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.setLastDayAcc(n2);
            mapleCharacter.setMonsterPoint(0);
        }
    }

    public /* synthetic */ int getFamilyId() {
        MapleCharacter a2;
        if (a2.JC == null) {
            return 0;
        }
        return a2.JC.getFamilyId();
    }

    public /* synthetic */ void clearWishlist() {
        int n2;
        int n3 = n2 = 0;
        while (n3 < 10) {
            a.FC[n2++] = 0;
            n3 = n2;
        }
    }

    public /* synthetic */ long getKillHpAdd() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6b8c\u606c\u5296\u8806"), false);
    }

    public /* synthetic */ int getExtendedSlot(int a2) {
        MapleCharacter a3;
        Iterator<MapleExtendedSlots> iterator;
        int n2 = 0;
        Iterator<MapleExtendedSlots> iterator2 = iterator = a3.Ma.iterator();
        while (iterator2.hasNext()) {
            MapleExtendedSlots mapleExtendedSlots = iterator.next();
            if (n2 == a2) {
                return mapleExtendedSlots.getItemId();
            }
            ++n2;
            iterator2 = iterator;
        }
        return -1;
    }

    public /* synthetic */ void tryPartyQuest(int a22) {
        try {
            MapleCharacter a3;
            MapleCharacter mapleCharacter = a3;
            mapleCharacter.startPartyQuest(a22);
            a3.ic = System.currentTimeMillis();
            int n2 = a22;
            mapleCharacter.updateOneInfo(n2, FixDropNullItem.ALLATORIxDEMO("2D?"), String.valueOf(Integer.parseInt(a3.getOneInfo(n2, MapleNodes.ALLATORIxDEMO("X|U"))) + 1));
            return;
        }
        catch (Exception a22) {
            FilePrinter.printError(FixDropNullItem.ALLATORIxDEMO("{'F*S\u0005^'D'U2S4\u00182N2"), a22, MapleNodes.ALLATORIxDEMO("X|U^M|Xw}{I}X.I|^a^"));
            return;
        }
    }

    public /* synthetic */ void addOwlCount() {
        MapleCharacter a2;
        if (a2.getBuffedValue(MapleBuffStat.OWL_SPIRIT) != null) {
            MapleCharacter mapleCharacter = a2;
            ++mapleCharacter.xC;
            if (mapleCharacter.xC > a2.getBuffedSkill_X(MapleBuffStat.OWL_SPIRIT)) {
                a2.xC = 0;
                a2.cancelEffectFromBuffStat(MapleBuffStat.OWL_SPIRIT);
            }
        }
    }

    public /* synthetic */ long getMobKill(int a2) {
        MapleCharacter a3;
        return a3.getCharacterSet("\u64ca\u6bba\u7e3d\u602a\u7269" + a2, false);
    }

    @Override
    public /* synthetic */ MapleMapObjectType getType() {
        return MapleMapObjectType.PLAYER;
    }

    public /* synthetic */ void dispel() {
        MapleCharacter a2;
        if (!a2.isHidden()) {
            for (MapleBuffStatValueHolder mapleBuffStatValueHolder : new LinkedList<MapleBuffStatValueHolder>(a2.kb.values())) {
                if (!mapleBuffStatValueHolder.effect.isSkill() || mapleBuffStatValueHolder.effect.isMorph() || mapleBuffStatValueHolder.effect.isGmBuff() || mapleBuffStatValueHolder.effect.isMonsterRiding() || mapleBuffStatValueHolder.effect.isMechChange() || mapleBuffStatValueHolder.effect.isEnergyCharge() || mapleBuffStatValueHolder.effect.isAranCombo()) continue;
                a2.cancelEffect(mapleBuffStatValueHolder.effect, false, mapleBuffStatValueHolder.startTime);
            }
        }
    }

    public final /* synthetic */ long getLastCombo() {
        MapleCharacter a2;
        return a2.wC;
    }

    public /* synthetic */ double getAllExpRateAdd() {
        double d2;
        MapleCharacter a2;
        double d3 = 0.0;
        double d4 = a2.getStat().expBuffAdd / 100.0;
        if (d2 >= 1.0) {
            d3 += d4;
        }
        return d3 += (double)a2.getEquipExpRate() * 0.01;
    }

    public /* synthetic */ int getBeans() {
        MapleCharacter a2;
        return a2.VB;
    }

    public /* synthetic */ void setEarnMeso(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u4ec4\u65c9\u737c\u5fbb\u695d\u5e4f"), a2, false);
    }

    private /* synthetic */ void ALLATORIxDEMO(List<MapleBuffStat> a2) {
        MapleCharacter a3;
        if (a3.Cb.getChannelServer() != null) {
            boolean bl;
            boolean bl2 = bl = a3.Cb.getChannelServer().getPlayerStorage().getCharacterById(a3.getId()) != null;
            if (a2.contains(MapleBuffStat.HOMING_BEACON)) {
                if (bl) {
                    a3.Cb.sendPacket(MaplePacketCreator.cancelHoming());
                    return;
                }
            } else {
                if (bl) {
                    a3.GB.recalcLocalStats();
                }
                if (a2.contains(MapleBuffStat.DIVINE_BODY)) {
                    a3.Pb = false;
                    a3.dropMessage(6, FixDropNullItem.ALLATORIxDEMO("\u7117\u6533\u5dc4\u7dd5\u95ea\u95cf"));
                }
                MapleCharacter mapleCharacter = a3;
                mapleCharacter.Cb.sendPacket(MaplePacketCreator.cancelBuff(a2));
                MapleCharacter mapleCharacter2 = a3;
                mapleCharacter.rC.broadcastMessage(mapleCharacter2, MaplePacketCreator.cancelForeignBuff(mapleCharacter2.getId(), a2), false);
            }
        }
    }

    public /* synthetic */ void DaySign() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        long l2 = mapleCharacter.getSignedNumber() + 1L;
        mapleCharacter.setBossLog(MapleNodes.ALLATORIxDEMO("\u6bc1\u65c9\u7c33\u521c"));
        mapleCharacter.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u7c0b\u5276\u6b17\u653e"), l2, false);
    }

    public /* synthetic */ void addMonsterKillInMap(int a2) {
        MapleCharacter a3;
        if (a3.la.get(a2) == null) {
            a3.la.put(a2, 1);
            return;
        }
        int n2 = a3.la.get(a2);
        a3.la.put(a2, n2 + 1);
    }

    public /* synthetic */ void autoJob_\u672b\u65e5() {
        MapleCharacter a2;
        if (JobConstants.is\u60e1\u9b54\u6bba\u624b(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                a2.changeJob(3110);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(3111);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter4thJobLevel(a2.ob)) {
                a2.changeJob(3112);
                return;
            }
        } else if (JobConstants.is\u60e1\u9b54\u5fa9\u4ec7\u8005(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                a2.changeJob(3120);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(3121);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter4thJobLevel(a2.ob)) {
                a2.changeJob(3122);
                return;
            }
        } else if (JobConstants.is\u7149\u7344\u5deb\u5e2b(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                a2.changeJob(3210);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(3211);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter4thJobLevel(a2.ob)) {
                a2.changeJob(3212);
                return;
            }
        } else if (JobConstants.is\u72c2\u8c79\u7375\u4eba(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                a2.changeJob(3310);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(3311);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter4thJobLevel(a2.ob)) {
                a2.changeJob(3312);
                return;
            }
        } else if (JobConstants.is\u6a5f\u7532\u6230\u795e(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                a2.changeJob(3510);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(3511);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter4thJobLevel(a2.ob)) {
                a2.changeJob(3512);
                return;
            }
        } else if (JobConstants.is\u5091\u8afe(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter1stJobLevel(a2.ob)) {
                a2.changeJob(3600);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                a2.changeJob(3610);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(3611);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter4thJobLevel(a2.ob)) {
                a2.changeJob(3612);
            }
        }
    }

    public /* synthetic */ String getInfo() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        return "\u73a9\u5bb6\u540d\u7a31:" + mapleCharacter.cB + " ID:" + mapleCharacter.XC + " \u5e33\u865fID:" + a2.nC;
    }

    public /* synthetic */ long getExtraDrop() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u63bf\u5bb0\u987b\u5950\u5296\u6256"), false);
    }

    public /* synthetic */ void setprefix(String a2) {
        a.OB = a2;
    }

    public /* synthetic */ void healMP(int a2) {
        MapleCharacter a3;
        a3.addMP(a2);
    }

    public /* synthetic */ void setHairAlbum(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.getHairAlbum();
        if (mapleCharacter.EA.size() >= a3.JB.length) {
            return;
        }
        int n2 = 0;
        int n3 = a3.EA.size();
        int n4 = n2;
        while (n4 < n3) {
            if (a3.EA.get(n2) == 0) {
                --n3;
                a3.EA.remove(n2);
                --n2;
            }
            n4 = ++n2;
        }
        MapleCharacter mapleCharacter2 = a3;
        mapleCharacter2.EA.add(a2);
        n2 = mapleCharacter2.JB.length - a3.EA.size();
        int n5 = n3 = 0;
        while (n5 < n2) {
            a3.EA.add(0);
            n5 = ++n3;
        }
        MapleCharacter mapleCharacter3 = a3;
        mapleCharacter3.setHairAlbum(mapleCharacter3.EA.stream().mapToInt(Integer::intValue).toArray());
    }

    public /* synthetic */ void doInfinity() {
        int n2;
        MapleStatEffect mapleStatEffect;
        MapleCharacter a2;
        if (a2.getStat() != null && a2.getBuffedValue(MapleBuffStat.INFINITY) != null && GameSetConstants.MAPLE_VERSION >= 134 && (mapleStatEffect = SkillFactory.getSkill(n2 = a2.getBuffSource(MapleBuffStat.INFINITY)).getEffect(a2.getTotalSkillLevel(n2))) != null) {
            long l2 = a2.t;
            MapleStatEffect mapleStatEffect2 = mapleStatEffect;
            int n3 = mapleStatEffect2.alchemistModifyVal(a2, mapleStatEffect2.getDuration(), false);
            int n4 = (int)((long)n3 - (System.currentTimeMillis() - l2));
            if (n4 > 0 && n4 < n3) {
                MapleCharacter mapleCharacter = a2;
                MapleCharacter mapleCharacter2 = a2;
                double d2 = (double)mapleCharacter.getStat().getCurrentMaxHp() * ((double)mapleCharacter2.getBuffedSkill_Y(MapleBuffStat.INFINITY).intValue() / 100.0);
                mapleCharacter2.healHP((int)d2, true);
                mapleCharacter.healMP((int)d2, true);
                mapleCharacter.addInfinityCount();
                mapleStatEffect.applyTo(a2, n4);
                if (n4 < 5000) {
                    a2.resetInfinityCount();
                }
            }
        }
    }

    public /* synthetic */ IMaplePlayerShop getPlayerShop() {
        MapleCharacter a2;
        return a2.bb;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ boolean setMonsterPet(int a) {
        var2_2 = DBConPool.getInstance().getDataSource().getConnection();
        try {
            var3_4 = null;
            v0 = var2_2;
            var4_6 = v0.createStatement();
            var3_4 = v0.prepareStatement(MapleNodes.ALLATORIxDEMO("y^hOxK\fcC`_zI|\\kX.\u007fKx.Ba[{_kH.\u0011.\u001c.{Fi\\i.OfM|MmXk^gH.\u0011.\u0013"));
            var3_4.setInt(1, a.XC);
            var3_4.execute();
            var3_4.close();
            var5_8 = null;
            v1 = var5_8 = var2_2.prepareStatement(FixDropNullItem.ALLATORIxDEMO("\u0013f\u0002w\u0012sf[)X5B#D6S2\u0016\u0015s\u0012\u0016(Y1C5S\"\u0016{\u0016w\u0016\u0011~\u0003d\u0003\u0016%^'D'U2S4_\"\u0016{\u0016y\u0016'X\"\u0016+Y(E2S4_\"\u0016{\u0016y"));
            v1.setInt(1, a.XC);
            v1.setInt(2, a);
            v1.execute();
            var5_8.close();
            ** if (var2_2 == null) goto lbl-1000
        }
        catch (Throwable var3_5) {
            if (var2_2 == null) ** GOTO lbl32
            try {
                var2_2.close();
                v2 = var3_5;
                ** GOTO lbl33
            }
            catch (Throwable var4_7) {
                try {
                    var3_5.addSuppressed(var4_7);
lbl32:
                    // 2 sources

                    v2 = var3_5;
lbl33:
                    // 2 sources

                    throw v2;
                }
                catch (Exception var2_3) {
                    FilePrinter.printError(MapleNodes.ALLATORIxDEMO("_kXCC`_zI||kX XvX"), var2_3);
                    return false;
                }
            }
        }
lbl-1000:
        // 1 sources

        {
            var2_2.close();
        }
lbl-1000:
        // 2 sources

        {
        }
        return true;
    }

    public final /* synthetic */ long getLastFameTime() {
        MapleCharacter a2;
        return a2.eb;
    }

    public /* synthetic */ void addFame(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.IB = (short)(mapleCharacter.IB + a2);
        mapleCharacter.getTrait(MapleTrait.MapleTraitType.\u9b45\u529b).addLocalExp(a2);
        if (mapleCharacter.IB >= 50) {
            a3.finishAchievement(7);
        }
    }

    public /* synthetic */ int getVipExpRate() {
        MapleCharacter a2;
        int n2 = a2.getVip();
        int n3 = 0;
        if (n2 <= 20) {
            n3 = (int)((double)n2 * GameSetConstants.VIPEXP_INTERVAL * 100.0);
            return n3;
        }
        n2 = 20;
        n3 = (int)((double)20 * GameSetConstants.VIPEXP_INTERVAL * 100.0);
        return n3;
    }

    public /* synthetic */ void setMaxDamage(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u52e3\u610d\u9834\u50f1"), a2, false);
    }

    public /* synthetic */ boolean getItemVac() {
        MapleCharacter a2;
        return a2.EB;
    }

    public final /* synthetic */ boolean canMPRecover(long a2) {
        MapleCharacter a3;
        if (a3.GB.mpRecoverTime > 0 && a3.iB + (long)a3.GB.mpRecoverTime < a2) {
            a3.iB = a2;
            return true;
        }
        return false;
    }

    public /* synthetic */ void writeEnergy(String a2, String a3) {
        MapleCharacter a4;
        a4.Cb.sendPacket(MaplePacketCreator.sendPyramidEnergy(a2, a3));
    }

    public /* synthetic */ void addFactionPoint(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        long l2 = mapleCharacter.getFactionPoint() + (long)a2;
        mapleCharacter.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u95b6\u6d78\u7a7b\u5240"), l2, false);
    }

    public /* synthetic */ void setCheckedPyramid(boolean a2) {
        a.OA = a2;
    }

    public /* synthetic */ int getMaxHp() {
        MapleCharacter a2;
        return a2.getStat().getMaxHp();
    }

    public /* synthetic */ boolean isHarversting() {
        MapleCharacter a2;
        return a2.ab;
    }

    public /* synthetic */ int getDarkGauge() {
        MapleCharacter a2;
        return a2.h;
    }

    public final /* synthetic */ boolean haveItem(int a2) {
        MapleCharacter a3;
        return a3.haveItem(a2, true ? 1 : 0, true, true);
    }

    public /* synthetic */ boolean isSpeakOutPut() {
        MapleCharacter a2;
        return !a2.pd.isEmpty();
    }

    public final /* synthetic */ byte[] getPetStores() {
        MapleCharacter a2;
        return a2.HB;
    }

    public static /* synthetic */ void deleteWhereCharacterId_NoLock(Connection a2, String a32, int a4) {
        try {
            a32 = a2.prepareStatement((String)a32);
            a32.setInt(1, a4);
            a32.execute();
            a32.close();
            return;
        }
        catch (Exception a32) {
            FilePrinter.printError(MapleNodes.ALLATORIxDEMO("jIbIzIYDk^kofM|MmXk^GH XvX"), a32, FixDropNullItem.ALLATORIxDEMO("m\"S*S2S\u0011^#D#u.W4W%B#D\u000fR\u001b"));
            return;
        }
    }

    public /* synthetic */ void setblood(int a2) {
        a.oA = a2;
    }

    public /* synthetic */ boolean CanUseBeans() {
        MapleCharacter a2;
        return a2.vc;
    }

    public /* synthetic */ int getConversation() {
        MapleCharacter a2;
        return a2.cb.get();
    }

    public /* synthetic */ void changeSkillLevel(Map<ISkill, SkillEntry> a2) {
        MapleCharacter a3;
        boolean bl = false;
        boolean bl2 = false;
        if (a2 == null || a2.isEmpty()) {
            return;
        }
        Iterator<Map.Entry<ISkill, SkillEntry>> iterator = a2.entrySet().iterator();
        block0: while (true) {
            Iterator<Map.Entry<ISkill, SkillEntry>> iterator2 = iterator;
            while (iterator2.hasNext()) {
                Map.Entry<ISkill, SkillEntry> entry;
                Map.Entry<ISkill, SkillEntry> entry2 = iterator.next();
                if (!MapleCharacter.handleSkill(a3, entry2.getKey().getId(), a3.ob) || entry2.getKey() == null) continue block0;
                if (!GameConstants.isApplicableSkill(entry2.getKey().getId()) && !GameConstants.isApplicableSkill_(entry2.getKey().getId())) {
                    iterator2 = iterator;
                    continue;
                }
                if (entry2.getValue().skillevel == 0 && entry2.getValue().masterlevel == 0) {
                    if (!a3.sB.containsKey(entry2.getKey())) continue block0;
                    Map.Entry<ISkill, SkillEntry> entry3 = entry2;
                    entry = entry3;
                    a3.sB.remove(entry3.getKey());
                    a3.zA = true;
                } else {
                    a3.sB.put(entry2.getKey(), entry2.getValue());
                    a3.zA = true;
                    entry = entry2;
                }
                if (SkillConstants.isRecoveryIncSkill(entry.getKey().getId())) {
                    bl = true;
                    continue block0;
                }
                if (!GameConstants.isElementAmpSkill(entry2.getKey().getId())) continue block0;
                bl2 = true;
                continue block0;
            }
            break;
        }
        a3.Cb.sendPacket(MaplePacketCreator.updateSkills(a2));
        if (bl) {
            a3.GB.relocHeal();
            return;
        }
        if (bl2) {
            a3.GB.recalcLocalStats();
        }
    }

    public /* synthetic */ void checkSpecialMobVac(int a2) {
        MapleCharacter a3;
        if (!MapConstants.isVonleonMap(a3.getMapId())) {
            int n2 = Math.abs(a3.Xa - a2);
            int n3 = 150;
            if (GameSetConstants.MOB_VAC_STAGE < 100) {
                double d2 = 100.0 / (double)GameSetConstants.MOB_VAC_STAGE;
                n3 = (int)((double)n3 * d2);
            }
            if (n2 < 150) {
                MapleCharacter mapleCharacter = a3;
                mapleCharacter.addMobVac2_Count();
                if (mapleCharacter.getMobVac2_Count() > 200) {
                    String string = "(\u5730\u5716: " + a3.getMapId() + " \u983b\u9053: " + a3.getClient().getChannel() + "\u9023\u7e8c\u89f8\u767c\u6b21\u6578:" + a3.getMobVac2_Count() + ")";
                    a3.Na = 0;
                    a3.Xa = a2;
                    a3.getCheatTracker().registerOffense(CheatingOffense.\u5438\u602a_\u65b0, string);
                    return;
                }
            } else {
                a3.Xa = a2;
                a3.Na = 0;
            }
        }
    }

    public /* synthetic */ void clearLinkMid() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.Ka.clear();
        mapleCharacter.cancelEffectFromBuffStat(MapleBuffStat.HOMING_BEACON);
        mapleCharacter.cancelEffectFromBuffStat(MapleBuffStat.ARCANE_AIM);
    }

    public /* synthetic */ void setPyramidSubway(Event_PyramidSubway a2) {
        a.Fb = a2;
    }

    public /* synthetic */ boolean isCygnus() {
        MapleCharacter a2;
        return a2.ob >= 1000 && a2.ob <= 1512;
    }

    public final /* synthetic */ void setFriendShipPoints(int a2, int a3, int a4, int a5, int a6) {
        MapleCharacter a7;
        MapleCharacter mapleCharacter = a7;
        mapleCharacter.X[0] = a2;
        mapleCharacter.X[1] = a3;
        mapleCharacter.X[2] = a4;
        mapleCharacter.X[3] = a5;
        mapleCharacter.X[4] = a6;
    }

    public /* synthetic */ int getFishGameHistoryScore() {
        MapleCharacter a2;
        return a2.Ea;
    }

    public /* synthetic */ int getReactorNow() {
        MapleCharacter a2;
        return a2.mc;
    }

    public /* synthetic */ BuddyList getBuddylist() {
        MapleCharacter a2;
        return a2.tB;
    }

    public /* synthetic */ MapleLieDetector getAntiMacro() {
        MapleCharacter a2;
        return a2.lA;
    }

    public /* synthetic */ int getFatigue() {
        MapleCharacter a2;
        return a2.Cc;
    }

    public /* synthetic */ void updateAnyWhereDoor() {
        if (GameSetConstants.MAPLE_VERSION >= 138) {
            MapleCharacter a2;
            a2.getClient().sendPacket(MaplePacketCreator.showAnyWhereDoor(a2.getAnyWhereDoor(), a2.getAnyWhereDoorCash()));
        }
    }

    public /* synthetic */ void addMP(int a2) {
        MapleCharacter a3;
        int n2 = a3.getAutoMP();
        int n3 = Math.abs(a2);
        if (!(n2 == 0 || !MapleItemInformationProvider.getInstance().itemExists(n2) || (GameSetConstants.isClickGameMap(a3.getMap().getId()) || a3.getMap().isClickGameMap() || FieldLimitType.PotionUse.check(a3.getMap().getFieldLimit())) && a3.getMapId() != 610030600 && a3.getMapId() != 105100300 || n3 < a3.getMp() && a3.getMp() * 100 / a3.getMaxMp() >= a3.getAutoMPPercent() || !a3.haveItem(n2) || !MapleItemInformationProvider.getInstance().getItemEffect(n2).applyTo(a3) || GameSetConstants.isNoConsumeItem(n2))) {
            MapleInventoryManipulator.removeById(a3.Cb, GameConstants.getInventoryType(n2), n2, true ? 1 : 0, true, false);
        }
        MapleCharacter mapleCharacter = a3;
        if (mapleCharacter.GB.setMp(mapleCharacter.GB.getMp() + a2) || JobConstants.is\u60e1\u9b54\u6bba\u624b(a3.getJob())) {
            a3.updateSingleStat(MapleStat.MP, a3.GB.getMp());
        }
    }

    public /* synthetic */ void setInnerSkillChanged() {
        a.UA = true;
    }

    public final /* synthetic */ long getTransferTime() {
        MapleCharacter a2;
        return a2.W;
    }

    public /* synthetic */ long getUseCube() {
        MapleCharacter a2;
        return a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u4f71\u7504\u5949\u5e57\u65b7\u5866"), false);
    }

    public /* synthetic */ MapleShop getShop() {
        MapleCharacter a2;
        return a2.pA;
    }

    public /* synthetic */ int getArcanceDamage() {
        MapleCharacter a2;
        return (int)a2.getSkillTemp(2120000);
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    private /* synthetic */ int ALLATORIxDEMO(String a) {
        var2_2 = -1;
        try {
            var3_3 = DBConPool.getInstance().getDataSource().getConnection();
            var4_5 = var3_3.prepareStatement(FixDropNullItem.ALLATORIxDEMO("e\u0003z\u0003u\u0012\u0016l\u0016\u0000d\t{fV%^4i,E)X&\u0016\u0011~\u0003d\u0003\u0016&\\5Y(Vfz\u000f}\u0003\u0016y"));
            var4_5.setString(1, "%" + a + "%");
            var5_7 = var4_5.executeQuery();
            var6_9 = new LinkedList<MapleRanking.SpeedRank>();
            while (var5_7.next()) {
                var7_10 = MapleCharacter.getCharacterById(var5_7.getInt(MapleNodes.ALLATORIxDEMO("gH")));
                if (var7_10 == null) continue;
                var8_12 = var5_7.getString(FixDropNullItem.ALLATORIxDEMO("\\5Y("));
                var9_14 = JsonMapConverter.JsonToMap(var8_12);
                v0 = var7_10;
                var10_15 = v0.getName();
                if (v0.isGM() || !var9_14.containsKey(a)) continue;
                v1 = a;
                var11_16 = new MapleRanking.SpeedRank((String)var10_15, v1, (Integer)var9_14.get(v1));
                var6_9.add(var11_16);
            }
            Collections.sort(var6_9, new Comparator<MapleRanking.SpeedRank>(){

                @Override
                public /* synthetic */ int compare(MapleRanking.SpeedRank a2, MapleRanking.SpeedRank a32) {
                    int n2;
                    int a32 = a2.getTime();
                    if (a32 < (n2 = a32.getTime())) {
                        return 1;
                    }
                    if (a32 == n2) {
                        return 0;
                    }
                    return -1;
                }
                {
                    7 a3;
                }
            });
            var4_5.close();
            var5_7.close();
            var7_11 = false;
            var8_13 = 0;
            var9_14 = var6_9.iterator();
            while (var9_14.hasNext()) {
                ++var8_13;
                var10_15 = (MapleRanking.SpeedRank)var9_14.next();
                if (!var10_15.getName().equals(a.getName())) continue;
                var7_11 = true;
                var2_2 = var8_13;
                v2 = var7_11;
                ** GOTO lbl39
            }
            try {
                v2 = var7_11;
lbl39:
                // 2 sources

                if (!v2) {
                    var2_2 = -1;
                }
                if (var3_3 == null) return var2_2;
            }
            catch (Throwable var4_6) {
                if (var3_3 != null) {
                    try {
                        var3_3.close();
                        v3 = var4_6;
                        throw v3;
                    }
                    catch (Throwable var5_8) {
                        var4_6.addSuppressed(var5_8);
                    }
                }
                v3 = var4_6;
                throw v3;
            }
            var3_3.close();
            return var2_2;
        }
        catch (SQLException var3_4) {
            var3_4.printStackTrace();
        }
        return var2_2;
    }

    public /* synthetic */ boolean doReborn2(int a2) {
        MapleCharacter mapleCharacter;
        MapleCharacter mapleCharacter2;
        MapleCharacter a3;
        if (a3.getInventory(MapleInventoryType.EQUIP).getNumFreeSlot() < 33) {
            return false;
        }
        MapleBuffStat[] arrmapleBuffStat = new MapleBuffStat[1];
        arrmapleBuffStat[0] = MapleBuffStat.MAXHP;
        a3.cancelBuffStats(arrmapleBuffStat);
        MapleBuffStat[] arrmapleBuffStat2 = new MapleBuffStat[1];
        arrmapleBuffStat2[0] = MapleBuffStat.MAXMP;
        a3.cancelBuffStats(arrmapleBuffStat2);
        MapleCharacter mapleCharacter3 = a3;
        MapleCharacter mapleCharacter4 = a3;
        a3.unequips();
        mapleCharacter4.dispel();
        int n2 = 0;
        mapleCharacter3.setLevel((short)10);
        mapleCharacter4.setExp(0);
        mapleCharacter3.setHp(30000);
        mapleCharacter3.setMp(30000);
        mapleCharacter3.setMaxHp(30000);
        mapleCharacter3.setMaxMp(30000);
        mapleCharacter3.setStr(5);
        mapleCharacter3.setDex(5);
        mapleCharacter3.setInt(5);
        mapleCharacter3.setLuk(5);
        mapleCharacter3.setRemainingAp((short)0);
        mapleCharacter3.setRemainingSp(0);
        if (a2 == 2) {
            MapleCharacter mapleCharacter5 = a3;
            mapleCharacter2 = mapleCharacter5;
            MapleCharacter mapleCharacter6 = a3;
            MapleCharacter mapleCharacter7 = a3;
            a3.setQuestAdd(MapleQuest.getInstance(20022), (byte)1, "1");
            mapleCharacter7.setQuestAdd(MapleQuest.getInstance(20010), (byte)1, null);
            mapleCharacter7.setQuestAdd(MapleQuest.getInstance(20000), (byte)1, null);
            mapleCharacter6.setQuestAdd(MapleQuest.getInstance(20015), (byte)1, null);
            mapleCharacter5.setQuestAdd(MapleQuest.getInstance(20020), (byte)1, null);
            mapleCharacter6.changeJob(MapleJob.\u8cb4\u65cf.getId());
        } else if (a2 == 3) {
            MapleCharacter mapleCharacter8 = a3;
            mapleCharacter2 = mapleCharacter8;
            mapleCharacter8.changeJob(MapleJob.\u50b3\u8aaa.getId());
        } else if (a2 == 4) {
            MapleCharacter mapleCharacter9 = a3;
            mapleCharacter2 = mapleCharacter9;
            mapleCharacter9.changeJob(MapleJob.\u9f8d\u9b54\u5c0e\u58eb0\u8f49.getId());
        } else {
            MapleCharacter mapleCharacter10 = a3;
            mapleCharacter2 = mapleCharacter10;
            mapleCharacter10.changeJob(MapleJob.\u521d\u5fc3\u8005.getId());
        }
        mapleCharacter2.updateSingleStat(MapleStat.LEVEL, 1);
        MapleCharacter mapleCharacter11 = a3;
        mapleCharacter11.updateSingleStat(MapleStat.EXP, 0);
        mapleCharacter11.updateSingleStat(MapleStat.HP, 30000);
        mapleCharacter11.updateSingleStat(MapleStat.MP, 30000);
        mapleCharacter11.updateSingleStat(MapleStat.MAXHP, 30000);
        mapleCharacter11.updateSingleStat(MapleStat.MAXMP, 30000);
        mapleCharacter11.updateSingleStat(MapleStat.STR, 5);
        mapleCharacter11.updateSingleStat(MapleStat.DEX, 5);
        mapleCharacter11.updateSingleStat(MapleStat.INT, 5);
        mapleCharacter11.updateSingleStat(MapleStat.LUK, 5);
        mapleCharacter11.updateSingleStat(MapleStat.AVAILABLEAP, n2);
        mapleCharacter11.updateSingleStat(MapleStat.AVAILABLESP, 0);
        mapleCharacter11.clearSkills();
        PlayerHandler.ResetSkillMacro(mapleCharacter11);
        try {
            MapleCharacter mapleCharacter12 = a3;
            mapleCharacter12.Pd.DeleteKeys(mapleCharacter12.XC);
            mapleCharacter = a3;
        }
        catch (SQLException sQLException) {
            System.err.println("Error doReborn" + sQLException);
            FileoutputUtil.outError(FixDropNullItem.ALLATORIxDEMO("*Y!EiR)d#T)D(\u00182N2"), sQLException);
            mapleCharacter = a3;
        }
        mapleCharacter.Pd.clearKeyMap();
        MapleCharacter mapleCharacter13 = a3;
        MapleCharacter mapleCharacter14 = a3;
        a3.addReborn();
        mapleCharacter14.gainItem(4032657);
        mapleCharacter13.gainItem(2041208);
        long l2 = mapleCharacter14.getReborn();
        mapleCharacter13.Cb.sendPacket(MaplePacketCreator.getKeymap(a3.getKeyLayout()));
        mapleCharacter13.Cb.sendPacket(MaplePacketCreator.serverNotice("[\u8f49\u751f]: \u606d\u8cc0 " + a3.getName() + " \u8f49\u751f\u7b2c " + l2 + " \u6b21\u6210\u529f!"));
        if (a2 == 2) {
            MapleCharacter mapleCharacter15 = a3;
            mapleCharacter15.updateSingleStat(MapleStat.JOB, 1000);
            mapleCharacter15.MapReload(mapleCharacter15.Qc);
        } else if (a2 == 3) {
            MapleCharacter mapleCharacter16 = a3;
            mapleCharacter16.updateSingleStat(MapleStat.JOB, 2000);
            mapleCharacter16.MapReload(mapleCharacter16.Qc);
        } else {
            MapleCharacter mapleCharacter17 = a3;
            mapleCharacter17.updateSingleStat(MapleStat.JOB, 0);
            mapleCharacter17.MapReload(mapleCharacter17.Qc);
        }
        return true;
    }

    public /* synthetic */ int currentBattleshipHP() {
        MapleCharacter a2;
        return a2.FB;
    }

    public /* synthetic */ boolean isTestingDPM() {
        MapleCharacter a2;
        return a2.Ra;
    }

    public /* synthetic */ void changeElfEar() {
        MapleCharacter mapleCharacter;
        MapleCharacter a2;
        MapleCharacter mapleCharacter2 = a2;
        mapleCharacter2.updateInfoQuest(7784, mapleCharacter2.containsInfoQuest(7784, MapleNodes.ALLATORIxDEMO("_y\u0011")) ? (a2.containsInfoQuest(7784, FixDropNullItem.ALLATORIxDEMO("E1\u000bw")) ? MapleNodes.ALLATORIxDEMO("}[3\u001c") : FixDropNullItem.ALLATORIxDEMO("E1\u000bw")) : MapleNodes.ALLATORIxDEMO("}[3\u001d"));
        MapleCharacter mapleCharacter3 = a2;
        MapleCharacter mapleCharacter4 = a2;
        if (mapleCharacter3.containsInfoQuest(7784, MapleJob.is\u7cbe\u9748\u904a\u4fe0(mapleCharacter3.getJob()) ? FixDropNullItem.ALLATORIxDEMO("E1\u000bv") : MapleNodes.ALLATORIxDEMO("}[3\u001d"))) {
            mapleCharacter4.getClient().sendPacket(MaplePacketCreator.showOwnWeirdEffect(FixDropNullItem.ALLATORIxDEMO("\u0003P S%Bit'E/U\u0003P \u0018/[!\u0019\fY$u.W(Q#R\u0003Z "), 5155000, 0));
            MapleCharacter mapleCharacter5 = a2;
            mapleCharacter = mapleCharacter5;
            a2.getMap().broadcastMessage(mapleCharacter5, MaplePacketCreator.showWeirdEffect(mapleCharacter5.getId(), MapleNodes.ALLATORIxDEMO("ihJkOz\u0003LM}EmihJ EcK!faNMDoBiIjibJ"), 5155000, 0), false);
        } else {
            mapleCharacter4.getClient().sendPacket(MaplePacketCreator.showOwnWeirdEffect(FixDropNullItem.ALLATORIxDEMO("s P#U2\u0019\u0004W5_%s Ph_+Qi|)T\u0005^'X!S\""), 5155000, 0));
            MapleCharacter mapleCharacter6 = a2;
            mapleCharacter = mapleCharacter6;
            a2.getMap().broadcastMessage(mapleCharacter6, MaplePacketCreator.showWeirdEffect(mapleCharacter6.getId(), MapleNodes.ALLATORIxDEMO("KJhImX!no_gOKJh\u0002gAi\u0003DClofM`KkH"), 5155000, 0), false);
        }
        mapleCharacter.equipChanged();
    }

    public /* synthetic */ void UpdateAllStats() {
        MapleCharacter a2;
        ArrayList<Pair<MapleStat, Integer>> arrayList = new ArrayList<Pair<MapleStat, Integer>>();
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.MAXHP, a2.getMaxHp()));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.MAXMP, a2.getMaxMp()));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.HP, a2.getHp()));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.MP, a2.getMp()));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.STR, a2.getStr()));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.DEX, a2.getDex()));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.INT, a2.getInt()));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.LUK, a2.getLuk()));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.AVAILABLEAP, Integer.valueOf(a2.getRemainingAp())));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.AVAILABLESP, a2.getRemainingSp()));
        a2.Cb.sendPacket(MaplePacketCreator.updatePlayerStats(arrayList, a2));
    }

    public /* synthetic */ boolean allowedToTarget(MapleCharacter a2) {
        MapleCharacter a3;
        return a2 != null && (!a2.isHidden() || a3.getGMLevel() >= a2.getGMLevel());
    }

    public /* synthetic */ void dropNPC(int a2, String a3) {
        MapleCharacter a4;
        a4.Cb.sendPacket(MaplePacketCreator.getNPCTalk(a2, (byte)0, a3, MapleNodes.ALLATORIxDEMO("\u001c>\f>\u001c"), (byte)0));
    }

    public /* synthetic */ void kill() {
        MapleCharacter a2;
        a2.getStat().setHp(0);
        a2.getStat().setMp(0);
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.updateSingleStat(MapleStat.HP, 0);
        mapleCharacter.updateSingleStat(MapleStat.MP, 0);
    }

    public /* synthetic */ void saveCharacterSetString(Connection a22) {
        MapleCharacter a3;
        if (a3.DA && GameSetConstants.SAVE_CHARACTERSET) {
            PreparedStatement preparedStatement = null;
            boolean bl = true;
            StringBuilder stringBuilder = new StringBuilder();
            if (a3.ga.size() > 0 || a3.Ca.size() > 0) {
                stringBuilder.append(MapleNodes.ALLATORIxDEMO("e@\u007fK~Z\fGbZc.LmDo^oOzI|_QF}C`L.\u0004nEjL\"\fnOfM|MmXk^gHn\u0000.LhY`OzEaBn\u0000.Ld_aBn\u0005.zO`[i]\u0004"));
                if (a3.ga.size() > 0) {
                    bl = false;
                    stringBuilder.append(FixDropNullItem.ALLATORIxDEMO("r\u0003p\u0007c\nbj"));
                    stringBuilder.append(a3.XC).append(MapleNodes.ALLATORIxDEMO("\u0000"));
                    stringBuilder.append(FixDropNullItem.ALLATORIxDEMO("\u0011\u0005^'D'U2S4e#Ba")).append(MapleNodes.ALLATORIxDEMO("\"\u000b"));
                    stringBuilder.append(JsonMapConverter.MapToJsonLong(a3.ga)).append(FixDropNullItem.ALLATORIxDEMO("\u0011o"));
                }
                if (a3.Ca.size() > 0) {
                    if (!bl) {
                        stringBuilder.append(MapleNodes.ALLATORIxDEMO("\"\u0004"));
                    }
                    stringBuilder.append(FixDropNullItem.ALLATORIxDEMO("r\u0003p\u0007c\nbj"));
                    stringBuilder.append(a3.nC).append(MapleNodes.ALLATORIxDEMO("\u0000"));
                    stringBuilder.append(FixDropNullItem.ALLATORIxDEMO("\u0011\u0005^'D'U2S4e#B\u0019w%Ua")).append(MapleNodes.ALLATORIxDEMO("\"\u000b"));
                    stringBuilder.append(JsonMapConverter.MapToJsonLong(a3.Ca)).append(FixDropNullItem.ALLATORIxDEMO("\u0011o"));
                }
                try {
                    PreparedStatement preparedStatement2 = preparedStatement = a22.prepareStatement(MapleNodes.ALLATORIxDEMO("JiBiZi.j\\cC\fmDo^oOzI|_QF}C`\fYdK~K\f&OfM|MmXk^gH.\u0011.\u0013.m@h.J{BmXgC`\f3\f)ofM|MmXk^]Iz\u000b'\fA~.\u0004mDo^oOzI|Ej\f3\f1\fObJ\fhY`OzEaB.\u0011.\u000bMDo^oOzI|\u007fkXQmmO)\u0005"));
                    preparedStatement2.setInt(1, a3.XC);
                    preparedStatement2.setInt(2, a3.nC);
                    preparedStatement2.execute();
                    preparedStatement.close();
                    if (!stringBuilder.toString().isEmpty()) {
                        preparedStatement = a22.prepareStatement(stringBuilder.toString());
                        preparedStatement.execute();
                        preparedStatement.close();
                        return;
                    }
                }
                catch (SQLException a22) {
                    FilePrinter.printError(FixDropNullItem.ALLATORIxDEMO("E'@#u.W4W%B#D\u0015S2\u00182N2"), a22, MapleNodes.ALLATORIxDEMO("U_oZkofM|MmXk^]Izq"));
                }
            }
        }
    }

    public /* synthetic */ boolean isMapObjectVisible(MapleMapObject a2) {
        MapleCharacter a3;
        a3.AA.readLock().lock();
        try {
            boolean bl = !a3.Hc && a3.MB.contains(a2);
            return bl;
        }
        finally {
            a3.AA.readLock().unlock();
        }
    }

    public /* synthetic */ void setSpeedTime(String a2, int a3) {
        MapleCharacter a4;
        a4.setCharacterSet(a2, a3, false);
    }

    public /* synthetic */ int getRegRockSize() {
        int n2;
        int n3 = 0;
        int n4 = n2 = 0;
        while (n4 < 5) {
            MapleCharacter a2;
            if (a2.ZC[n2] != 999999999) {
                ++n3;
            }
            n4 = ++n2;
        }
        return n3;
    }

    public final /* synthetic */ void giveSilentDebuff(List<MapleDiseaseValueHolder> a2) {
        if (a2 != null) {
            Object object = a2 = a2.iterator();
            while (object.hasNext()) {
                MapleCharacter a3;
                MapleDiseaseValueHolder mapleDiseaseValueHolder = (MapleDiseaseValueHolder)a2.next();
                object = a2;
                a3.qc.put(mapleDiseaseValueHolder.disease, mapleDiseaseValueHolder);
            }
        }
    }

    public /* synthetic */ void checkCopyItems(IItem a2) {
        MapleCharacter a3;
        Object object = new ArrayList();
        object = new LinkedList<MapleInventoryType>();
        object.add(MapleInventoryType.EQUIP);
        object.add(MapleInventoryType.EQUIPPED);
        LinkedList<Pair<MapleInventoryType, IItem>> linkedList = new LinkedList<Pair<MapleInventoryType, IItem>>();
        object = object.iterator();
        while (object.hasNext()) {
            MapleInventoryType mapleInventoryType = (MapleInventoryType)((Object)object.next());
            for (IItem object2 : a3.getInventory(mapleInventoryType).list()) {
                int pair = object2.getItemId();
                long iItem = object2.getInventoryitemId();
                long l2 = object2.getEquipOnlyId();
                if (l2 <= 0L || a2.getEquipOnlyId() <= 0L || l2 != a2.getEquipOnlyId()) continue;
                linkedList.add(new Pair<MapleInventoryType, IItem>(mapleInventoryType, object2));
            }
        }
        int n3 = 0;
        boolean bl = false;
        ArrayList arrayList = new ArrayList();
        for (Pair pair : linkedList) {
            IItem iItem = (IItem)pair.getRight();
            MapleInventoryType mapleInventoryType = (MapleInventoryType)((Object)pair.getLeft());
            if (arrayList.contains(iItem.getEquipOnlyId())) continue;
            MapleInventoryManipulator.removeFromSlot(a3.Cb, mapleInventoryType, iItem.getPosition(), iItem.getQuantity(), true, false);
            arrayList.add(iItem.getEquipOnlyId());
            FileoutputUtil.logToFile(MapleNodes.ALLATORIxDEMO("@aK}\u0003FMmG!\u892b\u88f3\u0003\u88d3\u50b5\u8909\u88d1Q\u8226\u6aac\u6e00 XvX"), FileoutputUtil.NowTime() + "checkCopyItems_II \u89d2\u8272\u540d\u7a31:" + a3.cB + "\u3000\u7269\u54c1: " + iItem.getItemName() + " \u4ee3\u78bc: " + iItem.getItemId() + " \u4f4d\u7f6e:" + mapleInventoryType.name() + " equiponlyID:" + iItem.getEquipOnlyId());
            ++n3;
            World.Broadcast.broadcastGMMessage(MaplePacketCreator.getItemNotice("\u88dd\u5099\u8907\u88fd_\u820a\u6aa2\u6e2c \u89d2\u8272\u540d\u7a31:" + a3.cB + "\u3000\u7269\u54c1: " + iItem.getItemName() + " equiponlyID:" + iItem.getEquipOnlyId()));
            bl = true;
        }
        if (bl && GameSetConstants.COPYITEM_BAN) {
            AutobanManager.getInstance().autoban(a3.Cb, FixDropNullItem.ALLATORIxDEMO("\u8941\u88cb\u889b\u50afh"));
        }
    }

    public /* synthetic */ void removeAll(int a2, boolean a3) {
        MapleCharacter a4;
        a4.removeAll(a2, false, false);
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ void autoJob_\u82f1\u96c4() {
        MapleCharacter a2;
        if (JobConstants.is\u72c2\u72fc\u52c7\u58eb(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter1stJobLevel(a2.ob)) {
                a2.changeJob(2100);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                a2.changeJob(2110);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(2111);
                return;
            }
            if (a2.getLevel() != GameConstants.getCharacter4thJobLevel(a2.ob)) return;
            a2.changeJob(2112);
            return;
        } else {
            if (JobConstants.is\u9f8d\u9b54\u5c0e\u58eb(a2.ob)) {
                switch (a2.getLevel()) {
                    case 10: {
                        a2.changeJob(2200);
                        return;
                    }
                    case 20: {
                        MapleCharacter mapleCharacter = a2;
                        mapleCharacter.changeJob(mapleCharacter.ob + 10);
                        return;
                    }
                    case 30: 
                    case 40: 
                    case 50: 
                    case 60: 
                    case 80: 
                    case 100: 
                    case 120: 
                    case 160: {
                        MapleCharacter mapleCharacter = a2;
                        mapleCharacter.changeJob(mapleCharacter.ob + 1);
                        return;
                    }
                }
                return;
            }
            if (JobConstants.is\u7cbe\u9748\u904a\u4fe0(a2.ob)) {
                if (a2.getLevel() == GameConstants.getCharacter1stJobLevel(a2.ob)) {
                    a2.changeJob(2300);
                    return;
                }
                if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                    a2.changeJob(2310);
                    return;
                }
                if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                    a2.changeJob(2311);
                    return;
                }
                if (a2.getLevel() != GameConstants.getCharacter4thJobLevel(a2.ob)) return;
                a2.changeJob(2312);
                return;
            } else if (JobConstants.is\u5e7b\u5f71\u4fe0\u76dc(a2.ob)) {
                if (a2.getLevel() == GameConstants.getCharacter1stJobLevel(a2.ob)) {
                    a2.changeJob(2400);
                    return;
                }
                if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                    a2.changeJob(2410);
                    return;
                }
                if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                    a2.changeJob(2411);
                    return;
                }
                if (a2.getLevel() != GameConstants.getCharacter4thJobLevel(a2.ob)) return;
                a2.changeJob(2412);
                return;
            } else if (JobConstants.is\u96b1\u6708(a2.ob)) {
                if (a2.getLevel() == GameConstants.getCharacter1stJobLevel(a2.ob)) {
                    a2.changeJob(2500);
                    return;
                }
                if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                    a2.changeJob(2510);
                    return;
                }
                if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                    a2.changeJob(2511);
                    return;
                }
                if (a2.getLevel() != GameConstants.getCharacter4thJobLevel(a2.ob)) return;
                a2.changeJob(2512);
                return;
            } else {
                if (!JobConstants.is\u591c\u5149(a2.ob)) return;
                if (a2.getLevel() == GameConstants.getCharacter1stJobLevel(a2.ob)) {
                    a2.changeJob(2700);
                    return;
                }
                if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                    a2.changeJob(2710);
                    return;
                }
                if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                    a2.changeJob(2711);
                    return;
                }
                if (a2.getLevel() != GameConstants.getCharacter4thJobLevel(a2.ob)) return;
                a2.changeJob(2712);
            }
        }
    }

    public /* synthetic */ List<MapleBuffStat> getBuffStats(MapleStatEffect a2, long a3) {
        MapleCharacter a4;
        ArrayList<MapleBuffStat> arrayList = new ArrayList<MapleBuffStat>();
        for (Map.Entry entry : new EnumMap<MapleBuffStat, MapleBuffStatValueHolder>(a4.kb).entrySet()) {
            MapleBuffStatValueHolder mapleBuffStatValueHolder = (MapleBuffStatValueHolder)entry.getValue();
            if (!mapleBuffStatValueHolder.effect.sameSource(a2) || a3 != -1L && a3 != mapleBuffStatValueHolder.startTime) continue;
            arrayList.add((MapleBuffStat)entry.getKey());
        }
        return arrayList;
    }

    public final /* synthetic */ int[] getFriendShipPoints() {
        MapleCharacter a2;
        return a2.X;
    }

    public final /* synthetic */ void setQuestInfo(int a22, String a3) {
        MapleCharacter a4;
        MapleCharacter mapleCharacter = a4;
        MapleQuestStatus a22 = mapleCharacter.getQuestNAdd(MapleQuest.getInstance(a22));
        a22.setCustomData(a3);
        mapleCharacter.zb = true;
        mapleCharacter.getClient().sendPacket(MaplePacketCreator.updateQuest(a22));
    }

    public /* synthetic */ void setAchievementFinished(int a2) {
        MapleCharacter a3;
        if (!a3.lc.contains(a2)) {
            a3.lc.add(a2);
            a3.lC = true;
        }
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ int getEventCount(String a) {
        block11: {
            block10: {
                var2_3 = DBConPool.getInstance().getDataSource().getConnection();
                var3_5 = 0;
                v0 = var4_7 = var2_3.prepareStatement(MapleNodes.ALLATORIxDEMO("}IbImX.OaA~@kXkHzEcI}\fh^aA.IxI`XQOaY`X.[fI|I.OfM|MmXk^gH.\u0011.\u0013.M`H.IxI`X`McI.\u0011.\u0013"));
                v0.setInt(1, a.XC);
                v0.setString(2, (String)a);
                a = v0.executeQuery();
                if (!a.next()) break block10;
                v1 = a;
                v2 = v1;
                var3_5 = v1.getInt(FixDropNullItem.ALLATORIxDEMO("U)[6Z#B#R2_+S5"));
                ** GOTO lbl19
            }
            var3_5 = 0;
            v2 = a;
lbl19:
            // 2 sources

            v2.close();
            var4_7.close();
            a = var3_5;
            if (var2_3 == null) break block11;
            {
                catch (Throwable var3_6) {
                    try {
                        block12: {
                            if (var2_3 != null) {
                                try {
                                    var2_3.close();
                                    v3 = var3_6;
                                    break block12;
                                }
                                catch (Throwable var4_8) {
                                    var3_6.addSuppressed(var4_8);
                                }
                            }
                            v3 = var3_6;
                        }
                        throw v3;
                    }
                    catch (Exception var2_4) {
                        return 0;
                    }
                }
            }
            var2_3.close();
        }
        return a;
    }

    public /* synthetic */ void setPartyQuestPoint(int a2, long a3) {
        MapleCharacter a4;
        if (a4.getParty() == null) {
            a4.setQuestPoint(a2, a3);
            return;
        }
        Iterator<MaplePartyCharacter> iterator = a4.getParty().getOnlineMembers().iterator();
        while (iterator.hasNext()) {
            MapleCharacter mapleCharacter = iterator.next().getChr();
            if (mapleCharacter == null) continue;
            mapleCharacter.setQuestPoint(a2, a3);
        }
    }

    public /* synthetic */ int getday() {
        MapleCharacter a2;
        return a2.QA;
    }

    public /* synthetic */ void setBeansLight(int a2) {
        a.Nd = a2;
    }

    public /* synthetic */ void setExp(int a2) {
        a.RC = a2;
    }

    public /* synthetic */ byte getSecondGender() {
        MapleCharacter a2;
        if (JobConstants.is\u795e\u4e4b\u5b50(a2.getJob())) {
            return 1;
        }
        return a2.WA;
    }

    public /* synthetic */ String SelectOffline() {
        Iterator<Map.Entry<Integer, Pair<Integer, Integer>>> iterator;
        MapleCharacter a2;
        Map<Integer, Pair<Integer, Integer>> map = a2.getOfflineItems();
        if (map.isEmpty()) {
            map = null;
            return null;
        }
        StringBuffer stringBuffer = new StringBuffer();
        Iterator<Map.Entry<Integer, Pair<Integer, Integer>>> iterator2 = iterator = map.entrySet().iterator();
        while (iterator2.hasNext()) {
            Map.Entry<Integer, Pair<Integer, Integer>> entry = iterator.next();
            stringBuffer.append("\r\n#L" + entry.getKey() + "##i" + entry.getValue().getLeft() + "##z" + entry.getValue().getLeft() + "# " + entry.getValue().getRight() + " \u500b");
            iterator2 = iterator;
        }
        map = null;
        return stringBuffer.toString();
    }

    public /* synthetic */ void addSavedFaces(int a2, int a3) {
        a.fb[a2] = a3;
    }

    public /* synthetic */ void addKillHp() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u6024\u7245\u64c4\u6b96\u63d5\u886c"), mapleCharacter.getKillHp() + 1L, false);
    }

    public /* synthetic */ void setMaxMp_Force(int a2) {
        MapleCharacter a3;
        if (World.Find.findChannel(a3.cB) <= 0) {
            a3.UpdateCharacter(MapleNodes.ALLATORIxDEMO("AoTc\\"), a2);
            return;
        }
        a3.getStat().setMaxMp((short)a2);
    }

    public /* synthetic */ boolean isLuminousBalance() {
        MapleCharacter a2;
        return a2.D == 20040219 || a2.D == 20040220;
    }

    public /* synthetic */ boolean isFollowOn() {
        MapleCharacter a2;
        return a2.Pc;
    }

    public /* synthetic */ int getOfflineAcash(MapleCharacter a2) {
        MapleCharacter a3;
        return a3.getAcash(a2);
    }

    public /* synthetic */ boolean isMage() {
        MapleCharacter a2;
        return a2.ob >= 200 && a2.ob <= 232 || a2.ob >= 1200 && a2.ob <= 1212;
    }

    public /* synthetic */ int[] getHairAlbums() {
        MapleCharacter a2;
        return a2.getHairAlbum().stream().mapToInt(Integer::intValue).toArray();
    }

    public /* synthetic */ List<MapleSummon> getSummons() {
        MapleCharacter a2;
        return a2.Hb;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ void giveCoolDowns(List<MapleCoolDownValueHolder> a22, boolean a3) {
        MapleCharacter a4;
        Object object;
        Object object2;
        if (a22 != null) {
            Object object3 = object2 = a22.iterator();
            while (object3.hasNext()) {
                object = object2.next();
                object3 = object2;
                a4.kA.put(((MapleCoolDownValueHolder)object).skillId, (MapleCoolDownValueHolder)object);
            }
        } else {
            try {
                Object object4;
                block20: {
                    object = DBConPool.getInstance().getDataSource().getConnection();
                    try {
                        block19: {
                            PreparedStatement preparedStatement = object.prepareStatement(MapleNodes.ALLATORIxDEMO("]iBiMx.\u007feEb@Gh\"\u007fzM|XZEcI\"@kBiXf\fH~Aa._eEb@}smCa@jCyB}\fYdK~K\fmDo^gH.\u0011.\u0013"));
                            try {
                                PreparedStatement preparedStatement2 = preparedStatement;
                                preparedStatement2.setInt(1, a4.getId());
                                Object object5 = object2 = preparedStatement2.executeQuery();
                                while (object5.next()) {
                                    if (object2.getLong(FixDropNullItem.ALLATORIxDEMO("Z#X!B.")) + object2.getLong(MapleNodes.ALLATORIxDEMO("\u007fzM|XZEcI")) - System.currentTimeMillis() <= 0L) {
                                        object5 = object2;
                                        continue;
                                    }
                                    a4.giveCoolDowns(object2.getInt(FixDropNullItem.ALLATORIxDEMO("\u0015]/Z*\u007f\u0002")), object2.getLong(MapleNodes.ALLATORIxDEMO("\u007fzM|XZEcI")), object2.getLong(FixDropNullItem.ALLATORIxDEMO("Z#X!B.")));
                                    object5 = object2;
                                }
                                object2.close();
                                a4.D((Connection)object, MapleNodes.ALLATORIxDEMO("hK`KxK\fH~Aa._eEb@}smCa@jCyB}\fYdK~K\fmDo^gH.\u0011.\u0013"));
                                if (preparedStatement == null) break block19;
                                object4 = object;
                            }
                            catch (Throwable throwable) {
                                Throwable throwable2;
                                if (preparedStatement != null) {
                                    try {
                                        preparedStatement.close();
                                        throwable2 = throwable;
                                        throw throwable2;
                                    }
                                    catch (Throwable a22) {
                                        throwable.addSuppressed(a22);
                                    }
                                }
                                throwable2 = throwable;
                                throw throwable2;
                            }
                            preparedStatement.close();
                            break block20;
                        }
                        object4 = object;
                    }
                    catch (Throwable throwable) {
                        Throwable throwable3;
                        if (object != null) {
                            try {
                                object.close();
                                throwable3 = throwable;
                                throw throwable3;
                            }
                            catch (Throwable throwable4) {
                                throwable.addSuppressed(throwable4);
                            }
                        }
                        throwable3 = throwable;
                        throw throwable3;
                    }
                }
                if (object4 != null) {
                    object.close();
                }
            }
            catch (SQLException sQLException) {
                FilePrinter.printError(FixDropNullItem.ALLATORIxDEMO("\u000bW6Z#u.W4U2S4\u00182N2"), sQLException, MapleNodes.ALLATORIxDEMO("i|^a^.[fEbI.^kX|ExE`K.OaCbHa[`\fh^aA.\u007f_`._zC|MiI"));
            }
        }
        if (!a3) return;
        if (a4.getCooldowns() == null) return;
        Object object6 = object2 = a4.getCooldowns().iterator();
        while (object6.hasNext()) {
            object = object2.next();
            object6 = object2;
            int n2 = (int)(((MapleCoolDownValueHolder)object).length - (System.currentTimeMillis() - ((MapleCoolDownValueHolder)object).startTime)) / 1000;
            a4.getClient().sendPacket(MaplePacketCreator.skillCooldown(((MapleCoolDownValueHolder)object).skillId, n2));
        }
    }

    public /* synthetic */ void setInt(int a2) {
        MapleCharacter a3;
        a3.GB.int_ = (short)a2;
        a3.GB.recalcLocalStats(false);
    }

    public /* synthetic */ void clearSavedLocation(SavedLocationType a2) {
        a.Gb[a2.getValue()] = -1;
        a.kc = true;
    }

    public final /* synthetic */ boolean isLeader() {
        MapleCharacter a2;
        if (a2.getParty() == null) {
            return false;
        }
        return a2.getParty().getLeader().getId() == a2.getId();
    }

    public /* synthetic */ long getLastDayAcc() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6746\u5fba\u5e75\u8669\u4e4c\u7dec\u65a3"), true);
    }

    public /* synthetic */ void clearSkillPosition() {
        MapleCharacter a2;
        a2.C.clear();
    }

    public /* synthetic */ void setNiuNiuOwe(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u59a8\u59d8\u6b16\u50f3"), a2, true);
    }

    public /* synthetic */ void enforceMaxHpMp() {
        MapleCharacter a2;
        ArrayList<Pair<MapleStat, Integer>> arrayList = new ArrayList<Pair<MapleStat, Integer>>(2);
        if (a2.GB.getMp() > a2.GB.getCurrentMaxMp()) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.GB.setMp(mapleCharacter.GB.getMp());
            boolean bl = arrayList.add(new Pair<MapleStat, Integer>(MapleStat.MP, a2.GB.getMp()));
        }
        if (a2.GB.getHp() > a2.GB.getCurrentMaxHp()) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.GB.setHp(mapleCharacter.GB.getHp());
            arrayList.add(new Pair<MapleStat, Integer>(MapleStat.HP, a2.GB.getHp()));
        }
        if (arrayList.size() > 0) {
            a2.Cb.sendPacket(MaplePacketCreator.updatePlayerStats(arrayList, a2));
        }
    }

    public /* synthetic */ long getUseMega() {
        MapleCharacter a2;
        return a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u4ec4\u65c9\u5eed\u6481\u4f71\u7504"), false);
    }

    private /* synthetic */ void ALLATORIxDEMO(Connection a2, String a3) throws SQLException {
        MapleCharacter a4;
        MapleCharacter.deleteWhereAcccountId(a2, a3, a4.nC);
    }

    public /* synthetic */ void setTouzhuType(int a2) {
        a.Kc = a2;
    }

    public /* synthetic */ Integer getBuffedValue(MapleBuffStat a2) {
        MapleCharacter a3;
        MapleBuffStatValueHolder mapleBuffStatValueHolder = a3.kb.get(a2);
        if (mapleBuffStatValueHolder == null) {
            for (SpecialBuffInfo specialBuffInfo : a3.p) {
                if (specialBuffInfo.getBuffStat() != a2) continue;
                return specialBuffInfo.getBuffStatValueHolder().value;
            }
        }
        if (mapleBuffStatValueHolder == null) {
            return null;
        }
        return mapleBuffStatValueHolder.value;
    }

    public /* synthetic */ void setRemainingSp(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.nc[GameConstants.getSkillBook((int)mapleCharacter.ob)] = a2;
    }

    public /* synthetic */ short getScrolledPosition() {
        MapleCharacter a2;
        return a2.jA;
    }

    public /* synthetic */ void setEarnMaplePoint(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u4efc\u65a3\u7344\u5fd1\u6965\u9e98"), a2, false);
    }

    public /* synthetic */ void peeEffects() {
        MapleCharacter a2;
        if (a2.getPee() >= 100) {
            boolean bl = a2.getStat().setHp(0);
            MapleCharacter mapleCharacter = a2;
            a2.getStat().setMp(0);
            a2.updateSingleStat(MapleStat.HP, 0);
            mapleCharacter.updateSingleStat(MapleStat.MP, 0);
            mapleCharacter.Cb.sendPacket(MaplePacketCreator.broadcastMessage(6, "[" + a2.Cb.getChannelServer().getServerName() + "\u7dca\u6025\u516c\u544a]: \u73a9\u5bb6 " + a2.getName() + " \u56e0\u70ba\u9577\u6642\u9593\u6c92\u53bb\u5c3f\u5c3f\u5c0e\u81f4\u8180\u80f1\u7206\u6389\u8eab\u4ea1."));
            MapleCharacter mapleCharacter2 = a2;
            MapleCharacter mapleCharacter3 = a2;
            mapleCharacter3.dropMessage(FixDropNullItem.ALLATORIxDEMO("\u4f26\u76b2\u81c6\u80c7\u5db4\u7230\u70fe\u001a\u5ebc\u8b46\u4f26\u5bac\u6604\u538d\u5c79\u5c098"));
            mapleCharacter3.gainMeso(-100, true);
            mapleCharacter2.dropMessage(MapleNodes.ALLATORIxDEMO("\u91a5\u7533\u501f\u5dde\u7d9d\u91e1\u5ef4\u4f4c\u768a\u81ac\u80ff\uff20\u82bf\u8c97\u91a5\u766e\u8cb5\u302c?\u001c>\f\u695d\u5e4f"));
            mapleCharacter2.dropMessage(FixDropNullItem.ALLATORIxDEMO("\u001d\u919d\u7559k|\u0016\u8a34\u5c09\u5c79\u76b2\u6604\u502f\u4e46\u5bac\u89c7\u538d\u5c79\u5c09\u6184\u55f8y"));
            mapleCharacter2.resetPee();
            return;
        }
        if (a2.getPee() >= 95) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.dropMessageAll("[\u8eab\u9ad4]: \u4e3b\u4eba\u6c42\u6c42\u4f60!!\u8180\u80f1\u771f\u7684\u5feb\u7206\u70b8\u4e86..\u5feb\u9ede\u53bb\u89e3\u653e\u5427...> < (\u5c3f\u610f:" + mapleCharacter.getPee() + "%)");
            return;
        }
        if (a2.getPee() == 90) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.dropMessageAll("[\u8eab\u9ad4]: \u4e3b\u4eba\u6c42\u6c42\u4f60!!\u8180\u80f1\u771f\u7684\u5feb\u7206\u70b8\u4e86..\u5feb\u9ede\u53bb\u89e3\u653e\u5427...> < (\u5c3f\u610f:" + mapleCharacter.getPee() + "%)");
            return;
        }
        if (a2.getPee() == 80) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.dropMessageAll("[\u8eab\u9ad4]:\u554a...\u5feb\u9ede\u53bb\u627e\u4e00\u500b\u6c92\u6709\u4eba\u7684\u5730\u65b9\u89e3\u653e\u5427!!! (\u5c3f\u610f:" + mapleCharacter.getPee() + "%)");
            return;
        }
        if (a2.getPee() == 70) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.dropMessageAll("[\u8eab\u9ad4]: \u6211\u958b\u59cb\u60f3\u8981\u5c3f\u5c3f\u4e86,\u5dee\u4e0d\u591a\u53ef\u4ee5\u627e\u96b1\u853d\u8655\u56c9. (\u5c3f\u610f:" + mapleCharacter.getPee() + "%)");
            return;
        }
        if (a2.getPee() == 60) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.dropMessageAll("[\u8eab\u9ad4]:Hmmm \u96c6\u6eff\u534a\u6876\u4e86,\u53ef\u662f\u9084\u5c3f\u4e0d\u51fa\u4f86-v- (\u5c3f\u610f:" + mapleCharacter.getPee() + "%)");
            return;
        }
        if (a2.getPee() == 40) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.dropMessageAll("[\u8eab\u9ad4]: \u4f60\u80af\u5b9a\u7121\u6cd5\u5728\u62c9\u5c4e\u7684\u6642\u5019\u4e0d\u5c3f\u5c3f\u310e\u310e (\u5c3f\u610f:" + mapleCharacter.getPee() + "%)");
            return;
        }
        if (a2.getPee() == 20) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.dropMessageAll("[\u8eab\u9ad4]: \u5077\u5077\u544a\u8a34\u4f60,\u908a\u6d17\u6fa1\u908a\u5c3f\u5c3f\u6709\u76ca\u8eab\u9ad4\u5065\u5eb7! (\u5c3f\u610f:" + mapleCharacter.getPee() + "%)");
            return;
        }
        if (a2.getPee() == 1) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.dropMessageAll("[\u8eab\u9ad4]: \u611f\u89ba\u771f\u6e05\u723d!! (\u5c3f\u610f:" + mapleCharacter.getPee() + "%)");
        }
    }

    public /* synthetic */ void setExtraPotential(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6f6d\u80bb\u987b\u5950\u5296\u6256"), a2, false);
    }

    public final /* synthetic */ int[] getSavedLocations() {
        MapleCharacter a2;
        return a2.Gb;
    }

    public final /* synthetic */ int getEquippedSize() {
        MapleCharacter a2;
        return a2.LA[MapleInventoryType.EQUIPPED.ordinal()].list().size();
    }

    public /* synthetic */ void removePet(MaplePet a2) {
        MapleCharacter a3;
        a2.setSummoned(0);
        a3.Md.remove(a2);
    }

    public /* synthetic */ void setAttackDebugMessage(boolean a2) {
        a.rb = a2;
    }

    public /* synthetic */ void gainMeso(int a2, boolean a3) {
        MapleCharacter a4;
        a4.gainMeso(a2, a3, false, false, false);
    }

    public /* synthetic */ int getHonourNextExp() {
        MapleCharacter a2;
        if (a2.getHonorLevel() == 0) {
            return 0;
        }
        return (a2.getHonorLevel() + 1) * 500;
    }

    public /* synthetic */ void setName(String a2) {
        if (MapleCharacter.getCharacterByName(a2) == null) {
            a.cB = a2;
        }
    }

    public /* synthetic */ void setParty(MapleParty a2) {
        a.ed = a2;
    }

    public /* synthetic */ void addPotentialAll(int a2) {
        if (GameSetConstants.POTENTIAL_SYSTEM) {
            MapleCharacter a3;
            long l2 = a3.getPotentialAll() + (long)a2;
            if (l2 > 10000L) {
                l2 = 10000L;
            }
            a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6f6d\u80bb\u6736\u5961\u7e0b\u507a"), l2, false);
        }
    }

    public /* synthetic */ void setLevelNoCheck(boolean a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u7b65\u7d14\u4e21\u6aac\u67c9"), a2, false);
    }

    public /* synthetic */ void setCharacterSet(String a2, long a3) {
        MapleCharacter a4;
        a4.ga.remove(a2);
        a4.ga.put(a2, a3);
        a4.DA = true;
    }

    public /* synthetic */ int getReborn() {
        MapleCharacter a2;
        return (int)a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u8f7f\u7559"), false);
    }

    public /* synthetic */ void addHonorExp(int a2, boolean a3) {
        MapleCharacter a4;
        if (a4.getHonorLevel() < 1) {
            a4.setHonorLevel(1);
        }
        if (a4.getHonourExp() + a2 >= (a4.getHonorLevel() >= 12 ? 500 * a4.getHonorLevel() : 500)) {
            MapleCharacter mapleCharacter = a4;
            mapleCharacter.setHonourExp(0);
            MapleCharacter mapleCharacter2 = a4;
            mapleCharacter.Cb.sendPacket(MaplePacketCreator.updateAzwanFame(a4.getHonorLevel(), mapleCharacter2.getHonourExp(), true));
            mapleCharacter2.honourLevelUp();
            return;
        }
        MapleCharacter mapleCharacter = a4;
        mapleCharacter.setHonourExp(mapleCharacter.getHonourExp() + a2);
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.updateAzwanFame(a4.getHonorLevel(), a4.getHonourExp(), true));
        if (a3) {
            a4.Cb.sendPacket(MaplePacketCreator.showInfo("\u4f60\u7372\u5f97\u4e86" + a2 + " \u8072\u671b\u3002"));
        }
    }

    public /* synthetic */ void changeTeachSkill(int a22, int a3) {
        MapleCharacter a4;
        ISkill a22 = SkillFactory.getSkill(a22);
        if (a22 == null) {
            return;
        }
        HashMap<ISkill, SkillEntry> hashMap = new HashMap<ISkill, SkillEntry>();
        hashMap.put(a22, new SkillEntry(1, 1, -1L, a3));
        a4.Cb.sendPacket(MaplePacketCreator.updateSkills(hashMap));
        a4.putSkillEntry(a22, new SkillEntry(1, 1, -1L, a3));
        a4.zA = true;
    }

    public /* synthetic */ void autoJob_\u8d85\u65b0\u661f() {
        MapleCharacter a2;
        if (JobConstants.is\u51f1\u6492(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter1stJobLevel(a2.ob)) {
                a2.changeJob(6100);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                a2.changeJob(6110);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(6111);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter4thJobLevel(a2.ob)) {
                a2.changeJob(6112);
                return;
            }
        } else if (JobConstants.is\u5929\u4f7f\u7834\u58de\u8005(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter1stJobLevel(a2.ob)) {
                a2.changeJob(6500);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                a2.changeJob(6510);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(6511);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter4thJobLevel(a2.ob)) {
                a2.changeJob(6512);
            }
        }
    }

    public /* synthetic */ void handleResetMonth() {
        MapleCharacter a2;
        int n2 = Calendar.getInstance().get(2) + 1;
        if ((long)n2 != a2.getLastMonth()) {
            if (a2.getAnyWhereDoor() <= 5) {
                MapleCharacter mapleCharacter = a2;
                mapleCharacter.setAnyWhereDoor(5);
                mapleCharacter.updateAnyWhereDoor();
            }
            a2.setLastMonth(n2);
        }
    }

    public /* synthetic */ int getItemQuantity(int a2, boolean a3) {
        MapleCharacter a4;
        int n2 = a4.LA[GameConstants.getInventoryType(a2).ordinal()].countById(a2);
        if (a3) {
            n2 += a4.LA[MapleInventoryType.EQUIPPED.ordinal()].countById(a2);
        }
        return n2;
    }

    public final /* synthetic */ int getFriendShipPoints(int a2) {
        if (a2 >= 0 && a2 <= 4) {
            MapleCharacter a3;
            return a3.X[a2];
        }
        return 0;
    }

    public /* synthetic */ void setLastUseSkill(int a2) {
        MapleCharacter a3;
        a3.ZA = a2;
        a3.dropDebugMessage("\u8a2d\u7f6e\u6700\u5f8c\u4f7f\u7528\u6280\u80fd:[" + SkillFactory.getName(a2) + "(" + a2 + ")]");
    }

    public /* synthetic */ void chooseStolenSkill(int a2) {
        MapleCharacter a3;
        if (a3.skillisCooling(20031208) || a3.y == null) {
            a3.dropMessage(-6, MapleNodes.ALLATORIxDEMO("\u76c2\u5243\u8679\u65b2\u519b\u5375\u6733\u959d\uff20\u8ac5\u7a21\u5017\u51a1\u8a68\u302e"));
            return;
        }
        Pair<Integer, Boolean> pair = new Pair<Integer, Boolean>(a2, false);
        if (a3.y.contains(pair)) {
            a3.unchooseStolenSkill(a2);
            a3.y.get((int)a3.y.indexOf(pair)).right = true;
            a3.gC = true;
            a3.Cb.sendPacket(JobPacket.PhantomPacket.replaceStolenSkill(SkillConstants.getStealSkill(JobConstants.getJobNumber(a2 / 10000)), a2));
        }
    }

    public final /* synthetic */ boolean canInfinity() {
        MapleCharacter a2;
        if (a2.Z + 4000L > System.currentTimeMillis()) {
            return false;
        }
        a2.Z = System.currentTimeMillis();
        return true;
    }

    public /* synthetic */ void setExp_Force(int a2) {
        MapleCharacter a3;
        if (World.Find.findChannel(a3.cB) <= 0) {
            a3.UpdateCharacter(FixDropNullItem.ALLATORIxDEMO("#N6"), a2);
            return;
        }
        a2 = a3.RC;
    }

    public /* synthetic */ void cancelAllBuffs() {
        MapleCharacter a2;
        Iterator iterator;
        Iterator iterator2 = iterator = new LinkedList<MapleBuffStatValueHolder>(a2.kb.values()).iterator();
        while (iterator2.hasNext()) {
            MapleBuffStatValueHolder mapleBuffStatValueHolder = (MapleBuffStatValueHolder)iterator.next();
            iterator2 = iterator;
            a2.cancelEffect(mapleBuffStatValueHolder.effect, false, mapleBuffStatValueHolder.startTime);
        }
    }

    public /* synthetic */ boolean haveGM() {
        MapleCharacter a2;
        return a2.id >= 2 && a2.id <= 3;
    }

    public /* synthetic */ String getFaction() {
        MapleCharacter a2;
        String string = "";
        if (a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u90a4\u6d12"), false) == 1L) {
            string = FixDropNullItem.ALLATORIxDEMO("\u3026\u2643\u6965\u90ec\u6d08\u3057");
            return string;
        }
        if (a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u6b6d\u6d12"), false) == 1L) {
            string = FixDropNullItem.ALLATORIxDEMO("\u3026\u2640\u6965\u6b25\u6d08\u3057");
        }
        return string;
    }

    public /* synthetic */ byte getInitialSpawnpoint() {
        MapleCharacter a2;
        return a2.uA;
    }

    public /* synthetic */ void setChair(int a2) {
        MapleCharacter a3;
        a3.kC = a2;
        a3.GB.relocHeal();
    }

    public /* synthetic */ MapleCoreAura getCoreAura() {
        MapleCharacter a2;
        return a2.q;
    }

    public /* synthetic */ void forceUpdateItem(IItem a2) {
        MapleCharacter a3;
        a3.forceUpdateItem(a2, true);
    }

    public /* synthetic */ boolean checkHearts() {
        MapleCharacter a2;
        return a2.getInventory(MapleInventoryType.EQUIPPED).getItem((short)-33) != null;
    }

    public /* synthetic */ void gainBeanConsume(int a2) {
        a.pb += a2;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ int getPrizeLog(String a) {
        block11: {
            block10: {
                var2_3 = DBConPool.getInstance().getDataSource().getConnection();
                var3_5 = 0;
                v0 = var4_7 = var2_3.prepareStatement(FixDropNullItem.ALLATORIxDEMO("E#Z#U2\u0016%Y3X2\u001el\u001ffP4Y+\u00166D/L#Z)QfA.S4SfW%U/Rf\u000bf\tfW(RfT)E5_\"\u0016{\u0016y"));
                v0.setInt(1, a.getClient().getAccID());
                v0.setString(2, (String)a);
                a = v0.executeQuery();
                if (!a.next()) break block10;
                v1 = a;
                v2 = v1;
                var3_5 = v1.getInt(1);
                ** GOTO lbl19
            }
            var3_5 = -1;
            v2 = a;
lbl19:
            // 2 sources

            v2.close();
            var4_7.close();
            a = var3_5;
            if (var2_3 == null) break block11;
            {
                catch (Throwable var3_6) {
                    try {
                        block12: {
                            if (var2_3 != null) {
                                try {
                                    var2_3.close();
                                    v3 = var3_6;
                                    break block12;
                                }
                                catch (Throwable var4_8) {
                                    var3_6.addSuppressed(var4_8);
                                }
                            }
                            v3 = var3_6;
                        }
                        throw v3;
                    }
                    catch (Exception var2_4) {
                        return -1;
                    }
                }
            }
            var2_3.close();
        }
        return a;
    }

    public /* synthetic */ void updataCoreAura() {
        MapleCharacter a2;
        if (a2.q != null) {
            a2.Cb.announce(MaplePacketCreator.updateCoreAura(a2));
        }
    }

    public final /* synthetic */ byte getQuestStatus(int a2) {
        MapleCharacter a3;
        return a3.getQuest(MapleQuest.getInstance(a2)).getStatus();
    }

    public /* synthetic */ void canTalk_event(boolean a2) {
        a.Ec = a2;
    }

    public /* synthetic */ void cloneLook(int a2) {
        MapleCharacter a3;
        a3.cloneLook();
        Timer.CloneTimer.getInstance().scheduleSecond(new Runnable(){

            @Override
            public /* synthetic */ void run() {
                5 a2;
                5 v0 = a2;
                v0.MapleCharacter.this.disposeClones();
                v0.MapleCharacter.this.dropMessage(5, UserInterfaceHandler.ALLATORIxDEMO("\u517f\u96bd\u9ae0\u5dc9\u6dbc\u590a\u7d64\u6764\u0015"));
            }
            {
                5 a3;
            }
        }, a2);
    }

    public /* synthetic */ void changeMapPortal(MapleMap a2, MaplePortal a3) {
        MapleCharacter a4;
        MapleMap mapleMap = a2;
        a4.ALLATORIxDEMO(mapleMap, a3.getPosition(), MaplePacketCreator.getWarpToMap(mapleMap, a3.getId(), a4), a3);
    }

    public /* synthetic */ int getFH() {
        MapleCharacter a2;
        MapleFoothold mapleFoothold = a2.getMap().getFootholds().findBelow(a2.getTruePosition());
        if (mapleFoothold != null) {
            return mapleFoothold.getId();
        }
        return 0;
    }

    public /* synthetic */ void loadCharacterSet() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.ga.clear();
        mapleCharacter.Ca.clear();
        mapleCharacter.loadCharacterJson();
    }

    public /* synthetic */ boolean isThief() {
        MapleCharacter a2;
        return a2.ob >= 400 && a2.ob <= 422 || a2.ob >= 1400 && a2.ob <= 1412;
    }

    public /* synthetic */ int getSkillTeachId(ISkill a2) {
        MapleCharacter a3;
        if (a2 == null) {
            return 0;
        }
        if ((a2 = a3.getSkillEntry((ISkill)a2)) == null || ((SkillEntry)a2).teachId == 0) {
            return 0;
        }
        return ((SkillEntry)a2).teachId;
    }

    public /* synthetic */ int getJobRank() {
        MapleCharacter a2;
        return a2.wA;
    }

    public /* synthetic */ boolean isHidden() {
        MapleCharacter a2;
        return a2.Bc;
    }

    public /* synthetic */ int getCharm() {
        MapleCharacter a2;
        return a2.VA;
    }

    public /* synthetic */ boolean canUseReviveItem() {
        MapleCharacter a2;
        return !FieldLimitType.MovementSkills.check(a2.getMap().getFieldLimit()) || !FieldLimitType.SummoningBag.check(a2.getMap().getFieldLimit()) || !FieldLimitType.VipRock.check(a2.getMap().getFieldLimit()) || !FieldLimitType.Mount.check(a2.getMap().getFieldLimit()) || !FieldLimitType.VipRock.check(a2.getMap().getFieldLimit());
    }

    public /* synthetic */ Long getBuffedStarttime(MapleBuffStat a2) {
        MapleCharacter a3;
        if ((a2 = a3.kb.get(a2)) == null) {
            return null;
        }
        return ((MapleBuffStatValueHolder)a2).startTime;
    }

    public /* synthetic */ int getEquippedSoulSkill() {
        MapleCharacter a2;
        Equip equip = (Equip)a2.getInventory(MapleInventoryType.EQUIPPED).getItem((short)-11);
        if (equip == null) {
            return 0;
        }
        return equip.getSoulSkill();
    }

    public /* synthetic */ int getFaceMarking() {
        MapleCharacter a2;
        return a2.Bd;
    }

    public /* synthetic */ boolean isRegRockMap(int a2) {
        int n2;
        int n3 = n2 = 0;
        while (n3 < 5) {
            MapleCharacter a3;
            if (a3.ZC[n2] == a2) {
                return true;
            }
            n3 = ++n2;
        }
        return false;
    }

    public /* synthetic */ int getDropMod() {
        MapleCharacter a2;
        return a2.GB.dropMod;
    }

    /*
     * WARNING - Removed back jump from a try to a catch block - possible behaviour change.
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static /* synthetic */ String getCharacterNameById(int a2) {
        ResultSet resultSet;
        PreparedStatement preparedStatement;
        String string = null;
        MapleCharacter mapleCharacter = MapleCharacter.getOnlineCharacterById(a2);
        if (mapleCharacter != null) {
            return mapleCharacter.getName();
        }
        try {
            mapleCharacter = DBConPool.getInstance().getDataSource().getConnection();
            try {
                preparedStatement = null;
                MapleCharacter mapleCharacter2 = mapleCharacter;
                Statement statement = mapleCharacter2.createStatement();
                preparedStatement = mapleCharacter2.prepareStatement(FixDropNullItem.ALLATORIxDEMO("E#Z#U2\u0016(W+SfP4Y+\u0016%^'D'U2S4EfA.S4Sf_\"\u0016{\u0016y"));
                preparedStatement.setInt(1, a2);
                ResultSet resultSet2 = resultSet = preparedStatement.executeQuery();
                while (resultSet2.next()) {
                    ResultSet resultSet3 = resultSet;
                    resultSet2 = resultSet3;
                    string = resultSet3.getString(MapleNodes.ALLATORIxDEMO("`McI"));
                }
            }
            catch (Throwable throwable) {
                Throwable throwable2;
                if (mapleCharacter != null) {
                    try {
                        mapleCharacter.close();
                        throwable2 = throwable;
                        throw throwable2;
                    }
                    catch (Throwable throwable3) {
                        throwable.addSuppressed(throwable3);
                    }
                }
                throwable2 = throwable;
                throw throwable2;
            }
        }
        catch (Exception exception) {
            // empty catch block
            return string;
        }
        {
            preparedStatement.close();
            resultSet.close();
            if (mapleCharacter == null) return string;
        }
        mapleCharacter.close();
        return string;
    }

    public /* synthetic */ void setFollowId(int a2) {
        MapleCharacter a3;
        a3.pc = a2;
        if (a3.pc == 0) {
            MapleCharacter mapleCharacter = a3;
            mapleCharacter.IA = false;
            mapleCharacter.Pc = false;
        }
    }

    public /* synthetic */ void changeSkillLevel(Integer a2, int a3, byte a4) {
        MapleCharacter a5;
        if ((a2 = SkillFactory.getSkill((Integer)a2)) == null) {
            return;
        }
        Object object = a2;
        a5.changeSkillLevel((ISkill)object, a3, (int)a4, object.isTimeLimited() ? System.currentTimeMillis() + 2592000000L : -1L);
    }

    public /* synthetic */ int getKillCount() {
        MapleCharacter a2;
        return a2.pC;
    }

    public /* synthetic */ long getLastHour() {
        MapleCharacter a2;
        return a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u670e\u5fa0\u4e04\u7df6\u5c01\u666e"), false);
    }

    public /* synthetic */ long getActivity() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6d7d\u8ebb\u5ee0"), false);
    }

    public /* synthetic */ void mulungEnergyModify(boolean a2) {
        MapleCharacter mapleCharacter;
        MapleCharacter a3;
        if (a2) {
            if (a3.gc + 100 > 10000) {
                mapleCharacter = a3;
                a3.gc = (short)10000;
            } else {
                MapleCharacter mapleCharacter2 = a3;
                mapleCharacter = mapleCharacter2;
                mapleCharacter2.gc = (short)(mapleCharacter2.gc + 100);
            }
        } else {
            mapleCharacter = a3;
            a3.gc = 0;
        }
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.MulungEnergy(a3.gc));
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ String SelectAuction() {
        MapleCharacter a2;
        Map<Integer, Pair<Integer, Integer>> map = a2.getAuctionItems();
        if (map.isEmpty()) {
            return null;
        }
        StringBuffer stringBuffer = new StringBuffer();
        Iterator<Map.Entry<Integer, Pair<Integer, Integer>>> iterator = map.entrySet().iterator();
        block5: while (iterator.hasNext()) {
            Map.Entry<Integer, Pair<Integer, Integer>> entry = iterator.next();
            switch (entry.getValue().getLeft()) {
                case 0: {
                    stringBuffer.append("\r\n#L" + entry.getKey() + "\u6953\u5e63 " + entry.getValue().getRight() + " \u5143");
                }
                case 1: {
                    stringBuffer.append("\r\n#L" + entry.getKey() + "GASH " + entry.getValue().getRight() + " \u9ede");
                }
                case 2: {
                    stringBuffer.append("\r\n#L" + entry.getKey() + "\u6953\u9ede " + entry.getValue().getRight() + " \u9ede");
                    continue block5;
                }
            }
            stringBuffer.append("\r\n#L" + entry.getKey() + "##i" + entry.getValue().getLeft() + "##z" + entry.getValue().getLeft() + "# " + entry.getValue().getRight() + " \u500b");
        }
        return stringBuffer.toString();
    }

    public /* synthetic */ void deleteFromRocks(int a2) {
        int n2;
        int n3 = n2 = 0;
        while (n3 < 10) {
            MapleCharacter a3;
            if (a3.DB[n2] == a2) {
                a3.Qd = true;
                a3.DB[n2] = 999999999;
                return;
            }
            n3 = ++n2;
        }
    }

    public /* synthetic */ void setMonsterBookCover(int a2) {
        a.kB = a2;
    }

    public /* synthetic */ void changeShow(int a2) {
        switch (a2) {
            case 1: {
                MapleCharacter a3;
                while (false) {
                }
                a3.Yb = !a3.Yb;
                return;
            }
            case 2: {
                MapleCharacter a3;
                a3.ec = !a3.ec;
            }
        }
    }

    public final /* synthetic */ void setQuestAdd(MapleQuest a2, byte a32, String a4) {
        MapleCharacter a5;
        if (!a5.XB.containsKey(a2)) {
            MapleQuestStatus a32 = new MapleQuestStatus(a2, a32);
            a32.setCustomData(a4);
            a5.XB.put(a2, a32);
            a5.zb = true;
        }
    }

    public final /* synthetic */ int getEquippedSize(int a2) {
        MapleCharacter a3;
        return a3.LA[MapleInventoryType.EQUIPPED.ordinal()].countById(a2);
    }

    public /* synthetic */ String getName() {
        MapleCharacter a2;
        if (a2.cB.length() >= 13) {
            MapleCharacter mapleCharacter = a2;
            System.out.println("\u89d2\u8272\u540d\u7a31\u904e\u9577, \u89d2\u8272:" + mapleCharacter.cB + " \u9577\u5ea6:" + mapleCharacter.cB.length());
        }
        return a2.cB;
    }

    public /* synthetic */ void unequipPet(MaplePet a2, boolean a32, int a4) {
        if (a2.getSummoned()) {
            MapleCharacter a5;
            a2.saveToDb();
            Object a32 = a5.getSummonedPets();
            if (a32.contains(a2)) {
                a32.remove(a2);
                int n2 = 1;
                a32 = a32.iterator();
                Object object = a32;
                while (object.hasNext()) {
                    MaplePet maplePet = (MaplePet)a32.next();
                    if (maplePet == null) {
                        object = a32;
                        continue;
                    }
                    maplePet.setSummoned(n2++);
                    object = a32;
                }
            }
            MapleCharacter mapleCharacter = a5;
            MaplePet maplePet = a2;
            mapleCharacter.Cb.sendPacket(PetPacket.updatePet(maplePet, a5.getInventory(MapleInventoryType.CASH).getItem((byte)maplePet.getInventoryPosition()), false));
            if (mapleCharacter.rC != null) {
                MapleCharacter mapleCharacter2 = a5;
                a5.rC.broadcastMessage(mapleCharacter2, PetPacket.removePet(mapleCharacter2.getId(), a4), true);
            }
            a2.setSummoned(0);
            if (GameSetConstants.MAPLE_VERSION < 123) {
                a5.Cb.sendPacket(PetPacket.petStatUpdate(a5));
            }
            MapleCharacter mapleCharacter3 = a5;
            mapleCharacter3.Cb.sendPacket(MaplePacketCreator.enableActions());
            mapleCharacter3.marriage();
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ void recalcPartyQuestRank(int a2) {
        int n2;
        int n3;
        Pair<String, Pair<String, Integer>> pair;
        String string;
        MapleCharacter a3;
        block29: {
            if (a3.startPartyQuest(a2)) return;
            string = a3.getOneInfo(a2, FixDropNullItem.ALLATORIxDEMO("D'X-"));
            if (string == null) return;
            if (string.equals(MapleNodes.ALLATORIxDEMO("\u007f"))) {
                return;
            }
            pair = string;
            int n4 = -1;
            switch (((String)((Object)pair)).hashCode()) {
                case 65: {
                    if (!((String)((Object)pair)).equals(FixDropNullItem.ALLATORIxDEMO("\u0007"))) break;
                    n3 = n4 = 0;
                    break block29;
                }
                case 66: {
                    if (!((String)((Object)pair)).equals(MapleNodes.ALLATORIxDEMO("n"))) break;
                    n3 = n4 = 1;
                    break block29;
                }
                case 67: {
                    if (!((String)((Object)pair)).equals(FixDropNullItem.ALLATORIxDEMO("\u0005"))) break;
                    n3 = n4 = 2;
                    break block29;
                }
                case 68: {
                    if (!((String)((Object)pair)).equals(MapleNodes.ALLATORIxDEMO("h"))) break;
                    n3 = n4 = 3;
                    break block29;
                }
                case 70: {
                    if (!((String)((Object)pair)).equals(FixDropNullItem.ALLATORIxDEMO("\u0000"))) break;
                    n4 = 4;
                }
            }
            n3 = n4;
        }
        switch (n3) {
            case 0: {
                string = MapleNodes.ALLATORIxDEMO("\u007f");
                n2 = a2;
                break;
            }
            case 1: {
                string = FixDropNullItem.ALLATORIxDEMO("\u0007");
                n2 = a2;
                break;
            }
            case 2: {
                string = MapleNodes.ALLATORIxDEMO("n");
                n2 = a2;
                break;
            }
            case 3: {
                string = FixDropNullItem.ALLATORIxDEMO("\u0005");
                n2 = a2;
                break;
            }
            case 4: {
                string = MapleNodes.ALLATORIxDEMO("h");
                n2 = a2;
                break;
            }
            default: {
                return;
            }
        }
        pair = MapleQuest.getInstance(n2).getInfoByRank(string);
        Iterator<Pair<String, Pair<String, Integer>>> iterator = pair.iterator();
        while (iterator.hasNext()) {
            boolean bl;
            int n5;
            int n6;
            boolean bl2;
            block30: {
                pair = iterator.next();
                bl2 = false;
                String string2 = a3.getOneInfo(a2, (String)((Pair)pair.right).left);
                if (string2 == null) {
                    return;
                }
                try {
                    n6 = Integer.parseInt(string2);
                }
                catch (NumberFormatException numberFormatException) {
                    return;
                }
                String string3 = (String)pair.left;
                int n7 = -1;
                switch (string3.hashCode()) {
                    case 3318169: {
                        if (!string3.equals(FixDropNullItem.ALLATORIxDEMO("Z#E5"))) break;
                        n5 = n7 = 0;
                        break block30;
                    }
                    case 0x333B55: {
                        if (!string3.equals(MapleNodes.ALLATORIxDEMO("cC|I"))) break;
                        n5 = n7 = 1;
                        break block30;
                    }
                    case 96757556: {
                        if (!string3.equals(FixDropNullItem.ALLATORIxDEMO("#G3W*"))) break;
                        n7 = 2;
                    }
                }
                n5 = n7;
            }
            switch (n5) {
                case 0: {
                    if (n6 >= (Integer)((Pair)pair.right).right) return;
                    boolean bl3 = true;
                    bl = bl2 = bl3;
                    break;
                }
                case 1: {
                    if (n6 <= (Integer)((Pair)pair.right).right) return;
                    boolean bl4 = true;
                    bl = bl2 = bl4;
                    break;
                }
                case 2: {
                    bl2 = n6 == (Integer)((Pair)pair.right).right;
                }
                default: {
                    bl = bl2;
                }
            }
            if (bl) continue;
            return;
        }
        a3.updateOneInfo(a2, MapleNodes.ALLATORIxDEMO("|M`G"), string);
    }

    public /* synthetic */ void healMP(int a2, boolean a3) {
        MapleCharacter a4;
        a4.addMP(a2);
        if (a3) {
            MapleCharacter mapleCharacter = a4;
            mapleCharacter.Cb.sendPacket(MaplePacketCreator.showOwnHpHealed(a2));
            MapleCharacter mapleCharacter2 = a4;
            mapleCharacter.getMap().broadcastMessage(mapleCharacter2, MaplePacketCreator.showHpHealed(mapleCharacter2.getId(), a2), false);
        }
    }

    public /* synthetic */ boolean isLottoryToday() {
        MapleCharacter a2;
        boolean bl = a2.getLottoryDate() == (long)FileoutputUtil.NowTimeNumber();
        return bl;
    }

    public /* synthetic */ MapleStorageType getOperateStorageExceed() {
        MapleCharacter a2;
        return a2.DC;
    }

    public /* synthetic */ String getbirthMAC() {
        MapleCharacter a2;
        return a2.ya;
    }

    public /* synthetic */ void reloadAllSkills() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.updateSkills(mapleCharacter.sB));
    }

    private /* synthetic */ void I() {
        a.Jb = System.currentTimeMillis();
    }

    public /* synthetic */ CashShop getCashInventory() {
        MapleCharacter a2;
        return a2.nd;
    }

    public final /* synthetic */ MapleQuestStatus getQuest(int a2) {
        MapleCharacter a3;
        return a3.getQuest(MapleQuest.getInstance(a2));
    }

    public static /* synthetic */ MapleCharacter getOnlineCharacterById(int a2) {
        MapleCharacter mapleCharacter = null;
        if (World.Find.findChannel(a2) >= 1 && (mapleCharacter = ChannelServer.getInstance(World.Find.findWorld(a2), World.Find.findChannel(a2)).getPlayerStorage().getCharacterById(a2)) != null) {
            return mapleCharacter;
        }
        return null;
    }

    public /* synthetic */ void HonorUnlock2() {
        MapleCharacter a2;
        InnerSkillValueHolder innerSkillValueHolder = null;
        boolean bl = false;
        innerSkillValueHolder = new InnerSkillValueHolder(70000016, (byte)(true ? 1 : 0), (byte)(true ? 1 : 0), (byte)(true ? 1 : 0), true);
        a2.u.add(innerSkillValueHolder);
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.UA = true;
        mapleCharacter.changeSkillLevel(innerSkillValueHolder.getSkillId(), (int)innerSkillValueHolder.getSkillLevel(), innerSkillValueHolder.getSkillLevel());
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.updateInnerPotential((byte)0, innerSkillValueHolder.getSkillId(), innerSkillValueHolder.getSkillLevel(), innerSkillValueHolder.getRank()));
    }

    public /* synthetic */ void canTalk(boolean a2) {
        a.sd = a2;
    }

    public /* synthetic */ void clearofflinebuffs() {
        AB.clear();
    }

    public /* synthetic */ void resetFishKingScore() {
        a.Ba = 0;
    }

    public /* synthetic */ void setchanged_slotlimit() {
        a.tA = true;
    }

    public static /* synthetic */ MapleCharacter getCharacterByName(String a2) {
        MapleCharacter mapleCharacter = MapleCharacter.getOnlineCharacterByName(a2);
        if (mapleCharacter != null) {
            return mapleCharacter;
        }
        int n2 = MapleCharacter.getCharacterIdByName(a2);
        if (n2 == -1) {
            return null;
        }
        return MapleCharacter.loadCharFromDB(n2, new MapleClient(null, null, new MockIOSession()), true);
    }

    public /* synthetic */ void setGildingDragon(boolean a2) {
        a.WB = a2;
    }

    public /* synthetic */ void setGender(byte a2) {
        a.WA = a2;
    }

    public /* synthetic */ long getPotential4() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6a69\u73c1\u7117\u89d0\u7546\u5e7e"), false);
    }

    public /* synthetic */ long getEarnPoint() {
        MapleCharacter a2;
        return a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u4ec4\u65c9\u737c\u5fbb\u7d0b\u5205"), false);
    }

    public /* synthetic */ void writePoint(String a2, String a3) {
        MapleCharacter a4;
        a4.Cb.sendPacket(MaplePacketCreator.sendGhostPoint(a2, a3));
    }

    public /* synthetic */ byte getWorld() {
        MapleCharacter a2;
        return a2.wc;
    }

    public /* synthetic */ boolean getCheckedPyramid() {
        MapleCharacter a2;
        return a2.OA;
    }

    public /* synthetic */ void forceUpdateItem(IItem a2, boolean a3) {
        MapleCharacter a4;
        LinkedList<ModifyInventory> linkedList = new LinkedList<ModifyInventory>();
        linkedList.add(new ModifyInventory(3, a2));
        linkedList.add(new ModifyInventory(0, a2));
        a4.Cb.sendPacket(MaplePacketCreator.modifyInventory(a3, linkedList, a4));
    }

    public /* synthetic */ void randomPotential() {
        int n2;
        int n3;
        MapleCharacter a2;
        ArrayList<Integer> arrayList = new ArrayList<Integer>();
        ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
        long l2 = a2.getPotentialTotal();
        if (l2 <= 0L) {
            return;
        }
        int n4 = n3 = 1;
        while ((long)n4 <= l2) {
            arrayList.add(n3++);
            n4 = n3;
        }
        int n5 = n3 = 0;
        while (n5 < 6) {
            Random random = new Random();
            n2 = random.nextInt(arrayList.size());
            arrayList2.add(n2);
            arrayList.remove(n2);
            n5 = ++n3;
        }
        Collections.sort(arrayList2);
        n3 = (int)(l2 - (long)((Integer)arrayList2.get(5)).intValue());
        int n6 = (Integer)arrayList2.get(5) - (Integer)arrayList2.get(4);
        n2 = (Integer)arrayList2.get(4) - (Integer)arrayList2.get(3);
        int n7 = (Integer)arrayList2.get(3) - (Integer)arrayList2.get(2);
        int n8 = (Integer)arrayList2.get(2) - (Integer)arrayList2.get(1);
        int n9 = (Integer)arrayList2.get(1) - (Integer)arrayList2.get(0);
        MapleCharacter mapleCharacter = a2;
        MapleCharacter mapleCharacter2 = a2;
        MapleCharacter mapleCharacter3 = a2;
        a2.setPotential1(n3);
        mapleCharacter3.setPotential2(n6);
        mapleCharacter3.setPotential3(n2);
        mapleCharacter2.setPotential4(n7);
        mapleCharacter2.setPotential5(n8);
        mapleCharacter.setPotential6(n9);
        mapleCharacter.setPotential7((Integer)arrayList2.get(0));
    }

    public /* synthetic */ byte getNumAntiKSMonsters() {
        MapleCharacter a2;
        return a2.ALLATORIxDEMO;
    }

    public final /* synthetic */ void expirationTask(boolean a2, boolean a322) {
        Object object;
        int n2;
        MapleCharacter a4;
        if (a322) {
            Integer n3;
            Iterator<Integer> iterator;
            if (a4.jb != null) {
                Iterator<Integer> iterator2 = iterator = a4.jb.iterator();
                while (iterator2.hasNext()) {
                    n3 = iterator.next();
                    iterator2 = iterator;
                    a4.Cb.sendPacket(MTSCSPacket.itemExpired(n3));
                }
            }
            a4.jb = null;
            if (a4.yA != null) {
                iterator = a4.yA.iterator();
                Iterator<Integer> iterator3 = iterator;
                while (iterator3.hasNext()) {
                    n3 = iterator.next();
                    MapleCharacter mapleCharacter = a4;
                    mapleCharacter.Cb.sendPacket(MaplePacketCreator.updateSkill(n3, 0, 0, -1L));
                    mapleCharacter.Cb.sendPacket(MaplePacketCreator.getErrorNotice("[" + SkillFactory.getSkillName(n3) + "] \u6280\u80fd\u5df2\u7d93\u904e\u671f\uff0c\u7cfb\u7d71\u81ea\u52d5\u5f9e\u6280\u80fd\u6b04\u4f4d\u79fb\u9664\u3002"));
                    iterator3 = iterator;
                }
            }
            a4.yA = null;
            return;
        }
        ArrayList<Integer> a322 = new ArrayList<Integer>();
        long l2 = System.currentTimeMillis();
        ArrayList<Pair<Object, IItem>> arrayList = new ArrayList<Pair<Object, IItem>>();
        ArrayList<IItem> arrayList2 = new ArrayList<IItem>();
        Object object2 = MapleInventoryType.values();
        int n4 = ((MapleInventoryType[])object2).length;
        int n3 = n2 = 0;
        while (n3 < n4) {
            object = object2[n2];
            for (IItem iItem : a4.getInventory((MapleInventoryType)((Object)object))) {
                long l3 = iItem.getExpiration();
                if (l3 != -1L && !GameConstants.isPet(iItem.getItemId()) && l2 > l3) {
                    if (ItemFlag.LOCK.check(iItem.getFlag())) {
                        arrayList2.add(iItem);
                        continue;
                    }
                    if (l2 <= l3) continue;
                    arrayList.add(new Pair<Object, IItem>(object, iItem));
                    continue;
                }
                if (iItem.getItemId() != 5000054 || iItem.getPet() == null || iItem.getPet().getSecondsLeft() > 0) continue;
                arrayList.add(new Pair<Object, IItem>(object, iItem));
            }
            n3 = ++n2;
        }
        Object object3 = arrayList.iterator();
        while (object3.hasNext()) {
            Pair pair = (Pair)object3.next();
            object2 = (IItem)pair.getRight();
            a322.add(object2.getItemId());
            MapleCharacter mapleCharacter = a4;
            if (a2) {
                mapleCharacter.getInventory((MapleInventoryType)((Object)pair.getLeft())).removeItem(object2.getPosition(), object2.getQuantity(), false, a4, true);
                continue;
            }
            mapleCharacter.getInventory((MapleInventoryType)((Object)pair.getLeft())).removeItem(a4, object2.getPosition(), object2.getQuantity(), false);
        }
        Object object4 = object3 = arrayList2.iterator();
        while (object4.hasNext()) {
            IItem iItem = (IItem)object3.next();
            object4 = object3;
            IItem iItem2 = iItem;
            iItem2.setExpiration(-1L);
            iItem2.setFlag(iItem2.getFlag() - ItemFlag.LOCK.getValue());
        }
        a4.jb = a322;
        object3 = new ArrayList();
        ArrayList<ISkill> arrayList3 = new ArrayList<ISkill>();
        for (Map.Entry entry : a4.sB.entrySet()) {
            if (((SkillEntry)entry.getValue()).expiration == -1L || l2 <= ((SkillEntry)entry.getValue()).expiration) continue;
            arrayList3.add((ISkill)entry.getKey());
        }
        object = arrayList3.iterator();
        Object object5 = object;
        while (object5.hasNext()) {
            ISkill iSkill = (ISkill)object.next();
            object5 = object;
            object3.add(iSkill.getId());
            a4.sB.remove(iSkill);
            a4.zA = true;
        }
        if (a4.q != null && l2 > a4.q.getExpiration()) {
            MapleCharacter mapleCharacter;
            a4.q.resetCoreAura();
            try {
                a4.q.saveToDb(null);
                mapleCharacter = a4;
            }
            catch (SQLException sQLException) {
                mapleCharacter = a4;
                sQLException.printStackTrace();
            }
            mapleCharacter.updataCoreAura();
            MapleCharacter mapleCharacter2 = a4;
            mapleCharacter2.GB.recalcLocalStats();
            mapleCharacter2.dropMessage(5, FixDropNullItem.ALLATORIxDEMO("\u5bb0\u76e4\u6759\u9666\u5db4\u5206\uff4a\u80cb\u52dd\u500a\u5db4\u522b\u598d\u5320\u3044"));
        }
        a4.yA = object3;
    }

    public /* synthetic */ long getLastHiredFishingTime() {
        MapleCharacter a2;
        return a2.ua;
    }

    public /* synthetic */ boolean getCanTalk() {
        MapleCharacter a2;
        return a2.sd && a2.Cb.getCanTalk();
    }

    public /* synthetic */ void setLuminousMode(int a22) {
        MapleCharacter a3;
        if (a22 >= 27100000 && a22 < 27121300 && a3.D != 20040219 && a3.D != 20040220) {
            MapleCharacter mapleCharacter;
            int n2 = SkillConstants.getLuminousSkillMode(a22);
            if (a3.getLightGauge() <= 0 && a3.m == 1 || a3.getDarkGauge() >= 9999 && a3.f == 1) {
                MapleCharacter mapleCharacter2 = a3;
                mapleCharacter2.changeLuminousMode(mapleCharacter2.m == 1 ? 20040217 : 20040216);
                MapleCharacter mapleCharacter3 = a3;
                mapleCharacter = mapleCharacter3;
                mapleCharacter3.Cb.sendPacket(MaplePacketCreator.enableActions());
            } else {
                if (a22 >= 27100000 && a22 < 27120400 && a3.getLuminousState() < 20040218) {
                    int n3;
                    if (a3.getLightGauge() <= 0 && a3.m == 1) {
                        n3 = n2 = 20040217;
                    } else {
                        if (a3.getDarkGauge() >= 9999 && a3.f == 1) {
                            n2 = 20040216;
                        }
                        n3 = n2;
                    }
                    if (SkillFactory.getSkill(n3) != null) {
                        MapleCharacter mapleCharacter4 = a3;
                        MapleCharacter mapleCharacter5 = a3;
                        mapleCharacter5.setLuminousState(n2);
                        MapleStatEffect a22 = SkillFactory.getSkill(n2).getEffect(a3.getTotalSkillLevel(n2));
                        List<Pair<MapleBuffStat, Integer>> list = Collections.singletonList(new Pair<MapleBuffStat, Integer>(MapleBuffStat.LUMINOUS_GAUGE, 1));
                        mapleCharacter4.Cb.sendPacket(MaplePacketCreator.giveBuff(n2, 0, list, a22, a3));
                        mapleCharacter5.registerEffect(a22, System.currentTimeMillis(), list, Integer.MAX_VALUE, a3.getId());
                        if (!mapleCharacter4.isHidden()) {
                            MapleCharacter mapleCharacter6 = a3;
                            a3.getMap().broadcastMessage(mapleCharacter6, MaplePacketCreator.giveForeignBuff(mapleCharacter6, list, a22), false);
                        }
                        a22.applyTo(a3);
                    }
                }
                mapleCharacter = a3;
            }
            if (mapleCharacter.getQuestStatus(25500) == 1) {
                if (a3.m == 1) {
                    a3.updateOneInfo(25502, FixDropNullItem.ALLATORIxDEMO("*_!^2"), "1");
                    return;
                }
                if (a3.f == 1) {
                    a3.updateOneInfo(25502, MapleNodes.ALLATORIxDEMO("jM|G"), "1");
                }
            }
        }
    }

    public /* synthetic */ void setTouzhuNX(int a2) {
        a.mB = a2;
    }

    public /* synthetic */ void setEarnPoint(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u4efc\u65a3\u7344\u5fd1\u7d33\u526f"), a2, false);
    }

    public /* synthetic */ boolean changeTeachSkillData(ISkill a2, int a3, int a4, long a5) {
        MapleCharacter a6;
        if (a2 == null || !GameConstants.isApplicableSkill(a2.getId()) && !GameConstants.isApplicableSkill_(a2.getId())) {
            return false;
        }
        if (a3 == 0 && a4 == 0) {
            if (!a6.sB.containsKey(a2.getId())) {
                return false;
            }
            a6.sB.remove(a2.getId());
            a6.zA = true;
        } else {
            a6.sB.put(a2, new SkillEntry(a3, a4, a5, a6.getSkillTeachId(a2)));
            a6.zA = true;
        }
        return true;
    }

    public /* synthetic */ void addSkillPosition(Point a2) {
        MapleCharacter a3;
        a3.C.add(a2);
    }

    public /* synthetic */ void changeRemoval() {
        MapleCharacter a2;
        a2.changeRemoval(false);
    }

    public /* synthetic */ void modifyCSPoints(int a2, int a3, boolean a4) {
        boolean bl;
        int n2;
        MapleCharacter a5;
        if (a2 == 3) {
            a5.gainPoints(a3);
            return;
        }
        if (NPCScriptManager.getInstance().getCM(a5.getClient()) != null) {
            n2 = a5.getCSPoints(a2);
            if (n2 < a3 && a3 < 0) {
                int n3;
                Object object;
                if (a2 == 1) {
                    object = MapleNodes.ALLATORIxDEMO("IM}D");
                    n3 = a3;
                } else if (a2 == 2) {
                    object = FixDropNullItem.ALLATORIxDEMO("\u6965\u9e98");
                    n3 = a3;
                } else {
                    object = " " + a2;
                    n3 = a3;
                }
                FileoutputUtil.logToFile_NpcScript_Bug(a5, " \u542b\u6709 \u6263\u9664\u4e0d\u5920\u6578\u91cf\u7684" + (String)object + "[" + n3 + "] \u76ee\u524d\u9ede\u6578[" + n2 + "] \u4e4b\u6f0f\u6d1e\r\n");
                MapleCharacter mapleCharacter = a5;
                mapleCharacter.modifyCSPoints(a2, -n2);
                mapleCharacter.getClient().sendPacket(MaplePacketCreator.enableActions());
                return;
            }
            if (a3 > 500000 && !a5.isGM()) {
                int n4;
                String string;
                int n5;
                String string2;
                String string3 = a5.getName();
                short s2 = a5.getLevel();
                int n6 = a5.getId();
                if (a2 == 1) {
                    string2 = MapleNodes.ALLATORIxDEMO("Im]d");
                    n5 = a3;
                } else {
                    string2 = FixDropNullItem.ALLATORIxDEMO("\u6965\u9e98");
                    n5 = a3;
                }
                World.Broadcast.broadcastGMMessage(MaplePacketCreator.getItemNotice("[GM\u5bc6\u8a9e] " + string3 + "\u7b49\u7d1a:" + s2 + "(\u7de8\u865f: " + n6 + ")\u55ae\u6b21\u7372\u5f97\u5927\u91cf" + string2 + " \u6578\u91cf:" + n5 + "\u9ede,\u5341\u5206\u53ef\u7591!"));
                String string4 = MapleNodes.ALLATORIxDEMO("bCi_!doOe\u0003\u55a0\u6b0d\u737c\u5fbb\u5929\u91e3\u9ed0\u6554 XvX");
                String string5 = FileoutputUtil.NowTime();
                String string6 = a5.getName();
                short s3 = a5.getLevel();
                int n7 = a5.getId();
                if (a2 == 1) {
                    string = FixDropNullItem.ALLATORIxDEMO("q\u0007e\u000e");
                    n4 = a3;
                } else {
                    string = MapleNodes.ALLATORIxDEMO("\u695d\u9ef2");
                    n4 = a3;
                }
                FileoutputUtil.logToFile(string4, "\r\n " + string5 + "\u89d2\u8272" + string6 + "\u7b49\u7d1a:" + s3 + "(\u7de8\u865f: " + n7 + ")\u55ae\u6b21\u7372\u5f97\u5927\u91cf" + string + " \u6578\u91cf:" + n4 + "\u9ede");
                a5.getClient().sendPacket(MaplePacketCreator.enableActions());
                return;
            }
        }
        switch (a2) {
            case 1: {
                while (false) {
                }
                n2 = a5.getAcash();
                if (n2 + a3 < 0) {
                    if (a4) {
                        a5.dropMessage(-1, FixDropNullItem.ALLATORIxDEMO("\u76d8\u520bq\u0007e\u000e\u9ee8\u653e\u5dc4\u6eb9\uff3a\u7167\u6ce3\u7334\u5fa1\u66b2\u592c\u76c2q\u0007e\u000e\u9ee8\u653e"));
                    }
                    return;
                }
                a5.setAcash(n2 + a3);
                MapleCharacter mapleCharacter = a5;
                if (a3 < 0) {
                    mapleCharacter.addSpendGash(a3);
                    bl = a4;
                    break;
                }
                mapleCharacter.addEarnGash(a3);
                bl = a4;
                break;
            }
            case 2: {
                if (a5.Ab + a3 < 0) {
                    if (a4) {
                        a5.dropMessage(-1, MapleNodes.ALLATORIxDEMO("\u76c2\u5243\u697f\u8447\u9ef2\u6576\u5dde\u6ef1\uff20\u712f\u6cf9\u737c\u5fbb\u66fa\u5936\u768a\u697f\u8447\u9ef2\u6576\u0002"));
                    }
                    return;
                }
                a5.Ab += a3;
                MapleCharacter mapleCharacter = a5;
                if (a3 < 0) {
                    mapleCharacter.addSpendMaplePoint(a3);
                    bl = a4;
                    break;
                }
                mapleCharacter.addEarnMaplePoint(a3);
                bl = a4;
                break;
            }
            default: {
                bl = a4;
            }
        }
        if (bl && a3 != 0) {
            int n8;
            String string;
            int n9;
            String string7;
            if (a3 > 0) {
                string7 = FixDropNullItem.ALLATORIxDEMO("\u7334\u5fa1f");
                n9 = a3;
            } else {
                string7 = MapleNodes.ALLATORIxDEMO("\u829d\u8cb5\f");
                n9 = a3;
            }
            a5.dropMessage(-1, "\u60a8\u5df2\u7d93 " + string7 + n9 + (a2 == 1 ? FixDropNullItem.ALLATORIxDEMO("\u0016\u0001w\u0015~\u9e98\u654eh") : MapleNodes.ALLATORIxDEMO(".\u697f\u8447\u9ef2\u6576\u0002")));
            if (a3 > 0) {
                string = FixDropNullItem.ALLATORIxDEMO("\u7334\u5fa1f");
                n8 = a3;
            } else {
                string = MapleNodes.ALLATORIxDEMO("\u829d\u8cb5\f");
                n8 = a3;
            }
            a5.dropMessage("\u60a8\u5df2\u7d93 " + string + n8 + (a2 == 1 ? FixDropNullItem.ALLATORIxDEMO("\u0016\u0001w\u0015~\u9e98\u654eh") : MapleNodes.ALLATORIxDEMO(".\u697f\u8447\u9ef2\u6576\u0002")));
        }
    }

    public /* synthetic */ long getETH() {
        MapleCharacter a2;
        return a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("iZd"), false);
    }

    public /* synthetic */ void fly() {
    }

    public /* synthetic */ List<MapleBuffStat> getBuffStatsFromStatEffect(MapleStatEffect a2, long a3) {
        MapleCharacter a4;
        ArrayList<MapleBuffStat> arrayList = new ArrayList<MapleBuffStat>();
        for (Map.Entry entry : new EnumMap<MapleBuffStat, MapleBuffStatValueHolder>(a4.kb).entrySet()) {
            MapleBuffStatValueHolder mapleBuffStatValueHolder = (MapleBuffStatValueHolder)entry.getValue();
            if (!mapleBuffStatValueHolder.effect.sameSource(a2) || a3 != -1L && a3 != mapleBuffStatValueHolder.startTime) continue;
            arrayList.add((MapleBuffStat)entry.getKey());
        }
        return arrayList;
    }

    public /* synthetic */ void saveMapleTrait() {
        MapleCharacter a2;
        Iterator<MapleTrait> iterator;
        Iterator<MapleTrait> iterator2 = iterator = a2.Ta.values().iterator();
        while (iterator2.hasNext()) {
            MapleTrait mapleTrait = iterator.next();
            iterator2 = iterator;
            a2.setCharacterSet(mapleTrait.getType().name(), mapleTrait.getTotalExp(), false);
        }
    }

    public /* synthetic */ void saveLocation(SavedLocationType a2) {
        MapleCharacter a3;
        a3.Gb[a2.getValue()] = a3.getMapId();
        a3.kc = true;
    }

    public /* synthetic */ void setGM_Force(byte a2) {
        MapleCharacter a3;
        if (World.Find.findChannel(a3.cB) <= 0) {
            a3.UpdateCharacter(MapleNodes.ALLATORIxDEMO("iA"), a2);
            return;
        }
        a3.id = a2;
    }

    public /* synthetic */ boolean isReborn() {
        MapleCharacter a2;
        return a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u8f47\u7533"), false) >= 1L;
    }

    public /* synthetic */ void cancelAllBuffs_() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.kb.clear();
        mapleCharacter.p.clear();
    }

    public /* synthetic */ void addBeanConsume() {
        MapleCharacter a2;
        ++a2.pb;
    }

    public /* synthetic */ long getSignedNumber() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u7c0b\u5276\u6b17\u653e"), false);
    }

    public /* synthetic */ void doFamiliarSchedule(long a2) {
        MapleCharacter a3;
        for (MonsterFamiliar monsterFamiliar : a3.ja.values()) {
            if (a3.ba != null && a3.ba.getId() == monsterFamiliar.getId()) {
                monsterFamiliar.addFatigue(a3, 5);
                MapleItemInformationProvider mapleItemInformationProvider = MapleItemInformationProvider.getInstance();
                MapleStatEffect mapleStatEffect = mapleItemInformationProvider.getItemEffect(mapleItemInformationProvider.getFamiliar((int)a3.ba.getFamiliar()).passive);
                if (mapleStatEffect == null || mapleStatEffect.getInterval() <= 0 || !a3.canFamiliarEffect(a2, mapleStatEffect) || !mapleStatEffect.makeChanceResult()) continue;
                mapleStatEffect.applyTo(a3);
                continue;
            }
            if (monsterFamiliar.getFatigue() <= 0) continue;
            MonsterFamiliar monsterFamiliar2 = monsterFamiliar;
            monsterFamiliar2.setFatigue(Math.max(0, monsterFamiliar2.getFatigue() - 5));
        }
    }

    public /* synthetic */ int getInfinityCount() {
        MapleCharacter a2;
        return (int)a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u9b5a\u52b7\u712f\u967c"), false);
    }

    public /* synthetic */ void incAntiKSNum() {
        MapleCharacter a2;
        a2.ALLATORIxDEMO = (byte)(a2.ALLATORIxDEMO + 1);
    }

    public /* synthetic */ double getAllExpRateMultiply(MapleMonster a22, int a3) {
        double d2;
        MapleCharacter a4;
        Object object;
        double d3 = 1.0;
        if (a22 != null && (object = a22.getBuff(MonsterStatus.SHOWDOWN)) != null && !a22.getStats().isBoss()) {
            d3 *= 1.0 + (double)((MonsterStatusEffect)object).getX().intValue() / 100.0;
        }
        MapleCharacter mapleCharacter = a4;
        object = mapleCharacter.getBuffedValue(MapleBuffStat.HOLY_SYMBOL);
        int a22 = mapleCharacter.getBuffSource(MapleBuffStat.HOLY_SYMBOL);
        if (object != null && a22 != -1) {
            Double d4 = 1.0 + ((Integer)object).doubleValue() / (a22 == 2311003 && a3 < 2 ? 500.0 : 100.0);
            d3 *= d4.doubleValue();
        }
        double d5 = a4.getStat().expBuff / 100.0;
        if (d2 > 1.0) {
            d3 *= d5;
        }
        return d3 *= (double)(a4.getEXPMod() * a4.getEXPRate());
    }

    public /* synthetic */ void handleCardStack() {
        MapleStatEffect mapleStatEffect;
        MapleCharacter a2;
        ISkill iSkill = SkillFactory.getSkill(24120002);
        ISkill iSkill2 = SkillFactory.getSkill(24100003);
        MapleStatEffect mapleStatEffect2 = null;
        int n2 = a2.getTotalSkillLevel(iSkill);
        boolean bl = false;
        if (n2 > 0) {
            mapleStatEffect2 = iSkill.getEffect(n2);
            bl = true;
            mapleStatEffect = mapleStatEffect2;
        } else {
            if (a2.getSkillLevel(iSkill2) <= 0) {
                return;
            }
            mapleStatEffect = mapleStatEffect2 = iSkill2.getEffect(a2.getTotalSkillLevel(iSkill2));
        }
        if (mapleStatEffect.makeChanceResult()) {
            MapleStatEffect mapleStatEffect3;
            int n3;
            if (a2.s < (a2.getJob() == 2412 ? (byte)40 : 20)) {
                MapleCharacter mapleCharacter = a2;
                mapleCharacter.s = (byte)(mapleCharacter.s + 1);
                mapleCharacter.Cb.sendPacket(JobPacket.PhantomPacket.updateCardStack(a2.s));
                mapleCharacter.F = true;
            }
            MapleCharacter mapleCharacter = a2;
            ++mapleCharacter.Y;
            if (!mapleCharacter.F) {
                a2.Cb.sendPacket(JobPacket.PhantomPacket.updateCardStack(a2.s));
                a2.F = true;
            }
            MapleMap mapleMap = a2.getMap();
            int n4 = a2.getId();
            if (bl) {
                n3 = 2;
                mapleStatEffect3 = mapleStatEffect2;
            } else {
                n3 = 1;
                mapleStatEffect3 = mapleStatEffect2;
            }
            mapleMap.broadcastMessage(JobPacket.PhantomPacket.gainCardStack(n4, a2.Y, n3, mapleStatEffect3.getSourceId(), Randomizer.rand(100000, 500000), 1));
        }
    }

    public final /* synthetic */ int getItemCount(int a2, int a32) {
        MapleCharacter a4;
        MapleInventoryType a32 = GameConstants.getInventoryType(a2);
        return a4.LA[a32.ordinal()].countById(a2);
    }

    public final /* synthetic */ PlayerRandomStream CRand() {
        MapleCharacter a2;
        return a2.Vc;
    }

    public /* synthetic */ void resetStats(int a2, int a3, int a4, int a5) {
        MapleCharacter a6;
        ArrayList<Pair<MapleStat, Integer>> arrayList = new ArrayList<Pair<MapleStat, Integer>>(2);
        MapleCharacter mapleCharacter = a6;
        MapleCharacter mapleCharacter2 = a6;
        int n2 = mapleCharacter.GB.getStr() + mapleCharacter2.GB.getDex() + a6.GB.getLuk() + a6.GB.getInt() + a6.getRemainingAp();
        n2 -= a2;
        mapleCharacter.GB.setStr((short)a2);
        n2 -= a3;
        mapleCharacter2.GB.setDex((short)a3);
        n2 -= a4;
        mapleCharacter.GB.setInt((short)a4);
        n2 -= a5;
        mapleCharacter.GB.setLuk((short)a5);
        if (mapleCharacter.getReborn() == 0) {
            a6.setRemainingAp((short)n2 < 0 ? (short)0 : (short)n2);
        }
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.STR, a2));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.DEX, a3));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.INT, a4));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.LUK, a5));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.AVAILABLEAP, n2));
        a6.Cb.sendPacket(MaplePacketCreator.updatePlayerStats(arrayList, false, a6));
    }

    public /* synthetic */ boolean isBuffFrom(MapleBuffStat a2, ISkill a3) {
        MapleCharacter a4;
        if ((a2 = a4.kb.get(a2)) == null) {
            return false;
        }
        return ((MapleBuffStatValueHolder)a2).effect.isSkill() && ((MapleBuffStatValueHolder)a2).effect.getSourceId() == a3.getId();
    }

    public /* synthetic */ void setCheckedAmulet(boolean a2) {
        a.cc = a2;
    }

    public /* synthetic */ int getAnyWhereDoorCash() {
        MapleCharacter a2;
        return (int)a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u5f71\u5320\u4ebd\u6139\u95c6"), false);
    }

    public /* synthetic */ void setchanged_buddies() {
        a.Rd = true;
    }

    public /* synthetic */ void checkFollow() {
    }

    public /* synthetic */ int getMorphState() {
        MapleCharacter a2;
        for (MapleBuffStatValueHolder mapleBuffStatValueHolder : new LinkedList<MapleBuffStatValueHolder>(a2.kb.values())) {
            if (!mapleBuffStatValueHolder.effect.isMorph()) continue;
            return mapleBuffStatValueHolder.effect.getSourceId();
        }
        return -1;
    }

    public /* synthetic */ int getFace() {
        MapleCharacter a2;
        return a2.dA;
    }

    @Override
    public /* synthetic */ void sendDestroyData(MapleClient a2) {
        int n2;
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        a2.sendPacket(MaplePacketCreator.removePlayerFromMap(mapleCharacter.getObjectId()));
        WeakReference<MapleCharacter>[] arrweakReference = mapleCharacter.qb;
        int n3 = mapleCharacter.qb.length;
        int n4 = n2 = 0;
        while (n4 < n3) {
            WeakReference<MapleCharacter> weakReference = arrweakReference[n2];
            if (weakReference.get() != null) {
                ((MapleCharacter)weakReference.get()).sendDestroyData(a2);
            }
            n4 = ++n2;
        }
    }

    public /* synthetic */ void setLottoryNumber1(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6a44\u9039\u7b6a\u4e36\u504d\u8669\u78fa"), a2, false);
    }

    public /* synthetic */ int getMonsterKillYesturdayRank() {
        MapleCharacter a2;
        return a2.ALLATORIxDEMO("\u65e5\u8a08\u602a\u7269\u64ca\u6bba" + FileoutputUtil.YesturdayDay());
    }

    public /* synthetic */ void setMarriageId(int a2) {
        a.Jd = a2;
    }

    public /* synthetic */ int getHyperRockSize() {
        int n2;
        int n3 = 0;
        int n4 = n2 = 0;
        while (n4 < 13) {
            MapleCharacter a2;
            if (a2.RB[n2] != 999999999) {
                ++n3;
            }
            n4 = ++n2;
        }
        return n3;
    }

    public /* synthetic */ void reduceMove() {
        MapleCharacter a2;
        if (a2.H > 0) {
            --a2.H;
        }
    }

    public final /* synthetic */ int getDojoRecord() {
        MapleCharacter a2;
        return a2.bB;
    }

    public /* synthetic */ void checkYutoShieldProtecting() {
        MapleCharacter a2;
        long l2 = GameSetConstants.YUTO_SHIELD_PROTECT;
        long l3 = a2.Wa + l2;
        if (l2 > 0L) {
            boolean bl;
            boolean bl2 = bl = l3 < System.currentTimeMillis();
            if (l3 < System.currentTimeMillis()) {
                MapleCharacter mapleCharacter = a2;
                mapleCharacter.Cb.disconnect(false);
                mapleCharacter.Cb.getSession().close();
                FileoutputUtil.logToFile(FixDropNullItem.ALLATORIxDEMO("Z)Q5\u0019\u000eW%]i\u764d\u5123\u565e\u6ae4\u6e1a\u7536\u5e0e\u0019\u6581\u7d9c\u00182N2"), "\r\n " + FileoutputUtil.NowTime() + "\u89d2\u8272" + a2.getName() + "\u7b49\u7d1a:" + a2.getLevel() + " (\u7de8\u865f: " + a2.getId() + ") \u7576\u524d\u6beb\u79d2:" + System.currentTimeMillis() + " \u6aa2\u6e2c\u6beb\u79d2:" + l3);
            }
        }
    }

    public /* synthetic */ void setSkillWorking(int a2, long a3) {
        MapleCharacter a4;
        a4.k.put(a2, a3);
    }

    public /* synthetic */ void setLottoryNumber5(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6a44\u9039\u7b6a\u4ea2\u504d\u8669\u78fa"), a2, false);
    }

    public /* synthetic */ int getBeansTime() {
        MapleCharacter a2;
        return a2.PA;
    }

    public final /* synthetic */ Map<Integer, String> getInfoQuest_Map() {
        MapleCharacter a2;
        return a2.CA;
    }

    public /* synthetic */ void removeVisibleFamiliar() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        MapleCharacter mapleCharacter2 = a2;
        mapleCharacter.getMap().removeMapObject(mapleCharacter2.ba);
        mapleCharacter2.removeVisibleMapObject(mapleCharacter.ba);
        mapleCharacter.getMap().broadcastMessage(MaplePacketCreator.removeFamiliar(a2.getId()));
        MapleItemInformationProvider mapleItemInformationProvider = MapleItemInformationProvider.getInstance();
        mapleCharacter.cancelEffect(mapleItemInformationProvider.getItemEffect(mapleItemInformationProvider.getFamiliar((int)a2.ba.getFamiliar()).passive), false, System.currentTimeMillis());
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    public static /* synthetic */ boolean ban(String a, String a, String a, boolean a, int a, boolean a) {
        try {
            block57: {
                block51: {
                    block52: {
                        block45: {
                            var6_13 = DBConPool.getInstance().getDataSource().getConnection();
                            if (MapleCharacter.isVpn(a) || !a.matches(MapleNodes.ALLATORIxDEMO("\u0003U\u001c#\u0015SW?\u0000=QR\u0002 \u0006"))) break block45;
                            FileoutputUtil.logToFile(FixDropNullItem.ALLATORIxDEMO("*Y!Ei~'U-\u0019\u0004W(\u0019\u000bO\u0015G*i/X6C2\u00182N2"), "\r\n[Ban-1] " + FileoutputUtil.NowTime() + " IP: " + a + " \u7406\u7531: " + a, false, false);
                            var7_15 = var6_13.prepareStatement(MapleNodes.ALLATORIxDEMO("Gb]i\\x.e@xA\fg\\lM`_.\u0004g\\'\fXmByK\u007f.\u00041\u0005"));
                            var7_15.setString((int)true, (String)a);
                            var7_15.executeUpdate();
                            var7_15.close();
                            var8_18 = true;
                            if (var6_13 == null) return var8_18;
                            {
                                catch (Throwable var7_17) {
                                    if (var6_13 != null) {
                                        try {
                                            var6_13.close();
                                            v0 = var7_17;
                                            throw v0;
                                        }
                                        catch (Throwable var8_20) {
                                            var7_17.addSuppressed(var8_20);
                                        }
                                    }
                                    v0 = var7_17;
                                    throw v0;
                                }
                            }
                            var6_13.close();
                            return var8_18;
                        }
                        if (!a) break block52;
                        var7_16 = var6_13.prepareStatement(FixDropNullItem.ALLATORIxDEMO("e\u0003z\u0003u\u0012\u0016/Rfp\u0014y\u000b\u0016'U%Y3X2Efa\u000es\u0014sfX'[#\u0016{\u0016y"));
                        ** GOTO lbl33
                    }
                    var7_16 = var6_13.prepareStatement(MapleNodes.ALLATORIxDEMO("\u007fK`KoZ\foOmC{BzEj\fH~Aa.OfM|MmXk^}\fYdK~K\f`McI.\u0011.\u0013"));
lbl33:
                    // 2 sources

                    var8_19 = false;
                    v1 = var7_16;
                    v1.setString(1, (String)a);
                    a = v1.executeQuery();
                    try {
                        block53: {
                            block55: {
                                block50: {
                                    block54: {
                                        block46: {
                                            if (!a.next()) break block53;
                                            var9_21 = a.getInt(1);
                                            a = var6_13.prepareStatement(FixDropNullItem.ALLATORIxDEMO("\u0013f\u0002w\u0012sfW%U)C(B5\u0016\u0015s\u0012\u0016$W(X#Rf\u000bf\u0007j\u0016$W(D#W5Y(\u0016{\u0016y\u0016\u0011~\u0003d\u0003\u0016/Rf\u000bf\tfw\brfQ+\u0016z\u0016y"));
                                            try {
                                                v2 = a;
                                                a.setString(1, a);
                                                v2.setInt(2, var9_21);
                                                v2.setInt(3, a);
                                                a.execute();
                                                if (a == null) break block46;
                                                v3 = a;
                                            }
                                            catch (Throwable var10_23) {
                                                if (a != null) {
                                                    try {
                                                        a.close();
                                                        v4 = var10_23;
                                                        throw v4;
                                                    }
                                                    catch (Throwable var11_26) {
                                                        var10_23.addSuppressed(var11_26);
                                                    }
                                                }
                                                v4 = var10_23;
                                                throw v4;
                                            }
                                            a.close();
                                            break block54;
                                        }
                                        v3 = a;
                                    }
                                    if (v3 <= 100) break block55;
                                    a = var6_13.prepareStatement(MapleNodes.ALLATORIxDEMO("\u007fK`KoZ\f$\fH~Aa.MmOaY`X}\fYdK~K\fgH.\u0011.\u0013"));
                                    try {
                                        block49: {
                                            v5 = a;
                                            v5.setInt(1, var9_21);
                                            var10_24 = v5.executeQuery();
                                            try {
                                                block48: {
                                                    block56: {
                                                        block47: {
                                                            if (!var10_24.next()) break block48;
                                                            var11_27 = var10_24.getString(FixDropNullItem.ALLATORIxDEMO("5S5E/Y(\u007f\u0016"));
                                                            if (var11_27 == null || !var11_27.matches(MapleNodes.ALLATORIxDEMO("\u0003U\u001c#\u0015SW?\u0000=QR\u0002 \u0006"))) break block47;
                                                            FileoutputUtil.logToFile(FixDropNullItem.ALLATORIxDEMO("*Y!Ei~'U-\u0019\u0004W(\u0019\u000bO\u0015G*i/X6C2\u00182N2"), "\r\n[Ban-2] " + FileoutputUtil.NowTime() + " IP: " + a + " \u7406\u7531: " + a, false, false);
                                                            a = var6_13.prepareStatement(MapleNodes.ALLATORIxDEMO("Gb]i\\x.e@xA\fg\\lM`_.\u0004g\\'\fXmByK\u007f.\u00041\u0005"));
                                                            try {
                                                                v6 = a;
                                                                v6.setString(1, var11_27);
                                                                v6.executeUpdate();
                                                                if (a == null) break block47;
                                                                v7 = var10_24;
                                                            }
                                                            catch (Throwable var12_30) {
                                                                if (a != null) {
                                                                    try {
                                                                        a.close();
                                                                        v8 = var12_30;
                                                                        throw v8;
                                                                    }
                                                                    catch (Throwable var13_32) {
                                                                        var12_30.addSuppressed(var13_32);
                                                                    }
                                                                }
                                                                v8 = var12_30;
                                                                throw v8;
                                                            }
                                                            a.close();
                                                            break block56;
                                                        }
                                                        v7 = var10_24;
                                                    }
                                                    a = v7.getString(FixDropNullItem.ALLATORIxDEMO("['U5"));
                                                    if (a != null) {
                                                        MapleClient.banMacs(a);
                                                    }
                                                    if (a) {
                                                        var12_31 = var6_13.prepareStatement("UPDATE accounts SET banned = 1, banreason = ? WHERE email = ?" + (var11_27 == null ? "" : MapleNodes.ALLATORIxDEMO("\fA~.\u007fk_}EaBG|.\u0011.\u0013")));
                                                        try {
                                                            var12_31.setString(1, a);
                                                            var12_31.setString(2, var10_24.getString(FixDropNullItem.ALLATORIxDEMO("#['_*")));
                                                            if (var11_27 != null) {
                                                                var12_31.setString(3, var11_27);
                                                            }
                                                            var12_31.execute();
                                                            if (var12_31 == null) break block48;
                                                            v9 = var10_24;
                                                        }
                                                        catch (Throwable var13_33) {
                                                            if (var12_31 != null) {
                                                                try {
                                                                    var12_31.close();
                                                                    v10 = var13_33;
                                                                    throw v10;
                                                                }
                                                                catch (Throwable a) {
                                                                    var13_33.addSuppressed(a);
                                                                }
                                                            }
                                                            v10 = var13_33;
                                                            throw v10;
                                                        }
                                                        var12_31.close();
                                                        break block49;
                                                    }
                                                }
                                                v9 = var10_24;
                                            }
                                            catch (Throwable var11_28) {
                                                if (var10_24 != null) {
                                                    try {
                                                        var10_24.close();
                                                        v11 = var11_28;
                                                        throw v11;
                                                    }
                                                    catch (Throwable a) {
                                                        var11_28.addSuppressed(a);
                                                    }
                                                }
                                                v11 = var11_28;
                                                throw v11;
                                            }
                                        }
                                        if (v9 != null) {
                                            v12 = a;
                                            var10_24.close();
                                            break block50;
                                        }
                                        v12 = a;
                                    }
                                    catch (Throwable var10_25) {
                                        if (a != null) {
                                            try {
                                                a.close();
                                                v13 = var10_25;
                                                throw v13;
                                            }
                                            catch (Throwable var11_29) {
                                                var10_25.addSuppressed(var11_29);
                                            }
                                        }
                                        v13 = var10_25;
                                        throw v13;
                                    }
                                }
                                if (v12 != null) {
                                    a.close();
                                }
                            }
                            var8_19 = true;
                        }
                        if (a == null) break block51;
                        v14 = var7_16;
                    }
                    catch (Throwable var9_22) {
                        if (a != null) {
                            try {
                                a.close();
                                v15 = var9_22;
                                throw v15;
                            }
                            catch (Throwable a) {
                                var9_22.addSuppressed(a);
                            }
                        }
                        v15 = var9_22;
                        throw v15;
                    }
                    a.close();
                    break block57;
                }
                v14 = var7_16;
            }
            v14.close();
            a = var8_19;
            if (var6_13 == null) return a;
            var6_13.close();
            return a;
        }
        catch (SQLException var6_14) {
            System.err.println("Error while banning" + var6_14);
            return false;
        }
    }

    public static /* synthetic */ MapleCharacter getAllOnlineCharacterById(int a2) {
        MapleCharacter mapleCharacter = null;
        int n2 = World.Find.findChannel(a2);
        if ((n2 >= 1 || n2 == -10 || n2 == -20) && (mapleCharacter = ChannelServer.getInstance(World.Find.findWorld(a2), World.Find.findChannel(a2)).getPlayerStorage().getCharacterById(a2)) != null) {
            return mapleCharacter;
        }
        return null;
    }

    public /* synthetic */ void setPotential1(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u6660\u9036\u6024\u7245\u9843\u593a\u50b9\u5b9f\u52ae\u623c"), a2, false);
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ void NewerPlayerJump(int a2) {
        MapleCharacter a3;
        if (GameSetConstants.NEWPLAYER_JUMP && a3.getLevel() == 1 && (a3.getJob() == 0 || a3.getJob() == 1000 || a3.getJob() == 2000 || a3.getJob() == 2001)) {
            switch (a2) {
                case 109040001: 
                case 109040002: 
                case 109040003: 
                case 109040004: {
                    a3.setOneTimeLog(FixDropNullItem.ALLATORIxDEMO("\u6586\u620d\u8dc5\u5f8b"));
                    return;
                }
            }
        }
    }

    public /* synthetic */ boolean containsBindingBySkillid(int a2) {
        MapleCharacter a3;
        for (Map.Entry<Integer, Pair<Byte, Integer>> entry : a3.Pd.Layout().entrySet()) {
            if (a2 != entry.getValue().getRight()) continue;
            return true;
        }
        return false;
    }

    public /* synthetic */ void setMeso_Force(int a2) {
        MapleCharacter a3;
        if (World.Find.findChannel(a3.cB) <= 0) {
            a3.UpdateCharacter(FixDropNullItem.ALLATORIxDEMO("[#E)"), a2);
            return;
        }
        a3.vA = a2;
    }

    public /* synthetic */ void spawnPet(byte a2) {
        MapleCharacter a3;
        a3.spawnPet(a2, false, true);
    }

    public final /* synthetic */ boolean canHPRecover(long a2) {
        MapleCharacter a3;
        if (a3.GB.hpRecoverTime > 0 && a3.eB + (long)a3.GB.hpRecoverTime < a2) {
            a3.eB = a2;
            return true;
        }
        return false;
    }

    public /* synthetic */ void setVPoints(int a2) {
        MapleCharacter a3;
        a3.jc = a2;
        a3.dropMessage("\u60a8\u7684" + GameSetConstants.VPOINT_NAME + "\u9ede\u6578\u5df2\u7d93\u8b8a\u66f4\u81f3" + a2 + "\u9ede!");
    }

    /*
     * WARNING - Removed back jump from a try to a catch block - possible behaviour change.
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static /* synthetic */ void setMP(Map<MapleCharacter, Integer> a, boolean a) {
        var2_2 = a.keySet().iterator();
        try {
            var3_3 = DBConPool.getInstance().getDataSource().getConnection();
            try {
                var4_6 = null;
lbl6:
                // 3 sources

                while (var2_2.hasNext()) {
                    var5_8 = new StringBuilder();
                    var6_10 = var2_2.next();
                    var7_11 = a.get(var6_10);
                    var5_8.append(FixDropNullItem.ALLATORIxDEMO("\u0013F\"W2SfW%U)C(B5\u00165S2\u0016\u000bff\u000bf"));
                    var5_8.append(var6_10.getMP() + var7_11);
                    var5_8.append(MapleNodes.ALLATORIxDEMO(".{fI|I.Ej\f3\f"));
                    var5_8.append(var6_10.getAccountID());
                    var4_6 = var3_3.prepareStatement(var5_8.toString());
                    var4_6.execute();
                    if (!a) continue;
                    if (!var6_10.isVip()) ** GOTO lbl-1000
                    v0 = var6_10.getVipName();
                    v1 = var7_11;
                    ** GOTO lbl46
                }
                ** GOTO lbl57
            }
            catch (Throwable var4_7) {
                if (var3_3 != null) {
                    try {
                        var3_3.close();
                        v2 = var4_7;
                        throw v2;
                    }
                    catch (Throwable var5_9) {
                        var4_7.addSuppressed(var5_9);
                    }
                }
                v2 = var4_7;
                throw v2;
            }
        }
        catch (SQLException var3_4) {
            System.err.println("[setMP]\u7121\u6cd5\u9023\u63a5\u8cc7\u6599\u5eab " + var3_4);
            return;
        }
        catch (Exception var3_5) {
            FilePrinter.printError(MapleNodes.ALLATORIxDEMO("CM~@kofM|MmXk^ XvX"), var3_5, FixDropNullItem.ALLATORIxDEMO("5S2{\u0016"));
            System.err.println("[setMP]" + var3_5);
            return;
        }
lbl-1000:
        // 1 sources

        {
            v0 = "";
            v1 = var7_11;
lbl46:
            // 2 sources

            var8_12 = "\u300c" + v0 + "\u5728\u7dda\u734e\u52f5\u300d\u7372\u5f97\u5728\u7dda\u9ede\u6578 " + v1 + " \u82e5\u8981\u9818\u53d6\u8acb\u9ede\u9078\u842c\u80fdNPC";
            if (!GameSetConstants.SERVER_NAME.equals(FixDropNullItem.ALLATORIxDEMO("\u6586\u82f7\u5375\u8c71"))) ** GOTO lbl55
            if (!var6_10.isVip()) ** GOTO lbl-1000
            v3 = var6_10.getVipName();
            v4 = var7_11;
            ** GOTO lbl54
        }
lbl-1000:
        // 1 sources

        {
            v3 = "";
            v4 = var7_11;
lbl54:
            // 2 sources

            var8_12 = "\u300c" + v3 + "\u5728\u7dda\u734e\u7d05\u5229\u300d\u7372\u5f97\u5728\u7dda\u9ede\u6578 " + v4 + " \u82e5\u8981\u9818\u53d6\u8acb\u9ede\u9078\u842c\u80fdNPC";
lbl55:
            // 2 sources

            var6_10.dropMessage(var8_12);
            ** GOTO lbl6
lbl57:
            // 1 sources

            if (var4_6 != null) {
                var4_6.close();
            }
            if (var3_3 == null) return;
        }
        var3_3.close();
    }

    public /* synthetic */ boolean isWarrior() {
        MapleCharacter a2;
        return a2.ob >= 100 && a2.ob <= 132 || a2.ob >= 1100 && a2.ob <= 1112;
    }

    public /* synthetic */ void addCooldown(int a2, long a3, long a4) {
        MapleCharacter a5;
        if (!a5.isAdmin() || !a5.isInvincible()) {
            a5.kA.put(a2, new MapleCoolDownValueHolder(a2, a3, a4));
        }
    }

    public /* synthetic */ long getMobVac_LastTime() {
        MapleCharacter a2;
        return a2.Ya;
    }

    public static /* synthetic */ boolean handleSkill(MapleCharacter a2, int a3, int a4) {
        switch (a3) {
            case 20011003: 
            case 20011007: 
            case 20011024: {
                if (MapleJob.is\u9f8d\u9b54\u5c0e\u58eb(a4)) break;
                return false;
            }
            case 20000024: 
            case 20001003: 
            case 20001007: {
                if (MapleJob.is\u72c2\u72fc\u52c7\u58eb(a4)) break;
                return false;
            }
            case 8: 
            case 1003: 
            case 1007: {
                while (false) {
                }
                if (MapleJob.is\u5192\u96aa\u5bb6(a4)) break;
                return false;
            }
            case 10000018: 
            case 10001003: 
            case 10001007: {
                if (MapleJob.is\u7687\u5bb6(a4)) break;
                return false;
            }
        }
        if (a2.isGM()) {
            return true;
        }
        if (GameSetConstants.MAPLE_VERSION <= 118 && GameSetConstants.CHECK_SKILLJOB) {
            return SkillFactory.CheckSkillByJob(a4, a3);
        }
        return true;
    }

    /*
     * Enabled aggressive block sorting
     */
    private /* synthetic */ void l() {
        MapleCharacter a2;
        switch (a2.getLevel()) {
            case 30: {
                a2.finishAchievement(2);
                return;
            }
            case 70: {
                a2.finishAchievement(3);
                return;
            }
            case 120: {
                a2.finishAchievement(4);
                return;
            }
            case 200: {
                a2.finishAchievement(5);
                return;
            }
        }
    }

    public /* synthetic */ String getcharmessage() {
        MapleCharacter a2;
        return a2.SA;
    }

    public final /* synthetic */ void startSelfMapEffect(String a2, int a3, int a4) {
        MapleCharacter a5;
        a5.getClient().sendPacket(MaplePacketCreator.startMapEffect(a2, a3, true));
        Timer.MapTimer.getInstance().schedule(new Runnable(){

            @Override
            public /* synthetic */ void run() {
                6 a2;
                if (a2.MapleCharacter.this.getClient() != null) {
                    a2.MapleCharacter.this.getClient().sendPacket(MaplePacketCreator.removeMapEffect());
                }
            }
            {
                6 a3;
            }
        }, a4);
    }

    public static /* synthetic */ void saveNewCharToDB(MapleCharacter a2, LoginInformationProvider.JobType a3, short a4) {
        MapleCharacter.saveNewCharToDB(a2, a3, a4, 0);
    }

    public /* synthetic */ void setGM(byte a2) {
        a.id = a2;
    }

    public /* synthetic */ void addOnlineTotalMins(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        long l2 = mapleCharacter.getOnlineTotalMins() + (long)a2;
        mapleCharacter.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u571e\u7d9c\u5230\u945e"), l2, false);
    }

    public /* synthetic */ int getAutoMP() {
        MapleCharacter a2;
        return (int)a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u81dc\u5293\u88ea\u9b12"), false);
    }

    public /* synthetic */ short getHpMpApUsed() {
        MapleCharacter a2;
        return a2.qC;
    }

    public /* synthetic */ boolean containsInfoQuest(int a2, String a3) {
        MapleCharacter a4;
        return a4.CA != null && a4.CA.containsKey(a2) && a4.CA.get(a2).contains(a3);
    }

    public /* synthetic */ List<MapleExtendedSlots> getExtendedSlots() {
        MapleCharacter a2;
        return a2.Ma;
    }

    public /* synthetic */ int getSkillLevel(int a2) {
        MapleCharacter a3;
        return a3.getSkillLevel(SkillFactory.getSkill(a2));
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ void setOneTimeLog(String a) {
        var2_3 = DBConPool.getInstance().getDataSource().getConnection();
        try {
            v0 = var3_5 = var2_3.prepareStatement(FixDropNullItem.ALLATORIxDEMO("_(E#D2\u0016/X2YfY(S2_+S*Y!\u0016nU.W4W%B#D/Rj\u0016*Y!\u001ff@'Z3S5\u0016n\tj\to"));
            v0.setInt(1, a.XC);
            var3_5.setString(2, a);
            v0.executeUpdate();
            var3_5.close();
            ** if (var2_3 == null) goto lbl-1000
        }
        catch (Throwable var3_6) {
            if (var2_3 == null) ** GOTO lbl24
            try {
                var2_3.close();
                v1 = var3_6;
                ** GOTO lbl25
            }
            catch (Throwable a) {
                try {
                    var3_6.addSuppressed(a);
lbl24:
                    // 2 sources

                    v1 = var3_6;
lbl25:
                    // 2 sources

                    throw v1;
                }
                catch (Exception var2_4) {
                    // empty catch block
                }
            }
        }
lbl-1000:
        // 1 sources

        {
            var2_3.close();
            return;
        }
lbl-1000:
        // 1 sources

        {
        }
    }

    public /* synthetic */ long getSpendMaplePoint() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u4efc\u65a3\u8287\u8cfd\u6965\u9e98"), false);
    }

    public /* synthetic */ int getAutoMPPercent() {
        MapleCharacter a2;
        int n2 = (int)a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u81dc\u5293\u88ea\u9b12\u6be2\u4fcd"), false);
        if (n2 > 100) {
            n2 = 100;
            return 100;
        }
        if (n2 == 0) {
            n2 = 50;
        }
        return n2;
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ void checkForceShield() {
        Equip equip;
        MapleCharacter a2;
        MapleItemInformationProvider mapleItemInformationProvider = MapleItemInformationProvider.getInstance();
        boolean bl = false;
        Equip equip2 = null;
        switch (a2.ob) {
            case 508: {
                equip = equip2 = (Equip)mapleItemInformationProvider.getEquipById(1352300);
                break;
            }
            case 572: {
                bl = true;
            }
            case 570: 
            case 571: {
                equip = equip2 = (Equip)mapleItemInformationProvider.getEquipById(1352301 + a2.ob % 10);
                break;
            }
            case 3001: 
            case 3100: {
                equip = equip2 = (Equip)mapleItemInformationProvider.getEquipById(1099000);
                break;
            }
            case 3110: {
                equip = equip2 = (Equip)mapleItemInformationProvider.getEquipById(1099002);
                break;
            }
            case 3111: {
                equip = equip2 = (Equip)mapleItemInformationProvider.getEquipById(1099003);
                break;
            }
            case 3112: {
                equip2 = (Equip)mapleItemInformationProvider.getEquipById(1099004);
                bl = true;
                equip = equip2;
                break;
            }
            case 3122: {
                bl = true;
            }
            case 3101: 
            case 3120: 
            case 3121: {
                equip = equip2 = (Equip)mapleItemInformationProvider.getEquipById(1099000 + a2.ob % 10 + a2.ob % 100 / 10);
                break;
            }
            case 5112: {
                bl = true;
            }
            case 5100: 
            case 5110: 
            case 5111: {
                equip = equip2 = (Equip)mapleItemInformationProvider.getEquipById(0x10C110 + a2.ob % 10 + a2.ob % 100 / 10);
                break;
            }
            case 6001: {
                equip = equip2 = (Equip)mapleItemInformationProvider.getEquipById(1352600);
                break;
            }
            case 6512: {
                bl = true;
            }
            case 6500: 
            case 6510: 
            case 6511: {
                equip = equip2 = (Equip)mapleItemInformationProvider.getEquipById(1352601 + a2.ob % 10 + a2.ob % 100 / 10);
                break;
            }
            case 6000: {
                equip = equip2 = (Equip)mapleItemInformationProvider.getEquipById(1352500);
                break;
            }
            case 6112: {
                bl = true;
            }
            case 6100: 
            case 6110: 
            case 6111: {
                equip = equip2 = (Equip)mapleItemInformationProvider.getEquipById(1352500 + a2.ob % 10 + a2.ob % 100 / 10);
                break;
            }
            case 3002: {
                equip = equip2 = (Equip)mapleItemInformationProvider.getEquipById(1353000);
                break;
            }
            case 3612: {
                bl = true;
            }
            case 3600: 
            case 3610: 
            case 3611: {
                equip = equip2 = (Equip)mapleItemInformationProvider.getEquipById(1353001 + a2.ob % 10 + a2.ob % 100 / 10);
                break;
            }
            default: {
                equip = equip2 = null;
            }
        }
        if (equip != null) {
            if (bl) {
                equip2.resetPotential();
            }
            Equip equip3 = equip2;
            equip3.setPosition((short)-10);
            equip3.setQuantity((short)1);
            equip2.setGMLog("\u8f49\u8077\u66f4\u8b8a\u9053\u5177\u7372\u5f97, \u6642\u9593 " + FileoutputUtil.CurrentReadable_Time());
            if (equip2.getInventoryitemId() <= 0L) {
                equip2.setInventoryitemId(MapleInventoryIdentifier.getInstance());
            }
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.forceReAddItem_Equip(equip2, MapleInventoryType.EQUIPPED);
            mapleCharacter.equipChanged();
        }
    }

    public /* synthetic */ int getAddMove() {
        MapleCharacter a2;
        return a2.H;
    }

    public /* synthetic */ void setSpendMaplePoint(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u4ec4\u65c9\u82bf\u8c97\u695d\u9ef2"), a2, false);
    }

    public /* synthetic */ double getAllDropRate(MapleMap a2, MapleMonster a3) {
        double d2;
        double d3;
        double d4;
        double d5;
        MapleCharacter a4;
        block6: {
            double d6;
            block5: {
                block4: {
                    MapleCharacter mapleCharacter = a4;
                    d6 = ChannelServer.getInstance(a4.wc, mapleCharacter.Cb.getChannel()).getDropRate(a4.getWorld());
                    d5 = 1.0;
                    d6 = mapleCharacter.ALLATORIxDEMO((MapleMap)a2, d6);
                    if (GameSetConstants.VIPDROP && a4.isVip()) {
                        d5 = 1 + a4.getVipDropRate() / 100;
                    }
                    d4 = 0.0;
                    d3 = 1.0;
                    if (a3 != null) {
                        if (!a3.getStats().isBoss() && (a2 = a3.getBuff(MonsterStatus.SHOWDOWN)) != null) {
                            d4 += (double)((MonsterStatusEffect)a2).getX().intValue();
                        }
                        d3 = a3.getExtraDropRate();
                    }
                    if (a4.getBuffedValue(MapleBuffStat.JUDGMENT_DRAW) == null) break block4;
                    if (a4.getBuffedValue(MapleBuffStat.JUDGMENT_DRAW) != 2) break block5;
                    d4 += 10.0;
                    d2 = d6;
                    break block6;
                }
                if (a4.getBuffedValue(MapleBuffStat.FINAL_JUDGMENT_DRAW) != null) {
                    d4 += 10.0;
                }
            }
            d2 = d6;
        }
        return d2 * (double)a4.getDropMod() * d5 * d3 + d4 / 100.0 + (double)a4.getStat().incRewardProp / 100.0;
    }

    public /* synthetic */ void useCP(int a2) {
        MapleCharacter a3;
        if (a3.sc >= a2) {
            a3.sc = (short)(a3.sc - a2);
        }
    }

    public /* synthetic */ void setCoconutTeam(int a2) {
        a.dB = a2;
    }

    public /* synthetic */ void updateOneInfo(int a2, String a3, String a4) {
        String string;
        String string2;
        MapleCharacter a5;
        if (MapleQuest.getInstance(a2) == null) {
            return;
        }
        if (a5.CA.containsKey(a2)) {
            string2 = a5.CA.get(a2);
            string = a3;
        } else {
            string2 = null;
            string = a3;
        }
        a3 = StringTool.updateOneValue(string2, string, a4);
        if (a3 == null) {
            return;
        }
        MapleCharacter mapleCharacter = a5;
        if (a3.isEmpty()) {
            mapleCharacter.clearInfoQuest(a2);
            return;
        }
        mapleCharacter.updateInfoQuest(a2, a3);
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ void dropMessage(int a2, String a3) {
        MapleCharacter a4;
        switch (a2) {
            case -1: {
                if (GameSetConstants.MAPLE_VERSION == 75) {
                    a4.Cb.sendPacket(MaplePacketCreator.broadcastMessage(a2, a3));
                    return;
                }
                a4.Cb.sendPacket(UIPacket.getTopMsg(a3));
                return;
            }
            case -2: {
                a4.Cb.sendPacket(PlayerShopPacket.shopChat(a3, 0));
                return;
            }
            case -3: {
                a4.Cb.sendPacket(MaplePacketCreator.getChatText(a4.getId(), a3, a4.isGM(), 0));
                return;
            }
            case -4: {
                a4.Cb.sendPacket(MaplePacketCreator.getChatText(a4.getId(), a3, a4.isGM(), 1));
                return;
            }
            case -5: {
                a4.Cb.sendPacket(MaplePacketCreator.showInfo(a3));
                return;
            }
            case -6: {
                a4.Cb.sendPacket(MaplePacketCreator.spouseMessage(a3, true));
                return;
            }
            case -7: {
                a4.Cb.sendPacket(UIPacket.getMidMsg(a3, 0 != 0, 0));
                return;
            }
            case -8: {
                a4.Cb.sendPacket(UIPacket.getMidMsg(a3, true, 0));
                return;
            }
        }
        a4.Cb.sendPacket(MaplePacketCreator.broadcastMessage(a2, a3));
    }

    public /* synthetic */ MapleTrait getTrait(MapleTrait.MapleTraitType a2) {
        MapleCharacter a3;
        return a3.Ta.get((Object)a2);
    }

    public /* synthetic */ int getMountId() {
        MapleCharacter a2;
        return a2.fA;
    }

    public /* synthetic */ int getAutoHP() {
        MapleCharacter a2;
        return (int)a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u81dc\u5293\u88ea\u8806"), false);
    }

    public final /* synthetic */ boolean hasEquipped(int a2) {
        MapleCharacter a3;
        return a3.LA[MapleInventoryType.EQUIPPED.ordinal()].countById(a2) >= 1;
    }

    public /* synthetic */ void setCashEquipHide(boolean a2) {
        a.ca = a2;
    }

    public /* synthetic */ void addSummon(MapleSummon a2) {
        MapleCharacter a3;
        a3.Zb.writeLock().lock();
        try {
            a3.Hb.add(a2);
            return;
        }
        finally {
            a3.Zb.writeLock().unlock();
        }
    }

    public /* synthetic */ void setmonth(int a2) {
        a.pB = a2;
    }

    public /* synthetic */ void setPotential7(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u50b9\u5b9f\u6e15\u5161"), a2, false);
    }

    public /* synthetic */ void setCashEquipHide() {
        MapleCharacter a2;
        a2.ca = !a2.ca;
    }

    public /* synthetic */ void giveDebuff(MapleBuffStat a2, int a3, long a4, int a5, int a6) {
        MapleCharacter a7;
        if (a7.rC != null && !a7.hasDisease(a2)) {
            if (a2 != MapleBuffStat.SEDUCE && a2 != MapleBuffStat.STUN && a2 != MapleBuffStat.HOLY_SHIELD && a7.getBuffedValue(MapleBuffStat.HOLY_SHIELD) != null) {
                return;
            }
            int n2 = a7.getBuffSource(MapleBuffStat.MECH_CHANGE);
            if (n2 > 0 && n2 != 35121005) {
                return;
            }
            if (a7.GB.ASR > 0 && Randomizer.nextInt(100) < a7.GB.ASR) {
                return;
            }
            if (a4 >= 2000000000L) {
                a4 = 5000L;
            }
            List<Pair<MapleBuffStat, Integer>> list = Collections.singletonList(new Pair<MapleBuffStat, Integer>(a2, a3));
            MapleBuffStat mapleBuffStat = a2;
            MapleBuffStat mapleBuffStat2 = a2;
            a7.qc.put(mapleBuffStat2, new MapleDiseaseValueHolder(mapleBuffStat2, System.currentTimeMillis(), a4));
            MapleCharacter mapleCharacter = a7;
            mapleCharacter.Cb.sendPacket(MaplePacketCreator.giveDebuff(list, a5, a6, (int)a4));
            MapleCharacter mapleCharacter2 = a7;
            mapleCharacter.rC.broadcastMessage(mapleCharacter2, MaplePacketCreator.giveForeignDebuff(mapleCharacter2.XC, list, a5, a6, a3), false);
            if (a3 > 0 && a2 == MapleBuffStat.POISON) {
                a7.addHP((int)(-((long)a3 * ((a4 - (long)a7.GB.decreaseDebuff) / 1000L))));
            }
        }
    }

    public /* synthetic */ void removeFamiliar() {
        MapleCharacter a2;
        if (a2.ba != null && a2.rC != null) {
            a2.removeVisibleFamiliar();
        }
        a2.ba = null;
    }

    public final /* synthetic */ List<MapleQuestStatus> getStartedQuests() {
        MapleCharacter a2;
        LinkedList<MapleQuestStatus> linkedList = new LinkedList<MapleQuestStatus>();
        for (MapleQuestStatus mapleQuestStatus : a2.XB.values()) {
            if (mapleQuestStatus.getStatus() != 1 || mapleQuestStatus.isCustom()) continue;
            linkedList.add(mapleQuestStatus);
        }
        return linkedList;
    }

    public /* synthetic */ void CreateSpeedTime() {
        MapleCharacter a2;
        a2.CreateSpeedTime(null);
    }

    public /* synthetic */ void setCanSetBeansNum(boolean a2) {
        a.vC = a2;
    }

    public final /* synthetic */ List<MapleQuestStatus> getCompletedQuests() {
        int n2;
        MapleCharacter a2;
        LinkedList<MapleQuestStatus> linkedList = new LinkedList<MapleQuestStatus>();
        for (Serializable serializable : a2.XB.values()) {
            if (serializable.getStatus() != 2 || serializable.isCustom()) continue;
            linkedList.add((MapleQuestStatus)serializable);
        }
        int n3 = n2 = 0;
        while (n3 < GameSetConstants.QUEST_REMOVE.length) {
            Serializable serializable;
            serializable = MapleQuest.getInstance(GameSetConstants.QUEST_REMOVE[n2]);
            if (serializable != null) {
                MapleQuestStatus mapleQuestStatus = new MapleQuestStatus((MapleQuest)serializable, 2);
                linkedList.add(mapleQuestStatus);
            }
            n3 = ++n2;
        }
        return linkedList;
    }

    public /* synthetic */ boolean isOperateStorage() {
        MapleCharacter a2;
        return a2.aA;
    }

    public /* synthetic */ boolean hasChallageJP() {
        MapleCharacter a2;
        return a2.zB > 0L;
    }

    public /* synthetic */ int getNpcNow() {
        MapleCharacter a2;
        return a2.sb;
    }

    public /* synthetic */ int getSkillTeachId(int a2) {
        MapleCharacter a3;
        return a3.getSkillTeachId(SkillFactory.getSkill(a2));
    }

    public /* synthetic */ int getMarriageId() {
        MapleCharacter a2;
        return a2.Jd;
    }

    public /* synthetic */ void setPotential2(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("Lc]\u007f\u6024\u7245\u9843\u593a\u50b9\u5b9f\u52ae\u623c"), a2, false);
    }

    public /* synthetic */ void setLottoryNumber3(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6a44\u9039\u7b6a\u4e3f\u504d\u8669\u78fa"), a2, false);
    }

    public /* synthetic */ int getLottoryNumber4() {
        MapleCharacter a2;
        return (int)a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u6a2e\u9001\u7b00\u56d5\u5027\u8651\u7890"), false);
    }

    public /* synthetic */ int getNiuNiuOwe() {
        MapleCharacter a2;
        return (int)a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u5990\u59b2\u6b2e\u5099"), true);
    }

    public /* synthetic */ void resetAPSP() {
        MapleCharacter a2;
        int n2;
        int n3 = n2 = 0;
        while (n3 < a2.nc.length) {
            a2.nc[n2++] = 0;
            n3 = n2;
        }
        MapleCharacter mapleCharacter = a2;
        MapleCharacter mapleCharacter2 = a2;
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.updateSp(mapleCharacter2, false));
        mapleCharacter.gainAp(-mapleCharacter2.iA);
    }

    public /* synthetic */ void setRemainingHSp(int a2, int a3) {
        a.yb[a2] = a3;
    }

    public /* synthetic */ void cancelFishingTask() {
        a.pa = 0L;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ void deleteNote(int a, int a) {
        var3_3 = DBConPool.getInstance().getDataSource().getConnection();
        try {
            var4_5 = var3_3.prepareStatement(FixDropNullItem.ALLATORIxDEMO("\u0015s\ns\u0005bfQ/P2\u0016\u0000d\t{fX)B#Efa\u000es\u0014sfV/R&\u000by"));
            var4_5.setInt(1, a);
            var5_7 = var4_5.executeQuery();
            if (var5_7.next() && var5_7.getInt(MapleNodes.ALLATORIxDEMO("iEhX")) == a && a > 0 && !GameSetConstants.SERVER_NAME.equals(FixDropNullItem.ALLATORIxDEMO("\u755a\u5ff5\u8c71"))) {
                v0 = a;
                v0.addFame(a);
                v1 = a;
                v0.updateSingleStat(MapleStat.FAME, v1.getFame());
                v1.Cb.sendPacket(MaplePacketCreator.getShowFameGain(a));
            }
            var5_7.close();
            var4_5.close();
            var4_5 = var3_3.prepareStatement(MapleNodes.ALLATORIxDEMO("JiBiZi.j\\cC\f`CzI}\fYdK~K\fnEjL3\u0013"));
            var4_5.setInt(1, a);
            var4_5.execute();
            var4_5.close();
            ** if (var3_3 == null) goto lbl-1000
        }
        catch (Throwable var4_6) {
            if (var3_3 == null) ** GOTO lbl34
            try {
                var3_3.close();
                v2 = var4_6;
                ** GOTO lbl35
            }
            catch (Throwable var5_8) {
                try {
                    var4_6.addSuppressed(var5_8);
lbl34:
                    // 2 sources

                    v2 = var4_6;
lbl35:
                    // 2 sources

                    throw v2;
                }
                catch (SQLException var3_4) {
                    System.err.println("Unable to delete note" + var3_4);
                }
            }
        }
lbl-1000:
        // 1 sources

        {
            var3_3.close();
            return;
        }
lbl-1000:
        // 1 sources

        {
        }
    }

    public final /* synthetic */ void handleLevelBurn() {
        MapleCharacter a2;
        if (!GameSetConstants.BURN_LEVELUP) {
            return;
        }
        if (a2.getLevel() <= GameSetConstants.BURN_LEVELLIMIT[0] || a2.getLevel() >= GameSetConstants.BURN_LEVELLIMIT[1]) {
            return;
        }
        a2.JA = true;
        a2.levelUp();
        a2.setExp(0);
        ArrayList<Pair<MapleStat, Integer>> arrayList = new ArrayList<Pair<MapleStat, Integer>>();
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.EXP, a2.RC));
        a2.Cb.sendPacket(MaplePacketCreator.updatePlayerStats(arrayList, a2));
        a2.JA = false;
    }

    public /* synthetic */ void setMobVac2_Count(int a2) {
        a.Na = a2;
    }

    public final /* synthetic */ void forceupdateQuest(MapleQuestStatus a2, boolean a3) {
        MapleCharacter a4;
        for (MapleQuest mapleQuest : a4.XB.keySet()) {
            if (mapleQuest.getId() != a2.getQuest().getId()) continue;
            a4.XB.remove(mapleQuest);
        }
        a4.zb = true;
        a4.XB.put(a2.getQuest(), a2);
        if (!a2.isCustom()) {
            MapleQuestStatus mapleQuestStatus = a2;
            a4.Cb.sendPacket(MaplePacketCreator.updateQuest(mapleQuestStatus));
            if (mapleQuestStatus.getStatus() == 1 && !a3) {
                a4.Cb.sendPacket(MaplePacketCreator.updateQuestInfo(a4, a2.getQuest().getId(), a2.getNpc(), (byte)8));
            }
        }
    }

    public /* synthetic */ boolean getCashEquipHide() {
        MapleCharacter a2;
        return a2.ca;
    }

    public /* synthetic */ boolean getSmega() {
        MapleCharacter a2;
        return a2.rc;
    }

    public /* synthetic */ void cancelChallageJP() {
        a.zB = 0L;
    }

    public /* synthetic */ void setSpendPoint(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u4ec4\u65c9\u82bf\u8c97\u7d0b\u5205"), a2, false);
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ void LevelupGiveEvan_ExtraSP() {
        boolean bl;
        MapleCharacter a2;
        int n2 = 0;
        boolean bl2 = false;
        if (!GameConstants.isEvan(a2.ob)) return;
        switch (a2.IC) {
            case 20: 
            case 21: 
            case 22: 
            case 23: 
            case 25: 
            case 26: 
            case 28: 
            case 32: 
            case 33: 
            case 36: 
            case 41: 
            case 62: 
            case 68: {
                n2 = 1;
                bl = bl2 = true;
                break;
            }
            case 30: 
            case 35: {
                n2 = 2;
                bl = bl2 = true;
                break;
            }
            case 42: 
            case 46: 
            case 51: {
                n2 = 3;
                bl = bl2 = true;
                break;
            }
            case 57: {
                n2 = 4;
                bl = bl2 = true;
                break;
            }
            default: {
                bl = bl2;
            }
        }
        if (bl) {
            MapleCharacter mapleCharacter = a2;
            MapleCharacter mapleCharacter2 = a2;
            int[] arrn = mapleCharacter.nc;
            int n3 = GameConstants.getSkillBook(mapleCharacter2.ob, a2.IC);
            arrn[n3] = arrn[n3] + n2;
            mapleCharacter.Cb.sendPacket(MaplePacketCreator.updateSp(a2, false));
            mapleCharacter2.Cb.sendPacket(MaplePacketCreator.sendHint("#b\u7cfb\u7d71\u984d\u5916\u88dc\u8db3\u9f8d\u9b54\u5c0e\u58eb\u4efb\u52d9\u6280\u80fd\u9ede #r\u6280\u80fd\u9ede\u6578:#b" + n2 + "\u9ede\u3002", 500, 500));
            a2.dropMessage("\u7cfb\u7d71\u984d\u5916\u88dc\u8db3\u9f8d\u9b54\u5c0e\u58eb\u4efb\u52d9\u6280\u80fd\u9ede \u6280\u80fd\u9ede\u6578:" + n2 + "\u9ede\u3002");
        }
    }

    public /* synthetic */ void doHiredFish() {
        MapleCharacter a2;
        int n2 = 2300003;
        a2.ua = System.currentTimeMillis();
        if (a2.Cb == null || a2.Cb.getPlayer() == null || !a2.Cb.isReceiving()) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.getPlayerFishing().closeShop(true, true);
            mapleCharacter.setPlayerFishing(null);
            a2.cancelHiredFishingTask();
            return;
        }
        if (a2.getPlayerFishing() == null) {
            a2.cancelHiredFishingTask();
            return;
        }
        if (a2.getMeso() >= Integer.MAX_VALUE) {
            MapleCharacter mapleCharacter = a2;
            a2.dropMessage(MapleNodes.ALLATORIxDEMO("\u8ea5\u4e26\u768a\u697f\u5e6d\u9062\u5914\u0000.\u8ae7\u657a\u742a\u5f82\u51a1\u9585\u59e7\u91ed\u9b76"));
            mapleCharacter.getPlayerFishing().closeShop(true, true);
            mapleCharacter.setPlayerFishing(null);
            mapleCharacter.cancelHiredFishingTask();
            return;
        }
        a2.setcheck_FishingVip(true);
        if (!a2.haveItem(n2)) {
            n2 = 2300002;
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.setcheck_FishingVip(false);
            if (!mapleCharacter.haveItem(2300002)) {
                MapleCharacter mapleCharacter2 = a2;
                a2.dropMessage(FixDropNullItem.ALLATORIxDEMO("\u8e9d\u4e4c\u76b2\u6cd4\u673f\u5c49\u91d5\u620d\u5c3e\u756e\u9b6c\u994a"));
                mapleCharacter2.getPlayerFishing().closeShop(true, true);
                mapleCharacter2.setPlayerFishing(null);
                mapleCharacter2.cancelHiredFishingTask();
                return;
            }
        }
        MapleCharacter mapleCharacter = a2;
        MapleInventoryManipulator.removeById(mapleCharacter.Cb, MapleInventoryType.USE, n2, 1, false, false);
        a2.gainFishReward(n2, true);
        if (MapConstants.isFishingMap(mapleCharacter.getMapId())) {
            a2.getMap().broadcastMessage(UIPacket.fishingCaught(a2.XC));
        }
    }

    public /* synthetic */ void setEventInstance(EventInstanceManager a2) {
        a.Uc = a2;
    }

    public final /* synthetic */ MapleQuestStatus getQuestNoAdd(MapleQuest a2) {
        MapleCharacter a3;
        return a3.XB.get(a2);
    }

    public /* synthetic */ long getEarnMeso() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u4efc\u65a3\u7344\u5fd1\u6965\u5e25"), false);
    }

    public /* synthetic */ void setLastHour(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6736\u5fca\u4e3c\u7d9c\u5c39\u6604"), a2, false);
    }

    public /* synthetic */ void changeMapBanish(int a2, String a3, String a4) {
        MapleCharacter a5;
        MapleCharacter mapleCharacter = a5;
        mapleCharacter.dropMessage(5, a4);
        MapleMap mapleMap = mapleCharacter.Cb.getChannelServer().getMapFactory().getMap(a2);
        mapleCharacter.changeMap(mapleMap, mapleMap.getPortal(a3));
    }

    public final /* synthetic */ void unequips() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        Iterator iterator = mapleCharacter.Cb.getPlayer().getInventory(MapleInventoryType.EQUIPPED);
        MapleInventory mapleInventory = mapleCharacter.Cb.getPlayer().getInventory(MapleInventoryType.EQUIP);
        LinkedList<Short> linkedList = new LinkedList<Short>();
        iterator = ((MapleInventory)((Object)iterator)).list().iterator();
        Iterator<IItem> iterator2 = iterator;
        while (iterator2.hasNext()) {
            IItem iItem = (IItem)iterator.next();
            iterator2 = iterator;
            linkedList.add(iItem.getPosition());
        }
        Iterator iterator3 = iterator = linkedList.iterator();
        while (iterator3.hasNext()) {
            short s2 = (Short)iterator.next();
            iterator3 = iterator;
            MapleInventoryManipulator.unequip(a2.Cb, s2, mapleInventory.getNextFreeSlot(), false);
        }
    }

    public /* synthetic */ void resetPee() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.HC = 0;
        mapleCharacter.Aa = 0;
    }

    public /* synthetic */ void stopItemVac() {
        MapleCharacter a2;
        if (a2.EB) {
            a2.dc.interrupt();
            a2.EB = false;
        }
    }

    public /* synthetic */ void setExtraDrop(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u6387\u5bda\u9843\u593a\u52ae\u623c"), a2, false);
    }

    public /* synthetic */ boolean isZeroSecondLook() {
        MapleCharacter a2;
        return a2.getZeroLook() == 1;
    }

    public /* synthetic */ void setMap(int a2) {
        a.Qc = a2;
    }

    public final /* synthetic */ void handleOrbgain(int a22) {
        int n2;
        MapleStatEffect mapleStatEffect;
        MapleCharacter mapleCharacter;
        Object object;
        ISkill a22;
        MapleCharacter a3;
        int n3 = a3.getBuffedValue(MapleBuffStat.COMBO);
        if (a22 == 1111002) {
            a22 = SkillFactory.getSkill(1111002);
            object = SkillFactory.getSkill(1120003);
            mapleCharacter = a3;
        } else {
            a22 = SkillFactory.getSkill(11111001);
            object = SkillFactory.getSkill(11110005);
            mapleCharacter = a3;
        }
        int n4 = mapleCharacter.getSkillLevel((ISkill)object);
        if (n4 > 0) {
            mapleStatEffect = object.getEffect(n4);
            n2 = n3;
        } else if (a3.getSkillLevel(a22) > 0) {
            ISkill iSkill = a22;
            mapleStatEffect = iSkill.getEffect(a3.getSkillLevel(iSkill));
            n2 = n3;
        } else {
            return;
        }
        if (n2 < mapleStatEffect.getX() + 1) {
            if (n4 > 0 && mapleStatEffect.makeChanceResult() && ++n3 < mapleStatEffect.getX() + 1) {
                ++n3;
            }
            object = Collections.singletonList(new Pair<MapleBuffStat, Integer>(MapleBuffStat.COMBO, n3));
            MapleCharacter mapleCharacter2 = a3;
            mapleCharacter2.setBuffedValue(MapleBuffStat.COMBO, n3);
            n3 = mapleStatEffect.getDuration();
            mapleCharacter2.Cb.sendPacket(MaplePacketCreator.giveBuff(a22.getId(), n3 += (int)(a3.getBuffedStarttime(MapleBuffStat.COMBO) - System.currentTimeMillis()), (List<Pair<MapleBuffStat, Integer>>)object, mapleStatEffect, a3));
            MapleCharacter mapleCharacter3 = a3;
            mapleCharacter2.rC.broadcastMessage(mapleCharacter3, MaplePacketCreator.giveForeignBuff(mapleCharacter3, (List<Pair<MapleBuffStat, Integer>>)object, mapleStatEffect), false);
        }
    }

    public /* synthetic */ boolean isElfEar() {
        MapleCharacter a2;
        if (a2.containsInfoQuest(7784, FixDropNullItem.ALLATORIxDEMO("5A{"))) {
            MapleCharacter mapleCharacter = a2;
            return mapleCharacter.containsInfoQuest(7784, MapleJob.is\u7cbe\u9748\u904a\u4fe0(mapleCharacter.getJob()) ? MapleNodes.ALLATORIxDEMO("}[3\u001c") : FixDropNullItem.ALLATORIxDEMO("E1\u000bw"));
        }
        return MapleJob.is\u7cbe\u9748\u904a\u4fe0(a2.getJob());
    }

    public /* synthetic */ long getPotential3() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6a69\u73c1\u7117\u89d0\u5081\u5bf5"), false);
    }

    public /* synthetic */ int getReChargeFalse() {
        MapleCharacter a2;
        return a2.i;
    }

    public /* synthetic */ void addSpendGash(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        long l2 = mapleCharacter.getSpendGash() + (long)a2;
        mapleCharacter.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u4ec4\u65c9\u82bf\u8c97IM}D"), l2, false);
    }

    public /* synthetic */ Pair<Integer, Integer> handleHpMp(int a22, int a32) {
        ISkill iSkill;
        int n2;
        int n3;
        int n4;
        MapleCharacter a4;
        int n5 = 0;
        int n6 = 0;
        Pair<Integer, Integer> pair = new Pair<Integer, Integer>(a22, a32);
        pair = GameSetConstants.MAPLE_VERSION >= 134 ? a4.handleMaxHp_afterBigBang(a22, a32) : a4.handleMaxHp_beforeBigBang(a22, a32);
        int[] arrn = new int[4];
        arrn[0] = 1000001;
        arrn[1] = 5100000;
        arrn[2] = 11000000;
        arrn[3] = 15100000;
        int[] a22 = arrn;
        int[] arrn2 = new int[2];
        arrn2[0] = 2000001;
        arrn2[1] = 12000000;
        int[] a32 = arrn2;
        int n7 = a22.length;
        int n8 = n4 = 0;
        while (n8 < n7) {
            n3 = a22[n4];
            n2 = a4.getSkillLevel(n3);
            if (n2 > 0 && (iSkill = SkillFactory.getSkill(n3)) != null) {
                n5 += iSkill.getEffect(n2).getX();
            }
            n8 = ++n4;
        }
        a22 = a32;
        n7 = a32.length;
        int n9 = n4 = 0;
        while (n9 < n7) {
            n3 = a22[n4];
            n2 = a4.getSkillLevel(n3);
            if (n2 > 0 && (iSkill = SkillFactory.getSkill(n3)) != null) {
                n6 += iSkill.getEffect(n2).getX() * 2;
            }
            n9 = ++n4;
        }
        if (!JobConstants.is\u4e0d\u4f7f\u7528MP\u8077\u696d(a4.ob)) {
            n6 += a4.GB.getTotalInt() / 10;
        }
        return new Pair<Integer, Integer>((Integer)pair.left + n5, (Integer)pair.right + n6);
    }

    public /* synthetic */ int getBeansLight() {
        MapleCharacter a2;
        return a2.Nd;
    }

    public /* synthetic */ void setLinePoint(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("z\u000fx\u0003\u9ee8\u653e"), a2, false);
    }

    public /* synthetic */ long getSkillWorking(int a2) {
        MapleCharacter a3;
        if (a3.k.containsKey(a2)) {
            return a3.k.get(a2);
        }
        return 0L;
    }

    public /* synthetic */ void handleDarkCrescendo() {
        MapleCharacter a2;
        MapleStatEffect mapleStatEffect = a2.getStatForBuff(MapleBuffStat.DARK_CRESCENDO);
        if (mapleStatEffect != null && mapleStatEffect.getSourceId() == 27121005) {
            MapleCharacter mapleCharacter = a2;
            int n2 = mapleCharacter.getBuffedValue(MapleBuffStat.DARK_CRESCENDO);
            ISkill iSkill = SkillFactory.getSkill(27121005);
            if (mapleCharacter.getSkillLevel(iSkill) > 0) {
                ISkill iSkill2 = iSkill;
                MapleStatEffect mapleStatEffect2 = iSkill2.getEffect(a2.getTotalSkillLevel(iSkill2));
                if (n2 < mapleStatEffect2.getX() && mapleStatEffect2.makeChanceResult(a2)) {
                    List<Pair<MapleBuffStat, Integer>> list = Collections.singletonList(new Pair<MapleBuffStat, Integer>(MapleBuffStat.DARK_CRESCENDO, ++n2));
                    MapleCharacter mapleCharacter2 = a2;
                    a2.setBuffedValue(MapleBuffStat.DARK_CRESCENDO, n2);
                    n2 = mapleStatEffect2.getDuration();
                    mapleCharacter2.Cb.sendPacket(MaplePacketCreator.giveBuff(iSkill.getId(), n2 += (int)(a2.getBuffedStartTime(MapleBuffStat.DARK_CRESCENDO) - System.currentTimeMillis()), list, mapleStatEffect2, a2));
                    mapleCharacter2.registerEffect(mapleStatEffect2, System.currentTimeMillis(), list, Integer.MAX_VALUE, a2.getId());
                    if (!mapleCharacter2.isHidden()) {
                        MapleCharacter mapleCharacter3 = a2;
                        a2.getMap().broadcastMessage(mapleCharacter3, MaplePacketCreator.giveForeignBuff(mapleCharacter3, list, mapleStatEffect2), false);
                    }
                    a2.GB.recalcLocalStats(false);
                }
            }
        }
    }

    public /* synthetic */ void setFace(int a2) {
        MapleCharacter a3;
        if (a3.dA != a2) {
            a3.Ic = true;
        }
        a3.dA = a2;
    }

    public /* synthetic */ boolean canGainBeansReward() {
        MapleCharacter a2;
        return a2.yC;
    }

    public /* synthetic */ MapleCharacter() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        MapleCharacter mapleCharacter2 = a2;
        MapleCharacter mapleCharacter3 = a2;
        MapleCharacter mapleCharacter4 = a2;
        MapleCharacter mapleCharacter5 = a2;
        MapleCharacter mapleCharacter6 = a2;
        MapleCharacter mapleCharacter7 = a2;
        MapleCharacter mapleCharacter8 = a2;
        MapleCharacter mapleCharacter9 = a2;
        MapleCharacter mapleCharacter10 = a2;
        MapleCharacter mapleCharacter11 = a2;
        MapleCharacter mapleCharacter12 = a2;
        MapleCharacter mapleCharacter13 = a2;
        MapleCharacter mapleCharacter14 = a2;
        MapleCharacter mapleCharacter15 = a2;
        MapleCharacter mapleCharacter16 = a2;
        MapleCharacter mapleCharacter17 = a2;
        MapleCharacter mapleCharacter18 = a2;
        MapleCharacter mapleCharacter19 = a2;
        MapleCharacter mapleCharacter20 = a2;
        MapleCharacter mapleCharacter21 = a2;
        MapleCharacter mapleCharacter22 = a2;
        MapleCharacter mapleCharacter23 = a2;
        MapleCharacter mapleCharacter24 = a2;
        MapleCharacter mapleCharacter25 = a2;
        MapleCharacter mapleCharacter26 = a2;
        MapleCharacter mapleCharacter27 = a2;
        MapleCharacter mapleCharacter28 = a2;
        MapleCharacter mapleCharacter29 = a2;
        MapleCharacter mapleCharacter30 = a2;
        MapleCharacter mapleCharacter31 = a2;
        MapleCharacter mapleCharacter32 = a2;
        MapleCharacter mapleCharacter33 = a2;
        MapleCharacter mapleCharacter34 = a2;
        MapleCharacter mapleCharacter35 = a2;
        MapleCharacter mapleCharacter36 = a2;
        MapleCharacter mapleCharacter37 = a2;
        MapleCharacter mapleCharacter38 = a2;
        mapleCharacter38.tb = "";
        mapleCharacter38.Dc = "";
        mapleCharacter37.ac = 0L;
        mapleCharacter37.ic = 0L;
        mapleCharacter36.md = 0L;
        mapleCharacter36.aB = (byte)5;
        mapleCharacter35.jB = (byte)5;
        mapleCharacter35.yc = (byte)10;
        mapleCharacter34.iC = 1;
        mapleCharacter34.KA = 0;
        mapleCharacter33.hd = 0;
        mapleCharacter33.RA = 0;
        mapleCharacter32.HA = 0;
        mapleCharacter32.Tc = 1;
        mapleCharacter31.Qb = 0;
        mapleCharacter31.wA = 1;
        mapleCharacter30.ld = 0;
        mapleCharacter30.db = -1;
        mapleCharacter29.fd = 0;
        mapleCharacter29.dB = 0;
        mapleCharacter28.pc = 0;
        mapleCharacter28.FB = 0;
        mapleCharacter27.xC = 0;
        mapleCharacter27.uC = 0;
        mapleCharacter26.MC = 0;
        mapleCharacter26.QC = 0;
        mapleCharacter25.VB = 0;
        mapleCharacter25.Sc = 0;
        mapleCharacter24.PA = 0;
        mapleCharacter24.Bd = 0;
        mapleCharacter23.KC = 0;
        mapleCharacter23.Cc = 0;
        mapleCharacter22.Yc = 0;
        mapleCharacter22.fB = 0;
        MapleCharacter mapleCharacter39 = a2;
        mapleCharacter22.cC = new Point(0, 0);
        mapleCharacter21.ab = 0;
        mapleCharacter21.BA = false;
        mapleCharacter20.rc = true;
        mapleCharacter20.fc = true;
        mapleCharacter19.Od = false;
        mapleCharacter19.vC = false;
        mapleCharacter18.Hd = true;
        mapleCharacter18.TB = false;
        mapleCharacter17.NC = false;
        mapleCharacter17.EB = false;
        mapleCharacter16.Yb = false;
        mapleCharacter16.ec = false;
        mapleCharacter15.ub = false;
        mapleCharacter15.bA = false;
        mapleCharacter14.rB = false;
        mapleCharacter14.aA = false;
        mapleCharacter13.wb = false;
        mapleCharacter13.Jc = false;
        mapleCharacter12.Rc = false;
        mapleCharacter12.OA = false;
        mapleCharacter11.cc = false;
        mapleCharacter11.Xb = false;
        mapleCharacter10.rb = false;
        mapleCharacter10.gd = false;
        mapleCharacter9.nc = new int[10];
        mapleCharacter9.Gd = new int[3];
        mapleCharacter8.fb = new int[3];
        mapleCharacter7.yb = new int[3];
        mapleCharacter8.oC = new LinkedList<Integer>();
        mapleCharacter7.sB = new LinkedHashMap<ISkill, SkillEntry>();
        mapleCharacter7.kb = new ConcurrentEnumMap<MapleBuffStat, MapleBuffStatValueHolder>(MapleBuffStat.class);
        mapleCharacter7.kA = new LinkedHashMap<Integer, MapleCoolDownValueHolder>();
        mapleCharacter6.qc = new ConcurrentEnumMap<MapleBuffStat, MapleDiseaseValueHolder>(MapleBuffStat.class);
        mapleCharacter6.lc = new ArrayList<Integer>();
        mapleCharacter6.Pb = false;
        mapleCharacter5.sd = true;
        mapleCharacter5.Hc = false;
        mapleCharacter4.IA = false;
        mapleCharacter4.Pc = false;
        mapleCharacter3.Ec = true;
        mapleCharacter3.Ub = true;
        mapleCharacter2.qB = true;
        mapleCharacter2.WB = false;
        mapleCharacter.pd = "";
        mapleCharacter.rA = new SkillMacro[5];
        MapleCharacter mapleCharacter40 = a2;
        MapleCharacter mapleCharacter41 = a2;
        MapleCharacter mapleCharacter42 = a2;
        MapleCharacter mapleCharacter43 = a2;
        MapleCharacter mapleCharacter44 = a2;
        MapleCharacter mapleCharacter45 = a2;
        MapleCharacter mapleCharacter46 = a2;
        MapleCharacter mapleCharacter47 = a2;
        MapleCharacter mapleCharacter48 = a2;
        MapleCharacter mapleCharacter49 = a2;
        MapleCharacter mapleCharacter50 = a2;
        MapleCharacter mapleCharacter51 = a2;
        MapleCharacter mapleCharacter52 = a2;
        MapleCharacter mapleCharacter53 = a2;
        MapleCharacter mapleCharacter54 = a2;
        MapleCharacter mapleCharacter55 = a2;
        MapleCharacter mapleCharacter56 = a2;
        MapleCharacter mapleCharacter57 = a2;
        MapleCharacter mapleCharacter58 = a2;
        MapleCharacter mapleCharacter59 = a2;
        MapleCharacter mapleCharacter60 = a2;
        MapleCharacter mapleCharacter61 = a2;
        MapleCharacter mapleCharacter62 = a2;
        MapleCharacter mapleCharacter63 = a2;
        MapleCharacter mapleCharacter64 = a2;
        MapleCharacter mapleCharacter65 = a2;
        MapleCharacter mapleCharacter66 = a2;
        MapleCharacter mapleCharacter67 = a2;
        MapleCharacter mapleCharacter68 = a2;
        MapleCharacter mapleCharacter69 = a2;
        MapleCharacter mapleCharacter70 = a2;
        MapleCharacter mapleCharacter71 = a2;
        MapleCharacter mapleCharacter72 = a2;
        MapleCharacter mapleCharacter73 = a2;
        MapleCharacter mapleCharacter74 = a2;
        MapleCharacter mapleCharacter75 = a2;
        MapleCharacter mapleCharacter76 = a2;
        MapleCharacter mapleCharacter77 = a2;
        MapleCharacter mapleCharacter78 = a2;
        MapleCharacter mapleCharacter79 = a2;
        MapleCharacter mapleCharacter80 = a2;
        MapleCharacter mapleCharacter81 = a2;
        MapleCharacter mapleCharacter82 = a2;
        MapleCharacter mapleCharacter83 = a2;
        MapleCharacter mapleCharacter84 = a2;
        MapleCharacter mapleCharacter85 = a2;
        MapleCharacter mapleCharacter86 = a2;
        MapleCharacter mapleCharacter87 = a2;
        MapleCharacter mapleCharacter88 = a2;
        MapleCharacter mapleCharacter89 = a2;
        MapleCharacter mapleCharacter90 = a2;
        MapleCharacter mapleCharacter91 = a2;
        MapleCharacter mapleCharacter92 = a2;
        MapleCharacter mapleCharacter93 = a2;
        MapleCharacter mapleCharacter94 = a2;
        MapleCharacter mapleCharacter95 = a2;
        MapleCharacter mapleCharacter96 = a2;
        MapleCharacter mapleCharacter97 = a2;
        MapleCharacter mapleCharacter98 = a2;
        MapleCharacter mapleCharacter99 = a2;
        MapleCharacter mapleCharacter100 = a2;
        MapleCharacter mapleCharacter101 = a2;
        MapleCharacter mapleCharacter102 = a2;
        MapleCharacter mapleCharacter103 = a2;
        MapleCharacter mapleCharacter104 = a2;
        MapleCharacter mapleCharacter105 = a2;
        mapleCharacter105.Fb = null;
        mapleCharacter105.jb = null;
        mapleCharacter104.yA = null;
        mapleCharacter104.Kd = new HashMap<Integer, Integer>();
        mapleCharacter104.Fd = false;
        mapleCharacter103.vc = false;
        mapleCharacter103.yC = false;
        mapleCharacter102.sb = false ? 1 : 0;
        mapleCharacter102.mc = 0;
        mapleCharacter101.Nc = 0;
        mapleCharacter101.hb = null;
        mapleCharacter100.Ob = 0;
        mapleCharacter100.Ld = 0;
        mapleCharacter99.JB = new int[20];
        mapleCharacter99.Cd = new int[20];
        mapleCharacter98.xb = new int[20];
        mapleCharacter98.hC = 0;
        mapleCharacter97.JA = 0;
        mapleCharacter97.BB = false;
        mapleCharacter96.tC = "";
        mapleCharacter96.uB = "";
        mapleCharacter95.rd = false;
        mapleCharacter95.YB = true;
        mapleCharacter94.Ic = true;
        mapleCharacter94.Ac = true;
        mapleCharacter93.Qd = true;
        mapleCharacter93.oc = true;
        mapleCharacter92.lC = true;
        mapleCharacter92.DA = true;
        mapleCharacter91.dd = true;
        mapleCharacter91.KB = true;
        mapleCharacter90.gC = false;
        mapleCharacter90.Rd = true;
        mapleCharacter89.kc = true;
        mapleCharacter89.xB = true;
        mapleCharacter88.zb = true;
        mapleCharacter88.tA = true;
        mapleCharacter87.zA = true;
        mapleCharacter87.UA = true;
        mapleCharacter86.nB = true;
        mapleCharacter86.Lb = true;
        mapleCharacter85.ZA = 0;
        mapleCharacter85.pC = 0;
        mapleCharacter84.Ib = 0;
        mapleCharacter84.VC = true;
        mapleCharacter83.TC = false;
        mapleCharacter83.UC = "";
        mapleCharacter82.ya = "";
        mapleCharacter82.Oa = "";
        mapleCharacter81.oa = false;
        mapleCharacter81.Ra = false;
        mapleCharacter80.za = false;
        mapleCharacter80.Pa = 0L;
        mapleCharacter79.ra = 0L;
        mapleCharacter79.sa = 0L;
        mapleCharacter78.Va = 0;
        mapleCharacter78.Sa = 0;
        mapleCharacter77.ta = 0;
        mapleCharacter77.Na = 0;
        mapleCharacter76.Xa = 0;
        mapleCharacter76.Ya = 0L;
        mapleCharacter75.Ua = 0L;
        mapleCharacter75.Wa = 0L;
        mapleCharacter74.wa = 0L;
        mapleCharacter74.qa = 0L;
        mapleCharacter73.xa = false;
        mapleCharacter73.ua = 0L;
        mapleCharacter72.pa = 0L;
        mapleCharacter72.Ga = 0L;
        mapleCharacter71.aa = 0L;
        mapleCharacter71.ka = null;
        mapleCharacter70.La = null;
        mapleCharacter69.ia = null;
        mapleCharacter70.ga = new HashMap<String, Long>();
        mapleCharacter69.Fa = new HashMap<String, Long>();
        mapleCharacter68.Ca = new HashMap<String, Long>();
        mapleCharacter68.ea = new ArrayList<IItem>();
        mapleCharacter68.Ia = null;
        mapleCharacter67.ma = "";
        mapleCharacter67.Ba = 0;
        mapleCharacter66.Ja = 0;
        mapleCharacter66.Ea = 0;
        mapleCharacter65.Aa = 0;
        mapleCharacter65.la = new HashMap<Integer, Integer>();
        mapleCharacter65.da = false;
        mapleCharacter64.fa = false;
        mapleCharacter64.ha = false;
        mapleCharacter63.ca = false;
        mapleCharacter63.Ha = null;
        mapleCharacter62.y = new ArrayList<Pair<Integer, Boolean>>();
        mapleCharacter62.W = -1L;
        mapleCharacter61.V = new MapleCharacterCards();
        mapleCharacter61.u = new LinkedList<InnerSkillValueHolder>();
        mapleCharacter61.U = 0;
        mapleCharacter60.x = 0;
        mapleCharacter60.z = 0;
        mapleCharacter59.Y = 0;
        mapleCharacter59.s = 0;
        mapleCharacter58.n = -1L;
        mapleCharacter58.v = "";
        mapleCharacter57.T = "";
        mapleCharacter57.R = "";
        mapleCharacter56.N = "";
        mapleCharacter56.S = "";
        mapleCharacter55.r = false;
        mapleCharacter55.Q = false;
        mapleCharacter54.o = false;
        mapleCharacter54.Z = -1L;
        mapleCharacter53.t = -1L;
        mapleCharacter53.P = -1L;
        mapleCharacter52.w = -1L;
        mapleCharacter52.G = new LinkedList<Integer>();
        mapleCharacter52.b = false;
        mapleCharacter51.c = -1;
        mapleCharacter51.l = -1;
        mapleCharacter50.m = 0;
        mapleCharacter50.A = 0;
        mapleCharacter49.f = 0;
        mapleCharacter49.h = 0;
        mapleCharacter48.D = 0;
        mapleCharacter48.L = 0;
        mapleCharacter47.j = 0;
        mapleCharacter47.i = 0;
        mapleCharacter46.J = 0;
        mapleCharacter46.M = "";
        mapleCharacter45.I = false;
        mapleCharacter45.F = false;
        mapleCharacter44.C = new ArrayList<Point>();
        mapleCharacter44.e = 0L;
        mapleCharacter43.E = 0L;
        mapleCharacter43.g = 0L;
        mapleCharacter42.k = new HashMap();
        mapleCharacter42.K = 0L;
        mapleCharacter41.a = 0L;
        mapleCharacter41.d = false;
        mapleCharacter40.ALLATORIxDEMO = (byte)(false ? 1 : 0);
        mapleCharacter40.XB = null;
    }

    public /* synthetic */ void unequip(int a2, boolean a32) {
        MapleCharacter a4;
        MapleInventory a32 = a4.getInventory(MapleInventoryType.EQUIPPED);
        Equip equip = null;
        if (a2 >= 0) {
            for (IItem iItem : a32.newList()) {
                if (iItem.getItemId() != a2) continue;
                equip = (Equip)iItem;
            }
        } else {
            equip = (Equip)a32.getItem((short)a2);
        }
        if (equip == null) {
            return;
        }
        MapleInventoryManipulator.unequip(a4.Cb, equip.getPosition(), a4.getInventory(MapleInventoryType.EQUIP).getNextFreeSlot(), true);
    }

    public /* synthetic */ MapleGuild getGuild() {
        MapleCharacter a2;
        if (a2.getGuildId() <= 0) {
            return null;
        }
        return World.Guild.getGuild(a2.getGuildId());
    }

    public /* synthetic */ int[] getHyperRocks() {
        MapleCharacter a2;
        return a2.RB;
    }

    public /* synthetic */ int getFishKingScore() {
        MapleCharacter a2;
        return a2.Ba;
    }

    public /* synthetic */ void setGuildRank(byte a2) {
        MapleCharacter a3;
        a3.aB = a2;
        if (a3.Rb != null) {
            a3.Rb.setGuildRank(a2);
        }
    }

    public /* synthetic */ List<Integer> getHairAlbum() {
        MapleCharacter a2;
        int n2;
        ArrayList<Integer> arrayList = new ArrayList<Integer>();
        int n3 = n2 = 0;
        while (n3 < a2.JB.length) {
            if (a2.JB[n2] > 0) {
                arrayList.add(a2.JB[n2]);
            }
            n3 = ++n2;
        }
        a2.EA = arrayList;
        return arrayList;
    }

    public /* synthetic */ void cancelAllDebuffs() {
        MapleCharacter a2;
        a2.qc.clear();
    }

    public /* synthetic */ List<MapleSummon> getSummonsReadLock() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.Zb.readLock().lock();
        return mapleCharacter.Hb;
    }

    public /* synthetic */ boolean getmsg_HiredMerchant() {
        MapleCharacter a2;
        return a2.wb;
    }

    public /* synthetic */ void setFame(short a2) {
        a.IB = a2;
    }

    public /* synthetic */ int getTouzhuNX() {
        MapleCharacter a2;
        return a2.mB;
    }

    public /* synthetic */ Map<String, Long> getCharacterSet_Acc() {
        MapleCharacter a2;
        return new HashMap<String, Long>(a2.Ca);
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ void levelUp() {
        MapleCharacter mapleCharacter;
        ArrayList<Pair<MapleStat, Integer>> arrayList;
        MapleCharacter mapleCharacter2;
        int n2;
        int n3;
        MapleCharacter a2;
        if (!a2.canLevelUp() && GameSetConstants.FORBID_JOB_OVERLEVEL && !a2.getLevelNoCheck()) {
            MapleCharacter mapleCharacter3 = a2;
            mapleCharacter3.dropMessage(-1, "\u76ee\u524d\u4f60\u7684\u7b49\u7d1a\u5df2\u7d93\u9054\u5230\u300e" + mapleCharacter3.IC + "\u300f\uff0c\u82e5\u8981\u7e7c\u7e8c\u5347\u7d1a\u8acb\u5148\u8f49\u8077!");
            MapleCharacter mapleCharacter4 = a2;
            mapleCharacter4.dropMessage(5, "\u76ee\u524d\u4f60\u7684\u7b49\u7d1a\u5df2\u7d93\u9054\u5230\u300e" + mapleCharacter4.IC + "\u300f\uff0c\u82e5\u8981\u7e7c\u7e8c\u5347\u7d1a\u8acb\u5148\u8f49\u8077!");
            return;
        }
        int n4 = n3 = GameSetConstants.MAPLE_VERSION >= 134 ? 99999 : 30000;
        if (GameSetConstants.REBORN_SYSTEM) {
            n2 = GameSetConstants.UNREBORN_LEVELUP_LIMIT;
            if (a2.getLevel() >= n2 && !a2.getCharacterSetBool(FixDropNullItem.ALLATORIxDEMO("\u8f7f\u7559"), false)) {
                int n5 = n2;
                a2.dropMessage("\u60a8\u5df2\u7df4\u9054 " + n5 + "\u7b49,\u4e14\u672a\u66fe\u8f49\u751f,\u7121\u6cd5\u518d\u7e7c\u7e8c\u9032\u884c\u5347\u7d1a!\u9808\u81f3\u5c11\u8f49\u751f\u4e00\u6b21\u5f8c\u7b49\u7d1a\u624d\u53ef\u7a81\u7834 " + n5 + " \u7b49!");
                a2.Cb.sendPacket(MaplePacketCreator.enableActions());
                return;
            }
        }
        if (GameConstants.isKOC(a2.ob)) {
            if (a2.IC <= 70) {
                MapleCharacter mapleCharacter5 = a2;
                mapleCharacter2 = mapleCharacter5;
                mapleCharacter5.iA = (short)(mapleCharacter5.iA + 6);
            } else {
                MapleCharacter mapleCharacter6 = a2;
                mapleCharacter2 = mapleCharacter6;
                mapleCharacter6.iA = (short)(mapleCharacter6.iA + 5);
            }
        } else {
            MapleCharacter mapleCharacter7 = a2;
            mapleCharacter2 = mapleCharacter7;
            mapleCharacter7.iA = (short)(mapleCharacter7.iA + 5);
        }
        n2 = mapleCharacter2.GB.getMaxHp();
        MapleCharacter mapleCharacter8 = a2;
        int n6 = mapleCharacter8.GB.getMaxMp();
        if (JobConstants.is\u60e1\u9b54\u6bba\u624b(mapleCharacter8.ob)) {
            n6 = GameConstants.getMaxMPByJob(a2);
        }
        Iterator<ChannelServer> iterator = a2.handleHpMp(n2, n6);
        n2 = (Integer)((Pair)iterator).left;
        n6 = (Integer)((Pair)iterator).right;
        MapleCharacter mapleCharacter9 = a2;
        a2.RC -= GameConstants.getExpNeededForLevel(mapleCharacter9.IC);
        if (mapleCharacter9.RC < 0) {
            a2.RC = 0;
        }
        a2.IC = (short)(a2.IC + 1);
        n2 = Math.min(n3, Math.abs(n2));
        n6 = Math.min(n3, Math.abs(n6));
        ArrayList<Pair<MapleStat, Integer>> arrayList2 = new ArrayList<Pair<MapleStat, Integer>>(8);
        arrayList2.add(new Pair<MapleStat, Integer>(MapleStat.MAXHP, n2));
        arrayList2.add(new Pair<MapleStat, Integer>(MapleStat.MAXMP, n6));
        arrayList2.add(new Pair<MapleStat, Integer>(MapleStat.HP, n2));
        arrayList2.add(new Pair<MapleStat, Integer>(MapleStat.MP, n6));
        arrayList2.add(new Pair<MapleStat, Integer>(MapleStat.EXP, a2.RC));
        arrayList2.add(new Pair<MapleStat, Integer>(MapleStat.LEVEL, Integer.valueOf(a2.IC)));
        if (!JobConstants.isBeginnerJob(a2.ob)) {
            int n7;
            MapleCharacter mapleCharacter10;
            MapleCharacter mapleCharacter11 = a2;
            if (GameSetConstants.AUTO_SP) {
                iterator = (Iterator<ChannelServer>)mapleCharacter11.nc;
                MapleCharacter mapleCharacter12 = a2;
                int[] arrn = mapleCharacter11.nc;
                mapleCharacter10 = mapleCharacter12;
                n7 = SkillConstants.getSkillBookByLevel(a2.ob, mapleCharacter12.IC);
                arrn[n7] = arrn[n7] + 3;
            } else {
                iterator = (Iterator<ChannelServer>)mapleCharacter11.nc;
                MapleCharacter mapleCharacter13 = a2;
                int[] arrn = mapleCharacter11.nc;
                mapleCharacter10 = mapleCharacter13;
                n7 = GameConstants.getSkillBook(mapleCharacter13.ob);
                arrn[n7] = arrn[n7] + 3;
            }
            mapleCharacter10.Cb.sendPacket(MaplePacketCreator.updateSp(a2, false));
            arrayList = arrayList2;
        } else {
            if (GameSetConstants.MAPLE_VERSION != 75 && a2.IC <= 10) {
                a2.GB.setStr((short)(a2.GB.getStr() + a2.iA));
                a2.iA = 0;
                arrayList2.add(new Pair<MapleStat, Integer>(MapleStat.STR, Integer.valueOf(a2.GB.getStr())));
            }
            arrayList = arrayList2;
        }
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.AVAILABLEAP, Integer.valueOf(a2.iA)));
        MapleCharacter mapleCharacter14 = a2;
        mapleCharacter14.GB.setMaxHp(n2);
        mapleCharacter14.GB.setMaxMp(n6);
        mapleCharacter14.GB.setHp(n2);
        a2.GB.setMp(n6);
        MapleCharacter mapleCharacter15 = a2;
        mapleCharacter15.obtainHyperSP();
        MapleCharacter mapleCharacter16 = a2;
        mapleCharacter15.Cb.sendPacket(MaplePacketCreator.updatePlayerStats(arrayList2, mapleCharacter16));
        mapleCharacter16.getStat().setHp(a2.getStat().getCurrentMaxHp());
        a2.getStat().setMp(a2.getStat().getCurrentMaxMp());
        MapleCharacter mapleCharacter17 = a2;
        MapleCharacter mapleCharacter18 = a2;
        mapleCharacter18.updateSingleStat(MapleStat.HP, mapleCharacter18.getStat().getCurrentMaxHp());
        MapleCharacter mapleCharacter19 = a2;
        mapleCharacter17.updateSingleStat(MapleStat.MP, mapleCharacter19.getStat().getCurrentMaxMp());
        MapleCharacter mapleCharacter20 = a2;
        mapleCharacter19.rC.broadcastMessage(mapleCharacter20, MaplePacketCreator.showForeignEffect(mapleCharacter20.getId(), SpecialEffect.LEVEL_UP.getValue()), false);
        mapleCharacter17.GB.recalcLocalStats();
        if (GameSetConstants.MAPLE_VERSION >= 147) {
            a2.V.recalcLocalStats(a2);
        }
        MapleCharacter mapleCharacter21 = a2;
        mapleCharacter21.silentPartyUpdate();
        mapleCharacter21.guildUpdate();
        mapleCharacter21.familyUpdate();
        if (GameSetConstants.MAPLE_VERSION >= 147 && JobConstants.is\u84bc\u9f8d\u4fe0\u5ba2(a2.getJob()) && a2.getSkillLevel(1214) > 0) {
            if (a2.q == null) {
                MapleCharacter mapleCharacter22 = a2;
                a2.q = MapleCoreAura.createCoreAura(mapleCharacter22.XC, mapleCharacter22.IC);
                MapleCharacter mapleCharacter23 = a2;
                mapleCharacter23.updataCoreAura();
                mapleCharacter23.GB.recalcLocalStats();
            } else {
                a2.q.setLevel(a2.IC);
            }
        }
        if (GameSetConstants.LEVEL_MSG) {
            a2.DoLevelMsg();
        }
        if (GameSetConstants.MAPLE_VERSION == 149 && (MapleJob.is\u60e1\u9b54(a2.ob) || MapleJob.is\u7cbe\u9748\u904a\u4fe0(a2.ob) || MapleJob.is\u91cd\u7832\u6307\u63ee\u5b98(a2.ob))) {
            MapleCharacter mapleCharacter24 = a2;
            mapleCharacter = mapleCharacter24;
            mapleCharacter24.autoJob();
        } else {
            if (GameSetConstants.AUTO_JOB) {
                a2.autoJob();
            }
            mapleCharacter = a2;
        }
        mapleCharacter.D();
        MapleCharacter mapleCharacter25 = a2;
        mapleCharacter25.l();
        if (mapleCharacter25.IC >= 20 && a2.IC <= 25 && !a2.isGM()) {
            a2.DoLevelMap();
        }
        if (GameSetConstants.LV120_VIPGIVE && a2.getVip() < 1 && a2.IC == 120) {
            World.Broadcast.broadcastMessage(MaplePacketCreator.getItemNotice("[\u606d\u8cc0] \u73a9\u5bb6" + a2.getName() + " \u5230\u9054120\u7b49\uff0c\u7cfb\u7d71\u8d08\u9001\u4e86" + (a2.getGender() == 0 ? MapleNodes.ALLATORIxDEMO("\u4efa") : FixDropNullItem.ALLATORIxDEMO("\u593f")) + "VIP1\uff01\uff01"));
            a2.setVip(1);
        }
        if (GameSetConstants.BURN_LEVELUP && !a2.JA && a2.isLevelBurnUp()) {
            a2.handleLevelBurn();
        }
        if (!a2.Ib) {
            a2.saveToDB(false, false);
        }
        if (GameSetConstants.SERVER_NAME.equals(MapleNodes.ALLATORIxDEMO("\u6706\u77eb\u8c1b"))) {
            if (a2.IC == 70) {
                for (ChannelServer channelServer : LoginServer.getWorldStatic(a2.getWorld()).getChannels()) {
                    for (MapleCharacter mapleCharacter26 : channelServer.getPlayerStorage().getAllCharactersThreadSafe()) {
                        if (mapleCharacter26 == null || World.Find.findChannel(mapleCharacter26.getName()) == -1) continue;
                        mapleCharacter26.modifyCSPoints(true ? 1 : 0, 50, true);
                    }
                }
                World.Broadcast.broadcastMessage(MaplePacketCreator.getItemNotice("[\u734e\u52f5]: " + a2.getName() + " \u9054\u523070\u7d1a \u5168\u670d\u5728\u7dda\u73a9\u5bb6\u7372\u5f9750GASH\u606d\u8cc0!"));
            }
        } else if (GameSetConstants.SERVER_NAME.equals(FixDropNullItem.ALLATORIxDEMO("\u5e3e\u4e7d\u8c71"))) {
            if (a2.IC == 70 || a2.IC == 120 || a2.IC == 160 || a2.IC == 200 || a2.IC == 250) {
                MapleCharacter mapleCharacter27;
                int n8 = 0;
                switch (a2.IC) {
                    case 70: {
                        n8 = 25;
                        mapleCharacter27 = a2;
                        break;
                    }
                    case 120: {
                        n8 = 50;
                        mapleCharacter27 = a2;
                        break;
                    }
                    case 160: {
                        n8 = 75;
                        mapleCharacter27 = a2;
                        break;
                    }
                    case 200: {
                        n8 = 100;
                        mapleCharacter27 = a2;
                        break;
                    }
                    case 250: {
                        n8 = 250;
                    }
                    default: {
                        mapleCharacter27 = a2;
                    }
                }
                for (ChannelServer channelServer : LoginServer.getWorldStatic(mapleCharacter27.getWorld()).getChannels()) {
                    for (MapleCharacter mapleCharacter28 : channelServer.getPlayerStorage().getAllCharactersThreadSafe()) {
                        if (mapleCharacter28 == null || World.Find.findChannel(mapleCharacter28.getName()) == -1) continue;
                        mapleCharacter28.modifyCSPoints(true ? 1 : 0, n8, true);
                    }
                }
                World.Broadcast.broadcastMessage(MaplePacketCreator.getItemNotice("[\u606d\u559c]: " + a2.getName() + " \u9054\u5230" + a2.IC + "\u7d1a \u5168\u670d\u5728\u7dda\u73a9\u5bb6\u4e00\u8d77\u7372\u5f97" + n8 + "GASH,\u795d\u798f\u5979\u5427!"));
            }
        } else if (GameSetConstants.SERVER_NAME.equals(MapleNodes.ALLATORIxDEMO("\u65be\u59b2\u5990\u8c1b"))) {
            int n9;
            int n10 = 0;
            switch (a2.IC) {
                case 70: {
                    n9 = n10 = 100;
                    break;
                }
                case 120: {
                    n9 = n10 = 200;
                    break;
                }
                case 150: {
                    n9 = n10 = 250;
                    break;
                }
                case 180: {
                    n9 = n10 = 300;
                    break;
                }
                case 200: {
                    n9 = n10 = 300;
                    break;
                }
                case 210: {
                    n9 = n10 = 400;
                    break;
                }
                case 220: {
                    n9 = n10 = 500;
                    break;
                }
                case 230: {
                    n9 = n10 = 600;
                    break;
                }
                case 240: {
                    n9 = n10 = 700;
                    break;
                }
                case 250: {
                    n10 = 1000;
                }
                default: {
                    n9 = n10;
                }
            }
            if (n9 > 0) {
                for (ChannelServer channelServer : LoginServer.getWorldStatic(a2.getWorld()).getChannels()) {
                    for (MapleCharacter mapleCharacter29 : channelServer.getPlayerStorage().getAllCharactersThreadSafe()) {
                        if (mapleCharacter29 == null || World.Find.findChannel(mapleCharacter29.getName()) == -1) continue;
                        mapleCharacter29.modifyCSPoints(2, n10, true);
                    }
                }
                World.Broadcast.broadcastMessage(MaplePacketCreator.getItemNotice("[\u606d\u559c]: " + a2.getName() + " \u9054\u5230" + a2.IC + "\u7d1a \u5168\u670d\u5728\u7dda\u73a9\u5bb6\u4e00\u8d77\u7372\u5f97" + n10 + "\u6953\u9ede,\u795d\u798f\u5979\u5427!"));
            }
        } else if (GameSetConstants.SERVER_NAME.equals(FixDropNullItem.ALLATORIxDEMO("\u6c65\u571e\u4fc0"))) {
            if (a2.IC == 70 || a2.IC == 120 || a2.IC == 160 || a2.IC == 200 || a2.IC == 250) {
                MapleCharacter mapleCharacter30;
                int n11 = 0;
                switch (a2.IC) {
                    case 70: {
                        n11 = 20;
                        mapleCharacter30 = a2;
                        break;
                    }
                    case 120: {
                        n11 = 30;
                        mapleCharacter30 = a2;
                        break;
                    }
                    case 160: {
                        n11 = 40;
                        mapleCharacter30 = a2;
                        break;
                    }
                    case 200: {
                        n11 = 50;
                        mapleCharacter30 = a2;
                        break;
                    }
                    case 250: {
                        n11 = 88;
                    }
                    default: {
                        mapleCharacter30 = a2;
                    }
                }
                for (ChannelServer channelServer : LoginServer.getWorldStatic(mapleCharacter30.getWorld()).getChannels()) {
                    for (MapleCharacter mapleCharacter31 : channelServer.getPlayerStorage().getAllCharactersThreadSafe()) {
                        if (mapleCharacter31 == null || World.Find.findChannel(mapleCharacter31.getName()) == -1) continue;
                        mapleCharacter31.modifyCSPoints(2, n11, true);
                    }
                }
                World.Broadcast.broadcastMessage(MaplePacketCreator.getItemNotice("[\u606d\u559c]: " + a2.getName() + " \u9054\u5230" + a2.IC + "\u7d1a \u5168\u670d\u5728\u7dda\u73a9\u5bb6\u4e00\u8d77\u7372\u5f97" + n11 + "\u6953\u9ede,\u795d\u798f\u5979\u5427!"));
            }
        } else if (GameSetConstants.SERVER_NAME.equals(MapleNodes.ALLATORIxDEMO("\u65be\u872e\u4e45\u8c1b"))) {
            if (a2.IC == 70 || a2.IC == 120 || a2.IC == 200 || a2.IC == 250) {
                MapleCharacter mapleCharacter32;
                int n12 = 0;
                switch (a2.IC) {
                    case 70: {
                        n12 = 5;
                        mapleCharacter32 = a2;
                        break;
                    }
                    case 120: {
                        n12 = 10;
                        mapleCharacter32 = a2;
                        break;
                    }
                    case 200: {
                        n12 = 10;
                        mapleCharacter32 = a2;
                        break;
                    }
                    case 250: {
                        n12 = 20;
                    }
                    default: {
                        mapleCharacter32 = a2;
                    }
                }
                for (ChannelServer channelServer : LoginServer.getWorldStatic(mapleCharacter32.getWorld()).getChannels()) {
                    if (channelServer.getChannel() <= 0) continue;
                    for (MapleCharacter mapleCharacter33 : channelServer.getPlayerStorage().getAllCharactersThreadSafe()) {
                        if (mapleCharacter33 == null || World.Find.findChannel(mapleCharacter33.getName()) == -1) continue;
                        mapleCharacter33.modifyCSPoints(2, n12, true);
                    }
                }
                World.Broadcast.broadcastMessage(MaplePacketCreator.getItemNotice("[\u606d\u559c]: " + a2.getName() + " \u9054\u5230" + a2.IC + "\u7d1a \u5168\u670d\u5728\u7dda\u73a9\u5bb6\u4e00\u8d77\u7372\u5f97" + n12 + "\u6953\u9ede,\u795d\u798f\u5979\u5427!"));
            }
        } else if (GameSetConstants.SERVER_NAME.equals(FixDropNullItem.ALLATORIxDEMO("\u56f0\u5680\u8c71")) && (a2.IC == 70 || a2.IC == 120 || a2.IC == 160 || a2.IC == 200 || a2.IC == 250)) {
            MapleCharacter mapleCharacter34;
            int n13 = 0;
            switch (a2.IC) {
                case 70: {
                    n13 = 20;
                    mapleCharacter34 = a2;
                    break;
                }
                case 120: {
                    n13 = 30;
                    mapleCharacter34 = a2;
                    break;
                }
                case 160: {
                    n13 = 40;
                    mapleCharacter34 = a2;
                    break;
                }
                case 200: {
                    n13 = 50;
                    mapleCharacter34 = a2;
                    break;
                }
                case 250: {
                    n13 = 100;
                }
                default: {
                    mapleCharacter34 = a2;
                }
            }
            for (ChannelServer channelServer : LoginServer.getWorldStatic(mapleCharacter34.getWorld()).getChannels()) {
                for (MapleCharacter mapleCharacter35 : channelServer.getPlayerStorage().getAllCharactersThreadSafe()) {
                    if (mapleCharacter35 == null || World.Find.findChannel(mapleCharacter35.getName()) == -1) continue;
                    mapleCharacter35.modifyCSPoints(2, n13, true);
                }
            }
            World.Broadcast.broadcastMessage(MaplePacketCreator.getItemNotice("[\u606d\u559c]: " + a2.getName() + " \u9054\u5230" + a2.IC + "\u7d1a \u5168\u670d\u5728\u7dda\u73a9\u5bb6\u4e00\u8d77\u7372\u5f97" + n13 + "\u6953\u9ede,\u795d\u798f\u5979\u5427!"));
        }
        if (!GameSetConstants.SERVER_NAME.equals(MapleNodes.ALLATORIxDEMO("\u85e1\u9be6\u8c1b"))) return;
        boolean bl = false;
        switch (a2.IC) {
            case 12: {
                MapleCharacter mapleCharacter36 = a2;
                a2.gainItem(2022179, 20);
                mapleCharacter36.gainItem(2450000, 5);
                mapleCharacter36.gainItem(5220000, 30);
                a2.modifyCSPoints(2, 500, true);
                return;
            }
            case 100: {
                MapleCharacter mapleCharacter37 = a2;
                a2.gainItem(2022179, 20);
                mapleCharacter37.gainItem(2450000, 5);
                mapleCharacter37.gainItem(5220000, 30);
                a2.modifyCSPoints(2, 500, true);
                return;
            }
            case 150: {
                MapleCharacter mapleCharacter38 = a2;
                a2.gainItem(2022179, 20);
                mapleCharacter38.gainItem(2450000, 5);
                mapleCharacter38.gainItem(5220000, 30);
                a2.modifyCSPoints(2, 500, true);
                return;
            }
            case 250: {
                MapleCharacter mapleCharacter39 = a2;
                MapleCharacter mapleCharacter40 = a2;
                a2.gainItem(2022179, 20);
                mapleCharacter40.gainItem(2450000, 5);
                mapleCharacter40.gainItem(5220000, 30);
                mapleCharacter39.gainItem(5220010, 1);
                mapleCharacter39.gainItem(4001322, 1);
                a2.modifyCSPoints(2, 500, true);
                return;
            }
        }
    }

    public /* synthetic */ MapleRing getMarriageRing(boolean a2) {
        MapleCharacter a3;
        MapleInventory mapleInventory = a3.getInventory(MapleInventoryType.EQUIPPED);
        Object object = mapleInventory.list();
        ArrayList<Item> arrayList = new ArrayList<Item>(object.size());
        Iterator<IItem> iterator = object.iterator();
        Iterator<IItem> iterator2 = iterator;
        while (iterator2.hasNext()) {
            IItem iItem = iterator.next();
            arrayList.add((Item)iItem);
            iterator2 = iterator;
        }
        for (Item item2 : arrayList) {
            if (item2.getRing() == null) continue;
            Item item3 = item2;
            object = item3.getRing();
            ((MapleRing)object).setEquipped(true);
            if (!GameConstants.isMarriageRing(item3.getItemId())) continue;
            return object;
        }
        if (a2) {
            mapleInventory = a3.getInventory(MapleInventoryType.EQUIP);
            for (IItem iItem : mapleInventory.list()) {
                if (iItem.getRing() == null || !GameConstants.isMarriageRing(iItem.getItemId())) continue;
                object = iItem.getRing();
                ((MapleRing)object).setEquipped(false);
                return object;
            }
        }
        return null;
    }

    public /* synthetic */ boolean canShroudWalk() {
        MapleCharacter a2;
        if (a2.ed == null) {
            return true;
        }
        if (a2.aa == 0L) {
            return true;
        }
        return System.currentTimeMillis() - a2.aa > 1500L;
    }

    public /* synthetic */ void healHP(int a2, boolean a3) {
        MapleCharacter a4;
        int n2 = a2;
        if (a4.GB.getCurrentMaxHp() - a4.GB.hp > a2) {
            n2 = a4.GB.getCurrentMaxHp() - a4.GB.hp;
        }
        a4.addHP(n2);
        if (a3) {
            MapleCharacter mapleCharacter = a4;
            mapleCharacter.Cb.sendPacket(MaplePacketCreator.showOwnHpHealed(n2));
            MapleCharacter mapleCharacter2 = a4;
            mapleCharacter.getMap().broadcastMessage(mapleCharacter2, MaplePacketCreator.showHpHealed(mapleCharacter2.getId(), n2), false);
        }
    }

    public /* synthetic */ int getLottoryNumber5() {
        MapleCharacter a2;
        return (int)a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u6a2e\u9001\u7b00\u4e9a\u5027\u8651\u7890"), false);
    }

    public /* synthetic */ void removeItemCooldowns() {
        Map.Entry<String, Long> entry;
        MapleCharacter a2;
        ArrayList<String> arrayList = new ArrayList<String>();
        Iterator<Map.Entry<String, Long>> iterator = a2.Fa.entrySet().iterator();
        block0: while (true) {
            Iterator<Map.Entry<String, Long>> iterator2 = iterator;
            while (iterator2.hasNext()) {
                entry = iterator.next();
                String string = entry.getKey();
                if (!string.startsWith(FixDropNullItem.ALLATORIxDEMO("%Y)Z\u0019"))) continue block0;
                String string2 = string;
                int n2 = Integer.valueOf(string2.substring(5, string2.length()));
                if ((Long)entry.getValue() >= System.currentTimeMillis()) {
                    iterator2 = iterator;
                    continue;
                }
                arrayList.add(string);
                a2.getClient().sendPacket(MaplePacketCreator.itemCooldown(true, n2, 0L));
                continue block0;
            }
            break;
        }
        iterator = arrayList.iterator();
        Iterator<Object> iterator3 = iterator;
        while (iterator3.hasNext()) {
            entry = (String)((Object)iterator.next());
            iterator3 = iterator;
            a2.setCharacterSetTemp((String)((Object)entry), 0L);
        }
    }

    public /* synthetic */ Map<Byte, Integer> getSecondEquips(boolean a2) {
        MapleCharacter a3;
        HashMap<Byte, Integer> hashMap = new HashMap<Byte, Integer>();
        Object object = a3.LA[MapleInventoryType.EQUIPPED.ordinal()].newList();
        boolean bl = false;
        Object object2 = object = object.iterator();
        while (object2.hasNext()) {
            IItem iItem = (IItem)object.next();
            int n2 = iItem.getItemId();
            if (iItem instanceof Equip) {
                if (a2 && ((Equip)iItem).getFusionAnvil() != 0) {
                    n2 = ((Equip)iItem).getFusionAnvil();
                }
                if (MapleJob.is\u5929\u4f7f\u7834\u58de\u8005(a3.getJob()) && iItem.getPosition() == -5) {
                    if (a3.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("z)X!U)W2")) == 0L) {
                        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("BC`KmCoX"), 1051291L);
                    }
                    bl = true;
                    n2 = (int)a3.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("z)X!U)W2"));
                }
            }
            if (!(!MapleJob.is\u5929\u4f7f\u7834\u58de\u8005(a3.getJob()) || ItemConstants.\u985e\u578b.\u5957\u670d((int)n2) || ItemConstants.\u985e\u578b.\u526f\u624b((int)n2) || ItemConstants.\u985e\u578b.\u6b66\u5668((int)n2) || ItemConstants.\u985e\u578b.\u52f3\u7ae0((int)n2))) {
                object2 = object;
                continue;
            }
            hashMap.put((byte)iItem.getPosition(), n2);
            object2 = object;
        }
        if (!bl && MapleJob.is\u5929\u4f7f\u7834\u58de\u8005(a3.getJob())) {
            if (a3.getCharacterSet(MapleNodes.ALLATORIxDEMO("BC`KmCoX")) == 0L) {
                a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("z)X!U)W2"), 1051291L);
            }
            hashMap.put((byte)-5, (int)a3.getCharacterSet(MapleNodes.ALLATORIxDEMO("BC`KmCoX")));
        }
        return hashMap;
    }

    public /* synthetic */ void setNiuNiuCard(NiuNiu.NiuNiuResultInfo a2) {
        a.La = a2;
    }

    public /* synthetic */ void setExtraExp(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u7d9d\u9a7b\u9843\u593a\u52ae\u623c"), a2, false);
    }

    public /* synthetic */ void setDirection(int a2) {
        a.Ob = a2;
    }

    public /* synthetic */ int itemQuantity(int a2) {
        MapleCharacter a3;
        return a3.getInventory(GameConstants.getInventoryType(a2)).countById(a2);
    }

    public /* synthetic */ void decreaseBattleshipHP() {
        MapleCharacter a2;
        --a2.FB;
    }

    public /* synthetic */ void useSpReset() {
        int n2;
        Map.Entry entry;
        MapleCharacter a2;
        HashMap<ISkill, SkillEntry> hashMap = new HashMap<ISkill, SkillEntry>(a2.getSkills());
        Object object = new HashMap<ISkill, SkillEntry>();
        Object object2 = hashMap.entrySet().iterator();
        block0: while (true) {
            Object object3 = object2;
            while (object3.hasNext()) {
                entry = object2.next();
                ISkill iSkill = (ISkill)entry.getKey();
                if (iSkill.isBeginnerSkill() || iSkill.isSpecialSkill() || iSkill.isHyperSkill()) continue block0;
                int n3 = a2.getSkillLevel((ISkill)entry.getKey());
                if (n3 <= 0) {
                    object3 = object2;
                    continue;
                }
                if (iSkill.canBeLearnedBy(a2.getJob())) {
                    object.put((ISkill)((ISkill)entry.getKey()), (SkillEntry)new SkillEntry(0, ((SkillEntry)entry.getValue()).masterlevel, ((SkillEntry)entry.getValue()).expiration));
                    continue block0;
                }
                object.put((ISkill)((ISkill)entry.getKey()), (SkillEntry)new SkillEntry(0, 0, -1L));
                continue block0;
            }
            break;
        }
        if (!object.isEmpty()) {
            a2.changeSkillLevel((Map<ISkill, SkillEntry>)object);
        }
        hashMap.clear();
        object.clear();
        if (JobConstants.is\u5f71\u6b66\u8005(a2.getJob())) {
            boolean bl;
            Map.Entry entry2;
            boolean bl2;
            Map.Entry entry3;
            boolean bl3;
            object2 = new int[6];
            if (GameSetConstants.MAPLE_VERSION >= 152) {
                if (a2.getLevel() > 100) {
                    Object object4 = object2;
                    Object object5 = object2;
                    object5[5] = (a2.getLevel() - 100) * 3 + 4;
                    object5[4] = 100;
                    object4[3] = 55;
                    object4[2] = 65;
                    Object object6 = object2;
                    object6[1] = 35;
                    object6[0] = 35;
                } else if (a2.getLevel() > 70 && a2.getLevel() <= 100) {
                    object2[4] = (a2.getLevel() - 70) * 3 + 4;
                    Object object7 = object2;
                    object7[3] = 49;
                    object7[2] = 49;
                    Object object8 = object2;
                    object8[1] = 34;
                    object8[0] = 35;
                } else if (a2.getLevel() > 55 && a2.getLevel() <= 70) {
                    Object object9 = object2;
                    Object object10 = object2;
                    object10[3] = (a2.getLevel() - 55) * 3 + 4;
                    object10[2] = 49;
                    object9[1] = 34;
                    object9[0] = 35;
                } else if (a2.getLevel() > 30 && a2.getLevel() <= 55) {
                    Object object11 = object2;
                    object2[2] = (a2.getLevel() - 30) * 3 + 4;
                    object11[1] = 34;
                    object11[0] = 35;
                } else if (a2.getLevel() > 20 && a2.getLevel() <= 30) {
                    Object object12 = object2;
                    object12[1] = (a2.getLevel() - 20) * 3 + 4;
                    object12[0] = 35;
                } else if (a2.getLevel() > 10 && a2.getLevel() <= 20) {
                    object2[0] = (a2.getLevel() - 10) * 3 + 5;
                }
            } else if (a2.getLevel() > 120) {
                entry = object2;
                boolean bl4 = false;
                Map.Entry entry4 = entry;
                entry4[0] = entry4[0] + ((a2.getLevel() - 120) * 3 + 4);
                Map.Entry entry5 = entry;
                boolean bl5 = false;
                Map.Entry entry6 = entry5;
                entry6[0] = entry6[0] + 100;
                object = entry;
                bl3 = false;
                Object object13 = object;
                object13[0] = object13[0] + 55;
                entry3 = entry;
                bl2 = false;
                Map.Entry entry7 = entry3;
                entry7[0] = entry7[0] + 65;
                entry2 = entry;
                bl = false;
                Map.Entry entry8 = entry2;
                entry8[0] = entry8[0] + 35;
                Map.Entry entry9 = entry;
                boolean bl6 = false;
                Map.Entry entry10 = entry9;
                entry10[0] = entry10[0] + 35;
            } else if (a2.getLevel() > 70 && a2.getLevel() <= 120) {
                entry = object2;
                boolean bl7 = false;
                Map.Entry entry11 = entry;
                entry11[0] = entry11[0] + ((a2.getLevel() - 70) * 3 + 4);
                Map.Entry entry12 = entry;
                boolean bl8 = false;
                Map.Entry entry13 = entry12;
                entry13[0] = entry13[0] + 49;
                object = entry;
                bl3 = false;
                Object object14 = object;
                object14[0] = object14[0] + 49;
                entry3 = entry;
                bl2 = false;
                Map.Entry entry14 = entry3;
                entry14[0] = entry14[0] + 34;
                entry2 = entry;
                bl = false;
                Map.Entry entry15 = entry2;
                entry15[0] = entry15[0] + 35;
            } else if (a2.getLevel() > 55 && a2.getLevel() <= 70) {
                entry = object2;
                boolean bl9 = false;
                Map.Entry entry16 = entry;
                entry16[0] = entry16[0] + ((a2.getLevel() - 55) * 3 + 4);
                Map.Entry entry17 = entry;
                boolean bl10 = false;
                Map.Entry entry18 = entry17;
                entry18[0] = entry18[0] + 49;
                object = entry;
                bl3 = false;
                Object object15 = object;
                object15[0] = object15[0] + 34;
                entry3 = entry;
                bl2 = false;
                Map.Entry entry19 = entry3;
                entry19[0] = entry19[0] + 35;
            } else if (a2.getLevel() > 30 && a2.getLevel() <= 55) {
                entry = object2;
                boolean bl11 = false;
                Map.Entry entry20 = entry;
                entry20[0] = entry20[0] + ((a2.getLevel() - 30) * 3 + 4);
                Map.Entry entry21 = entry;
                boolean bl12 = false;
                Map.Entry entry22 = entry21;
                entry22[0] = entry22[0] + 34;
                object = entry;
                bl3 = false;
                Object object16 = object;
                object16[0] = object16[0] + 35;
            } else if (a2.getLevel() > 20 && a2.getLevel() <= 30) {
                entry = object2;
                boolean bl13 = false;
                Map.Entry entry23 = entry;
                entry23[0] = entry23[0] + ((a2.getLevel() - 20) * 3 + 4);
                Map.Entry entry24 = entry;
                boolean bl14 = false;
                Map.Entry entry25 = entry24;
                entry25[0] = entry25[0] + 35;
            } else if (a2.getLevel() > 10 && a2.getLevel() <= 20) {
                entry = object2;
                boolean bl15 = false;
                Map.Entry entry26 = entry;
                entry26[0] = entry26[0] + ((a2.getLevel() - 10) * 3 + 5);
            }
        } else if (JobConstants.is\u795e\u4e4b\u5b50(a2.getJob())) {
            object2 = new int[2];
            if (a2.getLevel() >= 100) {
                Object object17 = object2;
                object17[0] = (a2.getLevel() - 100) * 3 + 8;
                object17[1] = (a2.getLevel() - 100) * 3 + 8;
            }
        } else if (JobConstants.isSeparatedSp(a2.getJob())) {
            boolean bl;
            object2 = new int[4];
            boolean bl16 = bl = a2.getJob() >= 200 && a2.getJob() <= 232;
            if (a2.getLevel() > 100) {
                Object object18 = object2;
                Object object19 = object2;
                object19[3] = (a2.getLevel() - 100) * 3 + 4;
                object19[2] = 124;
                object18[1] = 95;
                object18[0] = 65 + (bl ? 6 : 0);
            } else if (a2.getLevel() > 60 && a2.getLevel() <= 100) {
                Object object20 = object2;
                object2[2] = (a2.getLevel() - 60) * 3 + 4;
                object20[1] = 95;
                object20[0] = 65 + (bl ? 6 : 0);
            } else if (a2.getLevel() > 30 && a2.getLevel() <= 60) {
                Object object21 = object2;
                object21[1] = (a2.getLevel() - 30) * 3 + 5;
                object21[0] = 65 + (bl ? 6 : 0);
            } else if (a2.getLevel() > 10 && a2.getLevel() <= 30) {
                object2[0] = (a2.getLevel() - 10) * 3 + 5;
            }
        } else {
            int[] arrn = new int[1];
            arrn[0] = 0;
            entry = (Map.Entry)arrn;
            object2 = arrn;
            boolean bl = false;
            Map.Entry entry27 = entry;
            entry27[0] = entry27[0] + (a2.getJob() % 100 != 0 && a2.getJob() % 100 != 1 ? a2.getJob() % 10 + 3 : 0);
            if (a2.getJob() % 10 >= 2) {
                Object object22 = object2;
                boolean bl17 = false;
                Object object23 = object22;
                object23[0] = object23[0] + 3;
            }
            Object object24 = object2;
            boolean bl18 = false;
            Object object25 = object24;
            object25[0] = object25[0] + (a2.getLevel() - 10) * 3;
        }
        int n4 = n2 = 0;
        while (n4 < ((Object)object2).length) {
            a2.setRemainingSp((int)object2[n2], n2++);
            n4 = n2;
        }
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.updateSingleStat(MapleStat.AVAILABLESP, 0);
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.enableActions());
    }

    public /* synthetic */ void changeSkillLevel_Skip(int a22, byte a3, byte a4, boolean a5) {
        MapleCharacter a6;
        ISkill a22 = SkillFactory.getSkill(a22);
        if (a22 == null) {
            if (a5) {
                a6.getClient().sendPacket(MaplePacketCreator.enableActions());
            }
            return;
        }
        if (a5) {
            a6.Cb.sendPacket(MaplePacketCreator.updateSkill(a22.getId(), a3, a4, -1L));
        }
        if (a3 == 0 && a4 == 0) {
            if (a6.sB.containsKey(a22)) {
                a6.sB.remove(a22);
                a6.zA = true;
                return;
            }
        } else {
            a6.sB.put(a22, new SkillEntry(a3, a4, -1L));
            a6.zA = true;
        }
    }

    public /* synthetic */ void checkCopyItems() {
        MapleCharacter a2;
        a2.checkCopyItems(false);
    }

    public /* synthetic */ boolean achievementFinished(int a2) {
        MapleCharacter a3;
        return a3.lc.contains(a2);
    }

    public /* synthetic */ void registerEffect(MapleStatEffect a2, long a3, int a4) {
        MapleCharacter a5;
        MapleStatEffect mapleStatEffect = a2;
        a5.registerEffect(mapleStatEffect, a3, mapleStatEffect.getStatups(), a2.getDuration(), a4);
    }

    public /* synthetic */ void playerDead() {
        int n2;
        MapleCharacter mapleCharacter;
        MapleCharacter a2;
        Object object = a2.getStatForBuff(MapleBuffStat.FINAL_FEINT);
        if (object != null) {
            int n3 = 24111002;
            MapleCharacter mapleCharacter2 = a2;
            a2.getStat().setHp(a2.getStat().getMaxHp());
            MapleCharacter mapleCharacter3 = a2;
            MapleCharacter mapleCharacter4 = a2;
            mapleCharacter4.updateSingleStat(MapleStat.HP, a2.getStat().getMaxHp());
            mapleCharacter3.setStance(0);
            mapleCharacter4.dispelDebuffs();
            mapleCharacter3.getClient().sendPacket(MaplePacketCreator.skillCooldown(24111002, ((MapleStatEffect)object).getCooldown(a2)));
            mapleCharacter2.addCooldown(24111002, System.currentTimeMillis(), ((MapleStatEffect)object).getCooldown(a2) * 1000);
            ISkill iSkill = SkillFactory.getSkill(24111002);
            if (mapleCharacter2.getSkillLevel(iSkill) > 0) {
                MapleCharacter mapleCharacter5 = a2;
                mapleCharacter5.setSkillTemp(24111002, 1);
                ISkill iSkill2 = iSkill;
                object = iSkill2.getEffect(mapleCharacter5.getSkillLevel(iSkill2));
                Serializable serializable = object;
                ((MapleStatEffect)serializable).applyTo(a2, ((MapleStatEffect)serializable).getDuration());
                a2.dropMessage(5, MapleNodes.ALLATORIxDEMO("\u751d\u65b2\u5e54\u9045\u5e57\u5f7f\u76a8\u6546\u67b0\u7672\u52f9\uff02\u626c\u4eeb\u8e9e\u9040\u4e2c\u6b2f\u6b57\u4eaf\u76a8\u6d67\u5287\uff02\u4e0a\u64cf\u6725:\u79fe\u768a\u710d\u657b\u666e\u6546\u302e"));
            }
            return;
        }
        if (a2.getMap().isClickGameMap()) {
            MapleCharacter mapleCharacter6 = a2;
            mapleCharacter6.dropMessage(5, FixDropNullItem.ALLATORIxDEMO("\u4f26\u76d8\u520b\u6b55\u576e\u9ee8\u648c\u4e7d\u6276\u5706\u5750\u001a\u5db4\u4feb\u8b31\u609e\u4e4b\u63bf\u7dd5\u9a61g"));
            mapleCharacter6.getStat().setHp(a2.getStat().getMaxHp());
            MapleCharacter mapleCharacter7 = a2;
            mapleCharacter7.setStance(0);
            MapleCharacter mapleCharacter8 = a2;
            mapleCharacter8.changeMap(mapleCharacter7.getMap(), mapleCharacter8.getMap().getPortal(0));
            mapleCharacter7.getEventInstance().playerKilled(a2);
            return;
        }
        if (a2.getEventInstance() != null && !a2.haveItem(5510000, true ? 1 : 0, false, true) || a2.inPVP()) {
            a2.getEventInstance().playerKilled(a2);
        }
        a2.dispelSkill(0);
        if (GameSetConstants.MAPLE_VERSION >= 134) {
            MapleCharacter mapleCharacter9 = a2;
            mapleCharacter = mapleCharacter9;
            mapleCharacter9.cancelEffectFromBuffStat(MapleBuffStat.SHADOWPARTNER);
            mapleCharacter9.cancelEffectFromBuffStat(MapleBuffStat.MORPH);
            mapleCharacter9.cancelEffectFromBuffStat(MapleBuffStat.SOARING);
            mapleCharacter9.cancelEffectFromBuffStat(MapleBuffStat.MONSTER_RIDING);
            mapleCharacter9.cancelEffectFromBuffStat(MapleBuffStat.MECH_CHANGE);
            mapleCharacter9.cancelEffectFromBuffStat(MapleBuffStat.RECOVERY);
            mapleCharacter9.cancelEffectFromBuffStat(MapleBuffStat.HP_BOOST);
            mapleCharacter9.cancelEffectFromBuffStat(MapleBuffStat.MP_BOOST);
            mapleCharacter9.cancelEffectFromBuffStat(MapleBuffStat.ENHANCED_MAXHP);
            mapleCharacter9.cancelEffectFromBuffStat(MapleBuffStat.ENHANCED_MAXMP);
            mapleCharacter9.cancelEffectFromBuffStat(MapleBuffStat.MAXHP);
            mapleCharacter9.cancelEffectFromBuffStat(MapleBuffStat.MAXMP);
            mapleCharacter9.cancelEffectFromBuffStat(MapleBuffStat.FELINE_BERSERK);
            mapleCharacter9.cancelEffectFromBuffStat(MapleBuffStat.INFINITY);
            mapleCharacter9.cancelEffectFromBuffStat(MapleBuffStat.CONVERSION);
            mapleCharacter9.cancelEffectFromBuffStat(MapleBuffStat.REAPER);
            mapleCharacter9.cancelEffectFromBuffStat(MapleBuffStat.SUMMON);
        } else {
            MapleCharacter mapleCharacter10 = a2;
            mapleCharacter = mapleCharacter10;
            mapleCharacter10.cancelEffectFromBuffStat(MapleBuffStat.MORPH);
            mapleCharacter10.cancelEffectFromBuffStat(MapleBuffStat.MONSTER_RIDING);
            mapleCharacter10.cancelEffectFromBuffStat(MapleBuffStat.SUMMON);
            mapleCharacter10.cancelEffectFromBuffStat(MapleBuffStat.PUPPET);
        }
        mapleCharacter.checkFollow();
        int n4 = n2 = !JobConstants.isBeginnerJob(a2.ob) ? 1 : 0;
        if (n2 != 0) {
            boolean bl;
            block18: {
                boolean bl2 = false;
                object = new LinkedList<Integer>();
                object.add(5130000);
                object.add(5130002);
                object.add(5131000);
                object = object.iterator();
                Object object2 = object;
                while (object2.hasNext()) {
                    n2 = (Integer)object.next();
                    int n5 = a2.getItemQuantity(n2, false);
                    if (n5 <= 0) {
                        object2 = object;
                        continue;
                    }
                    IItem iItem = a2.getInventory(MapleInventoryType.CASH).findById(n2);
                    int n6 = 1;
                    if (iItem.getExpiration() > 0L) {
                        n6 = (int)((iItem.getExpiration() - System.currentTimeMillis()) / 1000L / 60L / 60L / 24L);
                    }
                    MapleInventoryManipulator.removeById(a2.Cb, MapleInventoryType.CASH, n2, true ? 1 : 0, true, false);
                    if (n5 > 255) {
                        n5 = 255;
                    }
                    a2.Cb.sendPacket(MTSCSPacket.useAmulet(n5, n6, n2));
                    a2.setCharm(n2);
                    bl = bl2 = true;
                    break block18;
                }
                bl = bl2;
            }
            if (!bl) {
                MapleCharacter mapleCharacter11;
                float f2;
                MapleCharacter mapleCharacter12 = a2;
                n2 = GameConstants.getExpNeededForLevel(mapleCharacter12.IC);
                if (mapleCharacter12.rC.isTown() || FieldLimitType.RegularExpLoss.check(a2.rC.getFieldLimit())) {
                    f2 = 0.01f;
                    mapleCharacter11 = a2;
                } else {
                    float f3;
                    f2 = (float)((double)((a2.ob / 100 == 3 ? (f3 = 0.08f) : (f3 = 0.2f)) / (float)a2.GB.getLuk()) + 0.05);
                    if (GameSetConstants.MAPLE_VERSION >= 134) {
                        f2 = 0.1f - (float)(a2.Ta.get((Object)MapleTrait.MapleTraitType.\u9818\u5c0e\u529b).getLevel() / 20) / 100.0f;
                    }
                    mapleCharacter11 = a2;
                }
                int n7 = (int)((long)mapleCharacter11.RC - (long)((double)n2 * (double)f2));
                if (n7 < 0) {
                    n7 = 0;
                }
                a2.RC = n7;
            }
        }
        MapleCharacter mapleCharacter13 = a2;
        mapleCharacter13.updateSingleStat(MapleStat.EXP, mapleCharacter13.RC);
        if (!a2.GB.checkEquipDurabilitys(a2, -100)) {
            a2.dropMessage(5, MapleNodes.ALLATORIxDEMO("\u8a5e\u88d3\u50b5\u801e\u4e69\u5ea8\u5dde\u7d9d\u4f53\u7526\u5ba0\u756c\uff20\u5fcb\u9824\u4fe0\u742a\u6243\u53c3\u4eeb\u7e50\u7e82\u4f53\u7526\u302e"));
        }
        if (a2.Fb != null) {
            a2.GB.setHp(50);
            a2.Fb.fail(a2);
        }
    }

    public /* synthetic */ void dispelSkill(int a2) {
        MapleCharacter a3;
        for (MapleBuffStatValueHolder mapleBuffStatValueHolder : new LinkedList<MapleBuffStatValueHolder>(a3.kb.values())) {
            if (a2 == 0) {
                if (!mapleBuffStatValueHolder.effect.isSkill() || mapleBuffStatValueHolder.effect.getSourceId() != 4331003 && mapleBuffStatValueHolder.effect.getSourceId() != 4331002 && mapleBuffStatValueHolder.effect.getSourceId() != 4341002 && mapleBuffStatValueHolder.effect.getSourceId() != 22131001 && mapleBuffStatValueHolder.effect.getSourceId() != 1321007 && mapleBuffStatValueHolder.effect.getSourceId() != 2121005 && mapleBuffStatValueHolder.effect.getSourceId() != 2221005 && mapleBuffStatValueHolder.effect.getSourceId() != 2311006 && mapleBuffStatValueHolder.effect.getSourceId() != 2321003 && mapleBuffStatValueHolder.effect.getSourceId() != 3111002 && mapleBuffStatValueHolder.effect.getSourceId() != 3111005 && mapleBuffStatValueHolder.effect.getSourceId() != 3211002 && mapleBuffStatValueHolder.effect.getSourceId() != 3211005 && mapleBuffStatValueHolder.effect.getSourceId() != 4111002) continue;
                a3.cancelEffect(mapleBuffStatValueHolder.effect, false, mapleBuffStatValueHolder.startTime);
                return;
            }
            if (!mapleBuffStatValueHolder.effect.isSkill() || mapleBuffStatValueHolder.effect.getSourceId() != a2) continue;
            a3.cancelEffect(mapleBuffStatValueHolder.effect, false, mapleBuffStatValueHolder.startTime);
            return;
        }
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    public /* synthetic */ void spawnPet(byte a, boolean a, boolean a) {
        block11: {
            var4_6 = a.getInventory(MapleInventoryType.CASH).getItem(a);
            var5_7 = MapleItemInformationProvider.getInstance();
            if (var4_6 == null) return;
            if (var4_6.getItemId() > 5010000) return;
            if (var4_6.getItemId() < 5000000) {
                return;
            }
            switch (var4_6.getItemId()) {
                case 5000028: 
                case 5000047: {
                    var5_7 = MaplePet.createPet(var4_6.getItemId() + 1, MapleInventoryIdentifierPet.getInstance());
                    if (var5_7 == null) break;
                    v0 = a;
                    MapleInventoryManipulator.addById(a.Cb, var4_6.getItemId() + 1, (short)1, var4_6.getOwner(), (MaplePet)var5_7, 45L);
                    v1 = v0;
                    MapleInventoryManipulator.removeFromSlot(v0.Cb, MapleInventoryType.CASH, a, (short)1, false);
                    break block11;
                }
                default: {
                    var5_7 = var4_6.getPet();
                    if (var5_7 == null || var4_6.getItemId() == 5000054 && var5_7.getSecondsLeft() <= 0 || var4_6.getExpiration() != -1L && var4_6.getExpiration() <= System.currentTimeMillis()) break;
                    if (!var5_7.getSummoned()) ** GOTO lbl27
                    v2 = a;
                    v1 = v2;
                    v2.unequipPet((MaplePet)var5_7, false);
                    break block11;
lbl27:
                    // 1 sources

                    a = (byte)PlayerStats.getSkillByJob(8, a.getJob());
                    if (a.getSkillLevel(SkillFactory.getSkill(a)) == 0 && a.getSummonedPet(0) != null && !GameSetConstants.THREE_PET) {
                        v3 = a;
                        v4 = v3;
                        v3.unequipPet(v3.getSummonedPet(0), false);
                    } else {
                        if (a) {
                            a.shiftPetsRight();
                        }
                        v4 = a;
                    }
                    a = v4.getPosition();
                    var5_7.setPos(a);
                    try {
                        var5_7.setFh(a.getMap().getFootholds().findBelow(a).getId());
                        v5 = var5_7;
                    }
                    catch (NullPointerException a) {
                        v6 = var5_7;
                        v5 = v6;
                        v6.setFh(0);
                    }
                    v5.setStance(0);
                    v7 = var5_7;
                    v8 = a;
                    v7.setSummoned(v8.getPetSlotNext() + 1);
                    v8.addPet((MaplePet)v7);
                    if (!a) break;
                    if (GameSetConstants.MAPLE_VERSION < 134) ** GOTO lbl67
                    v9 = a;
                    a.Cb.sendPacket(PetPacket.updatePet((MaplePet)var5_7, v9.getInventory(MapleInventoryType.CASH).getItem((byte)var5_7.getInventoryPosition()), true));
                    v10 = a;
                    if (!v9.isHidden()) {
                        v11 = a;
                        v10.rC.broadcastMessage(v11, MaplePacketCreator.removePlayerFromMap(v11.getId()), false);
                        v12 = a;
                        v13 = v12;
                        a.rC.broadcastMessage(v12, MaplePacketCreator.spawnPlayerMapobject(v12), false);
                    } else {
                        v14 = a;
                        v10.rC.broadcastGMMessage(v14, MaplePacketCreator.removePlayerFromMap(v14.getId()), false);
                        v15 = a;
                        a.rC.broadcastGMMessage(v15, MaplePacketCreator.spawnPlayerMapobject(v15), false);
lbl67:
                        // 2 sources

                        v13 = a;
                    }
                    v16 = a;
                    v13.getMap().broadcastMessage(v16, PetPacket.showPet(v16, (MaplePet)var5_7, false, false, false), true);
                    a.Cb.sendPacket(PetPacket.loadExceptionList(a, (MaplePet)var5_7));
                    if (GameSetConstants.MAPLE_VERSION >= 123) break;
                    a.Cb.sendPacket(PetPacket.petStatUpdate(a));
                    break;
                }
            }
            v1 = a;
        }
        v1.Cb.sendPacket(PetPacket.emptyStatUpdate());
    }

    public /* synthetic */ void setCheckedEffectAmulet(boolean a2) {
        a.Xb = a2;
    }

    public /* synthetic */ void addMoveMob(int a2) {
        MapleCharacter a3;
        if (a3.Kd.containsKey(a2)) {
            a3.Kd.put(a2, a3.Kd.get(a2) + 1);
            if (a3.Kd.get(a2) > 30) {
                for (MapleCharacter mapleCharacter : a3.getMap().getCharactersThreadsafe()) {
                    if (!mapleCharacter.getMoveMobs().containsKey(a2)) continue;
                    MapleCharacter mapleCharacter2 = mapleCharacter;
                    mapleCharacter2.getClient().sendPacket(MobPacket.killMonster(a2, 1));
                    mapleCharacter2.getMoveMobs().remove(a2);
                }
            }
        } else {
            a3.Kd.put(a2, 1);
        }
    }

    public /* synthetic */ int setPeeNumber(int a2) {
        MapleCharacter a3;
        a3.Aa = a2;
        return a3.Aa;
    }

    public /* synthetic */ void setPVPDirection(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.dropDebugMessage("PVP_value:" + mapleCharacter.Ld);
        a3.Ld = a2;
    }

    public /* synthetic */ boolean isPhoneVerified() {
        MapleCharacter a2;
        return a2.getPhoneNumber() > 0L;
    }

    public /* synthetic */ long getMobDirection() {
        MapleCharacter a2;
        return a2.K;
    }

    public /* synthetic */ void gainItem(int a2) {
        MapleCharacter a3;
        if (MapleItemInformationProvider.getInstance().itemExists(a2)) {
            MapleCharacter mapleCharacter = a3;
            MapleInventoryManipulator.addById(mapleCharacter.Cb, a2, (short)1, null);
            mapleCharacter.dropMessage("\u60a8\u5df2\u7372\u5f97\u7269\u54c1:" + MapleItemInformationProvider.getInstance().getName(a2));
            return;
        }
        a3.dropMessage("\u6b64\u7269\u54c1\u4e0d\u5b58\u5728,\u8acb\u901a\u77e5\u7ba1\u7406\u54e1 \u7269\u54c1\u4ee3\u78bc:" + a2);
    }

    public /* synthetic */ void addMaxDamage(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        long l2 = mapleCharacter.getEarnMeso() + (long)a2;
        mapleCharacter.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u52e3\u610d\u9834\u50f1"), (int)l2, false);
    }

    public /* synthetic */ MapleTrade getTrade() {
        MapleCharacter a2;
        return a2.vb;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    public /* synthetic */ void addOnlineSecond() {
        block2: {
            var1_1 = Calendar.getInstance().get(11);
            a.handleResetMonth();
            if (GameSetConstants.MAPLE_VERSION < 134 || (long)var1_1 == a.getLastHour()) break block2;
            if (a.getLastHour() == 0L || a.getFatigue() <= 0) ** GOTO lbl13
            var2_2 = (long)var1_1 - a.getLastHour();
            if ((long)a.getFatigue() - 5L * var2_2 > 0L) {
                v0 = a;
                v1 = v0;
                v0.getClient().sendPacket(MaplePacketCreator.showIncFatigueByRest());
                v0.setFatigue((int)((long)v0.getFatigue() - 5L * var2_2));
            } else {
                a.setFatigue(0);
lbl13:
                // 2 sources

                v1 = a;
            }
            v1.setLastHour(var1_1);
        }
        v2 = a;
        v2.hC += 3;
        if (v2.hC % 180 != 0) return;
        v3 = a;
        v3.addOnlineMins(3);
        v3.dropDebugMessage("[GM\u63d0\u793a] \u5df2\u589e\u52a0\u7dda\u4e0a\u5206\u9418\u6578, \u76ee\u524d\u7dda\u4e0a\u5206\u9418: " + v3.getOnlineMins());
        a.hC = 0;
    }

    public /* synthetic */ void saveLocation(SavedLocationType a2, int a3) {
        a.Gb[a2.getValue()] = a3;
        a.kc = true;
    }

    public /* synthetic */ void DeleteFaceAlbum(int a2) {
        MapleCharacter a3;
        if (a3.Oc.size() > a3.Cd.length) {
            return;
        }
        int n2 = 0;
        int n3 = a3.Oc.size();
        int n4 = n2;
        while (n4 < n3) {
            if (a3.Oc.get(n2) == 0 || a3.Oc.get(n2) == a2) {
                --n3;
                a3.Oc.remove(n2);
                --n2;
            }
            n4 = ++n2;
        }
        n2 = a3.Cd.length - a3.Oc.size();
        int n5 = n3 = 0;
        while (n5 < n2) {
            a3.Oc.add(0);
            n5 = ++n3;
        }
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.setFaceAlbum(mapleCharacter.Oc.stream().mapToInt(Integer::intValue).toArray());
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    public /* synthetic */ void afterAttack(int a, int a, int a) {
        switch (a.getJob()) {
            case 511: 
            case 512: {
                v0 = a;
                v1 = v0;
                v0.handleEnergyCharge(5110001, a * a);
                break;
            }
            case 1510: 
            case 1511: 
            case 1512: {
                v2 = a;
                v1 = v2;
                v2.handleEnergyCharge(15100004, a * a);
                break;
            }
            case 422: {
                if (a != 4221001) ** GOTO lbl20
                if (a.getShadowKillCount() < 5) ** GOTO lbl21
                v3 = a;
                v4 = v3;
                v3.resetShadowKillCount();
                ** GOTO lbl22
lbl20:
                // 1 sources

                a.setShadowKillCount(Math.min(5, a.getShadowKillCount() + 1));
lbl21:
                // 2 sources

                v4 = a;
lbl22:
                // 2 sources

                v4.updateShadowKillCount();
            }
            default: {
                v1 = a;
            }
        }
        a = v1.getBuffedValue(MapleBuffStat.COMBO);
        var4_6 = a.getBuffSource(MapleBuffStat.COMBO);
        if (a > 0 && a != null && a != 1111008 && !SkillConstants.is\u9b25\u6c23\u653b\u64ca(a)) {
            a.handleOrbgain(var4_6);
        }
        if (a.getBuffedValue(MapleBuffStat.OWL_SPIRIT) != null) {
            a.addOwlCount();
        }
        if (a.getBuffStatValueHolder(MapleBuffStat.ENHANCED_WATK, 5211009) != null) {
            a.addMagicBulletCount();
        }
        v5 = a;
        v5.cancelEffectFromBuffStat(MapleBuffStat.WIND_WALK);
        v5.cancelEffectFromBuffStat(MapleBuffStat.INFILTRATE);
        a = v5.getStatForBuff(MapleBuffStat.DARKSIGHT);
        if (!(a == null || a.getSourceId() == 0x421211 && a.makeChanceResult())) {
            a.cancelEffectFromBuffStat(MapleBuffStat.DARKSIGHT);
        }
        if ((a = a.getStatForBuff(MapleBuffStat.DARK_AURA)) == null) return;
        if (a.getBuffSource(MapleBuffStat.DARK_AURA) != 32120000) return;
        if (a.makeChanceResult() == false) return;
        a.getStatForBuff(MapleBuffStat.DARK_AURA).applyMonsterBuff(a);
    }

    public /* synthetic */ int getMobMove_Count() {
        MapleCharacter a2;
        return a2.ta;
    }

    public /* synthetic */ void addQuestPoint(int a22, long a3) {
        MapleCharacter a4;
        MapleQuestStatus a22 = a4.getQuestNAdd(MapleQuest.getInstance(a22));
        if (a22.getCustomData() != null) {
            MapleQuestStatus mapleQuestStatus = a22;
            mapleQuestStatus.setCustomData(String.valueOf(a3 + Long.parseLong(mapleQuestStatus.getCustomData())));
            return;
        }
        a22.setCustomData(String.valueOf(a3));
    }

    public /* synthetic */ void setBuffedValue(MapleBuffStat a2, int a3) {
        MapleCharacter a4;
        if ((a2 = a4.kb.get(a2)) == null) {
            return;
        }
        ((MapleBuffStatValueHolder)a2).value = a3;
    }

    public final /* synthetic */ boolean canMP() {
        MapleCharacter a2;
        if (a2.iB + 1000L > System.currentTimeMillis()) {
            return false;
        }
        a2.iB = System.currentTimeMillis();
        return true;
    }

    public /* synthetic */ void setDex_Force(int a2) {
        MapleCharacter a3;
        if (World.Find.findChannel(a3.cB) <= 0) {
            a3.UpdateCharacter(FixDropNullItem.ALLATORIxDEMO("\"S>"), a2);
            return;
        }
        a3.GB.dex = (short)a2;
        a3.GB.recalcLocalStats(false);
    }

    public /* synthetic */ long getDPM() {
        MapleCharacter a2;
        return a2.Za;
    }

    public /* synthetic */ boolean checkWarpingMap() {
        boolean bl;
        MapleCharacter a2;
        boolean bl2 = a2.e > 0L;
        boolean bl3 = bl = a2.e + 1500L < System.currentTimeMillis();
        if (!bl2) {
            return bl2;
        }
        return !bl2 || !bl;
    }

    public /* synthetic */ void setFaceAlbum(int a2) {
        MapleCharacter a3;
        if (a3.Oc.size() >= a3.Cd.length) {
            return;
        }
        int n2 = 0;
        int n3 = a3.Oc.size();
        int n4 = n2;
        while (n4 < n3) {
            if (a3.Oc.get(n2) == 0) {
                --n3;
                a3.Oc.remove(n2);
                --n2;
            }
            n4 = ++n2;
        }
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.Oc.add(a2);
        n2 = mapleCharacter.Cd.length - a3.Oc.size();
        int n5 = n3 = 0;
        while (n5 < n2) {
            a3.Oc.add(0);
            n5 = ++n3;
        }
        MapleCharacter mapleCharacter2 = a3;
        mapleCharacter2.setFaceAlbum(mapleCharacter2.Oc.stream().mapToInt(Integer::intValue).toArray());
    }

    public /* synthetic */ void addUseMega(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        long l2 = mapleCharacter.getUseMega() + (long)a2;
        mapleCharacter.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u4efc\u65a3\u5ed5\u64eb\u4f49\u756e"), l2, false);
    }

    public /* synthetic */ int getSetuplist() {
        MapleCharacter a2;
        Object object = a2.getInventory(MapleInventoryType.SETUP);
        ArrayList<Integer> arrayList = new ArrayList<Integer>();
        object = ((MapleInventory)object).iterator();
        while (object.hasNext()) {
            IItem iItem = (IItem)object.next();
            if (iItem.getItemId() < 3010000 || iItem.getItemId() > 3029999 || arrayList.contains(iItem.getItemId())) continue;
            arrayList.add(iItem.getItemId());
        }
        return arrayList.size();
    }

    public /* synthetic */ void sendEnglishQuiz(String a2) {
        MapleCharacter a3;
        a3.Cb.sendPacket(MaplePacketCreator.englishQuizMsg(a2));
    }

    public /* synthetic */ int getAvailableCP() {
        MapleCharacter a2;
        return a2.sc;
    }

    public /* synthetic */ int getOwlCount() {
        MapleCharacter a2;
        return a2.xC;
    }

    public /* synthetic */ int getVPoints() {
        MapleCharacter a2;
        return a2.jc;
    }

    public /* synthetic */ void setSpeedStartTime(long a2) {
        a.sa = a2;
    }

    public /* synthetic */ byte getCardStack() {
        MapleCharacter a2;
        return a2.s;
    }

    public /* synthetic */ boolean isLeft() {
        MapleCharacter a2;
        return a2.Ld >= 0;
    }

    public /* synthetic */ void setNpcPotentialMessage(String a2) {
        a.M = a2;
    }

    public /* synthetic */ void MapReload(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        MapleCharacter mapleCharacter2 = a3;
        MapleMap mapleMap = ChannelServer.getInstance(mapleCharacter.wc, mapleCharacter2.Cb.getChannel()).getMapFactory().getMap(a2);
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.getCharInfo(a3));
        mapleCharacter2.getMap().removePlayer(a3);
        mapleMap.addPlayer(a3);
        mapleCharacter.changeMap(a2);
    }

    public /* synthetic */ void addEarnPoint(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        long l2 = mapleCharacter.getEarnPoint() + (long)a2;
        mapleCharacter.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u4efc\u65a3\u7344\u5fd1\u7d33\u526f"), l2, false);
    }

    /*
     * Exception decompiling
     */
    public static /* synthetic */ MapleCharacter loadCharFromDB(int a, MapleClient a, boolean a, Map<Integer, CardData> a) {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [2[TRYBLOCK]], but top level block is 18[CATCHBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ void UpdateYutoShieldTime() {
        a.Wa = System.currentTimeMillis();
    }

    public /* synthetic */ void addBTC(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        long l2 = mapleCharacter.getBTC() + (long)a2;
        mapleCharacter.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u0004b\u0005"), l2, false);
        Cryptocurrency.HandlePrice(MapleNodes.ALLATORIxDEMO("nZo"), a2);
    }

    public /* synthetic */ void setFaceMarking(int a2) {
        if (a2 >= 1012276 && a2 <= 1012280 || a2 == 1012361 || a2 == 1012363 || a2 == 1012455 || a2 == 1012456 || a2 == 1012457 || a2 == 1012458) {
            a.Bd = a2;
            return;
        }
        a.Bd = 0;
    }

    public /* synthetic */ void setConversation(int a2) {
        MapleCharacter a3;
        a3.cb.set(a2);
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ boolean addMonsterPetLevel(int a) {
        var2_3 = DBConPool.getInstance().getDataSource().getConnection();
        try {
            var3_5 = null;
            v0 = var3_5 = var2_3.prepareStatement(FixDropNullItem.ALLATORIxDEMO("\u0013f\u0002w\u0012sf[)X5B#D6S2\u0016\u0015s\u0012\u0016+Y(E2S4Z#@#Zf\u000bf[)X5B#D*S0S*\u0016m\u0016w\u0016\u0011~\u0003d\u0003\u0016%^'D'U2S4_\"\u0016{\u0016y\u0016'X\"\u0016+Y(E2S4_\"\u0016{\u0016y"));
            v0.setInt(1, a.XC);
            var3_5.setInt(2, a);
            v0.execute();
            var3_5.close();
            ** if (var2_3 == null) goto lbl-1000
        }
        catch (Throwable var3_6) {
            if (var2_3 == null) ** GOTO lbl24
            try {
                var2_3.close();
                v1 = var3_6;
                ** GOTO lbl25
            }
            catch (Throwable a) {
                try {
                    var3_6.addSuppressed(a);
lbl24:
                    // 2 sources

                    v1 = var3_6;
lbl25:
                    // 2 sources

                    throw v1;
                }
                catch (Exception var2_4) {
                    FilePrinter.printError(MapleNodes.ALLATORIxDEMO("oHjaaB}Xk^^Iz`kZk@ XvX"), var2_4);
                    return false;
                }
            }
        }
lbl-1000:
        // 1 sources

        {
            var2_3.close();
        }
lbl-1000:
        // 2 sources

        {
        }
        return true;
    }

    public /* synthetic */ void changeMap(MapleMap a2, MaplePortal a3) {
        MapleCharacter a4;
        MapleMap mapleMap = a2;
        a4.ALLATORIxDEMO(mapleMap, a3.getPosition(), MaplePacketCreator.getWarpToMap(mapleMap, a3.getId(), a4), null);
    }

    public /* synthetic */ void setRemainingAp(short a2) {
        if (a2 >= 0) {
            a.iA = a2;
        }
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ int getMP() {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Started 2 blocks at once
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.getStartingBlocks(Op04StructuredStatement.java:406)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:481)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public final /* synthetic */ boolean ban(String a, boolean a, boolean a, boolean a) {
        block36: {
            if (a.oC == null) {
                throw new RuntimeException(MapleNodes.ALLATORIxDEMO("x|UgBi\fzC.NoB.M.BaB#@aMjIj\fmDo^oOzI|\f&Xk_zDoOe\u0005"));
            }
            a = a.Cb.getSessionIPAddress();
            var5_7 = DBConPool.getInstance().getDataSource().getConnection();
            v0 = var6_10 = var5_7.prepareStatement(FixDropNullItem.ALLATORIxDEMO("c\u0016r\u0007b\u0003\u0016'U%Y3X2Efe\u0003bfT'X(S\"\u0016{\u0016y\u001afT'X4S'E)Xf\u000bf\tfa\u000es\u0014sf_\"\u0016{\u0016y"));
            v1 = 1;
            if (!a) break block36;
            v2 = 2;
            ** GOTO lbl15
        }
        v2 = 1;
lbl15:
        // 2 sources

        v0.setInt(v1, v2);
        v3 = var6_10;
        v3.setString(2, a);
        v3.setInt(3, a.nC);
        v3.execute();
        var6_10.close();
        if (MapleCharacter.isVpn(a)) ** GOTO lbl-1000
        FileoutputUtil.logToFile(MapleNodes.ALLATORIxDEMO("@aK}\u0003FMmG!noB!aw\u007f\u007f@QE`\\{X XvX"), "\r\n" + FileoutputUtil.NowTime() + " IP: " + a + " MAC: " + a.getClient().getLoginMacs() + " \u7406\u7531: " + a, false, false);
        var6_10 = var5_7.prepareStatement(FixDropNullItem.ALLATORIxDEMO("\u007f\be\u0003d\u0012\u0016\u000fx\u0012yf_6T'X5\u0016n_6\u001ff`\u0007z\u0013s\u0015\u0016n\to"));
        var6_10.setString(1, a);
        var6_10.executeUpdate();
        var6_10.close();
        try {
            for (ChannelServer var8_15 : LoginServer.getWorldStatic(a.wc).getChannels()) {
                for (MapleCharacter var10_21 : var8_15.getPlayerStorage().getAllCharactersThreadSafe()) {
                    if (!var10_21.getClient().getSessionIPAddress().equals(a.Cb.getSessionIPAddress()) || var10_21.getClient().isGm()) continue;
                    v4 = var10_21;
                    v4.getClient().disconnect();
                    v4.getClient().getSession().close();
                }
            }
            ** GOTO lbl-1000
        }
        catch (Exception var7_13) {
            try {
                block42: {
                    block45: {
                        block40: {
                            MapleClient.banSingleMacs(a.getNowMacs());
                            if (!a) break block45;
                            var7_12 = var5_7.prepareStatement(MapleNodes.ALLATORIxDEMO("\u007fK`KoZ\f$\fH~Aa.MmOaY`X}\fYdK~K\fgH.\u0011.\u0013"));
                            try {
                                block38: {
                                    v5 = var7_12;
                                    v5.setInt(1, a.nC);
                                    var8_16 = v5.executeQuery();
                                    try {
                                        block37: {
                                            if (var8_16.next()) {
                                                var9_18 = var5_7.prepareStatement(FixDropNullItem.ALLATORIxDEMO("c\u0016r\u0007b\u0003\u0016'U%Y3X2Efe\u0003bfT'X(S\"\u0016{\u0016y\u001afT'X4S'E)Xf\u000bf\tfa\u000es\u0014sfS+W/Zf\u000bf\tfy\u0014\u0016\u0015S5E/Y(\u007f\u0016\u0016{\u0016y"));
                                                try {
                                                    var9_18.setInt(1, a != false ? 2 : 1);
                                                    v6 = var9_18;
                                                    var9_18.setString(2, a);
                                                    v6.setString(3, var8_16.getString(MapleNodes.ALLATORIxDEMO("IcMg@")));
                                                    v6.setString(4, a);
                                                    v6.execute();
                                                    if (var9_18 == null) break block37;
                                                    v7 = var8_16;
                                                }
                                                catch (Throwable var10_22) {
                                                    block39: {
                                                        if (var9_18 != null) {
                                                            try {
                                                                var9_18.close();
                                                                v8 = var10_22;
                                                                break block39;
                                                            }
                                                            catch (Throwable a) {
                                                                var10_22.addSuppressed(a);
                                                            }
                                                        }
                                                        v8 = var10_22;
                                                    }
                                                    throw v8;
                                                }
                                                var9_18.close();
                                                break block38;
                                            }
                                        }
                                        v7 = var8_16;
                                    }
                                    catch (Throwable var9_19) {
                                        block41: {
                                            if (var8_16 != null) {
                                                try {
                                                    var8_16.close();
                                                    v9 = var9_19;
                                                    break block41;
                                                }
                                                catch (Throwable var10_23) {
                                                    var9_19.addSuppressed(var10_23);
                                                }
                                            }
                                            v9 = var9_19;
                                        }
                                        throw v9;
                                    }
                                }
                                if (v7 != null) {
                                    v10 = var7_12;
                                    var8_16.close();
                                    break block40;
                                }
                                v10 = var7_12;
                            }
                            catch (Throwable var8_17) {
                                block43: {
                                    if (var7_12 != null) {
                                        try {
                                            var7_12.close();
                                            v11 = var8_17;
                                            break block43;
                                        }
                                        catch (Throwable var9_20) {
                                            var8_17.addSuppressed(var9_20);
                                        }
                                    }
                                    v11 = var8_17;
                                }
                                throw v11;
                            }
                        }
                        if (v10 != null) {
                            v12 = var5_7;
                            var7_12.close();
                            break block42;
                        }
                    }
                    v12 = var5_7;
                    {
                        catch (Throwable var6_11) {
                            block44: {
                                if (var5_7 != null) {
                                    try {
                                        var5_7.close();
                                        v13 = var6_11;
                                        break block44;
                                    }
                                    catch (Throwable var7_14) {
                                        var6_11.addSuppressed(var7_14);
                                    }
                                }
                                v13 = var6_11;
                            }
                            throw v13;
                        }
                    }
                }
                if (v12 != null) {
                    var5_7.close();
                }
            }
            catch (SQLException var5_8) {
                System.err.println("Error while banning" + var5_8);
                return false;
            }
        }
        try {
            a.Cb.disconnect();
        }
        catch (Exception var5_9) {
            // empty catch block
        }
        return true;
    }

    public /* synthetic */ int getBossLog(String a2) {
        MapleCharacter a3;
        a2 = "\u65e5\u8a08" + FileoutputUtil.NowDay() + (String)a2;
        return (int)a3.getCharacterSet((String)a2, false);
    }

    public /* synthetic */ void addMobDirection(int a2) {
        MapleCharacter a3;
        if (a3.a + 60000L < System.currentTimeMillis()) {
            a3.resetMobDirection();
            a3.a = System.currentTimeMillis();
        }
        a3.K += (long)a2;
    }

    public /* synthetic */ int getSavedFaces(int a2) {
        if (a2 <= 3) {
            MapleCharacter a3;
            return a3.fb[a2];
        }
        return -1;
    }

    public /* synthetic */ void setHpMpApUsed(short a2) {
        a.qC = a2;
    }

    public /* synthetic */ int getMapId() {
        MapleCharacter a2;
        if (a2.rC != null) {
            return a2.rC.getId();
        }
        return a2.Qc;
    }

    public /* synthetic */ void sendNote(String a2, String a3, int a4) {
        MapleCharacter a5;
        MapleCharacterUtil.sendNote(a2, a5.getName(), a3, a4);
    }

    public /* synthetic */ void leaveMap() {
        MapleCharacter mapleCharacter;
        MapleCharacter a2;
        MapleCharacter mapleCharacter2 = a2;
        mapleCharacter2.la.clear();
        mapleCharacter2.AA.writeLock().lock();
        try {
            a2.MB.clear();
            mapleCharacter = a2;
            mapleCharacter.AA.writeLock().unlock();
        }
        catch (Throwable throwable) {
            a2.AA.writeLock().unlock();
            throw throwable;
        }
        if (mapleCharacter.kC != 0) {
            a2.cancelFishingTask();
            a2.kC = 0;
        }
        if (a2.getTrade() != null) {
            MapleTrade.cancelTrade(a2.getTrade(), a2.Cb);
        }
        if (a2.isOperateStorage()) {
            a2.setOperateStorage(false);
        }
        if (!a2.getMechDoors().isEmpty()) {
            a2.removeMechDoor();
        }
        MapleCharacter mapleCharacter3 = a2;
        mapleCharacter3.cancelMapTimeLimitTask();
        mapleCharacter3.resetMobDirection();
    }

    public /* synthetic */ void clearDoors() {
        MapleCharacter a2;
        a2.Sb.clear();
    }

    public /* synthetic */ void updateInfinityTime(long a2) {
        a.t = a2;
    }

    public /* synthetic */ int[] getRemainingSps() {
        MapleCharacter a2;
        return a2.nc;
    }

    public /* synthetic */ void addNiuNiuOwe(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        long l2 = mapleCharacter.getNiuNiuOwe() + a2;
        mapleCharacter.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u5990\u59b2\u6b2e\u5099"), l2, true);
    }

    public /* synthetic */ long getEarnGash() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u4efc\u65a3\u7344\u5fd1q'E."), false);
    }

    public /* synthetic */ void resetEquipDurabilitysTime() {
        a.w = System.currentTimeMillis() + 60000L;
    }

    public /* synthetic */ byte getAllianceRank() {
        MapleCharacter a2;
        return a2.jB;
    }

    public /* synthetic */ long handleSkillDamage(MapleMonster a2, AttackInfo a3, long a4) {
        int n2;
        MapleCharacter a5;
        ISkill iSkill = SkillFactory.getSkill(a3.skill);
        MapleStatEffect mapleStatEffect = null;
        if (iSkill != null) {
            mapleStatEffect = iSkill.getEffect(a5.getTotalSkillLevel(a3.skill));
        }
        if (a2.getStats().getFixedDamage() > 0) {
            return a4;
        }
        if (GameSetConstants.MAPLE_VERSION <= 143 && JobConstants.is\u8056\u9a0e\u58eb(a5.getJob()) && a3.skill == 1221011 && a2.getStats().isBoss()) {
            if (GameSetConstants.MAPLE_VERSION >= 134) {
                return 999999L;
            }
            return 199999L;
        }
        if (a2.getStats().isBoss()) {
            return a4;
        }
        if (mapleStatEffect != null && mapleStatEffect.getFixDamage() > 0) {
            return a4;
        }
        if (JobConstants.is\u8056\u9a0e\u58eb(a5.getJob())) {
            if (a3.skill == 1221011) {
                a4 = a2.getHp() - 1L;
                return a4;
            }
            if (a3.skill == 1221009 && GameSetConstants.MAPLE_VERSION >= 134 && (iSkill = SkillFactory.getSkill(1221009)) != null) {
                ISkill iSkill2 = iSkill;
                mapleStatEffect = iSkill2.getEffect(a5.getSkillLevel(iSkill2));
                if (mapleStatEffect != null && a5.getSkillLevel(iSkill) > 0 && mapleStatEffect.makeChanceResult(a5)) {
                    a4 = a2.getHp();
                }
            }
        } else if (JobConstants.is\u9ed1\u9a0e\u58eb(a5.getJob())) {
            iSkill = SkillFactory.getSkill(1321012);
            if (GameSetConstants.MAPLE_VERSION >= 139 && iSkill != null) {
                ISkill iSkill3 = iSkill;
                mapleStatEffect = iSkill3.getEffect(a5.getSkillLevel(iSkill3));
                if (mapleStatEffect != null && a5.getSkillLevel(iSkill) > 0 && mapleStatEffect.makeChanceResult_z(a5)) {
                    a4 = a2.getHp();
                }
            }
        } else if (JobConstants.is\u5f13\u7bad\u624b(a5.getJob())) {
            iSkill = SkillFactory.getSkill(3110001);
            if (a5.getJob() == 322) {
                iSkill = SkillFactory.getSkill(3210001);
            }
            if (iSkill != null) {
                int n3;
                ISkill iSkill4 = iSkill;
                mapleStatEffect = iSkill4.getEffect(a5.getSkillLevel(iSkill4));
                if (mapleStatEffect != null && a5.getSkillLevel(iSkill) > 0 && (n3 = Math.round((float)a2.getHp() / (float)a2.getMobMaxHp() * 100.0f)) < mapleStatEffect.getX() && mapleStatEffect.makeChanceResult_y(a5)) {
                    MapleCharacter mapleCharacter = a5;
                    int n4 = mapleCharacter.getStat().getCurrentMaxHp() / 100;
                    int n5 = mapleCharacter.getStat().getCurrentMaxMp() / 100;
                    mapleCharacter.addHPMP(n4 * mapleStatEffect.getZ(), n5 * mapleStatEffect.getZ());
                    a4 = a2.getHp();
                }
            }
        } else if (JobConstants.is\u5f71\u6b66\u8005(a5.getJob())) {
            if (a3.skill == 4341002 && GameSetConstants.MAPLE_VERSION >= 134 && (iSkill = SkillFactory.getSkill(4341002)) != null) {
                ISkill iSkill5 = iSkill;
                mapleStatEffect = iSkill5.getEffect(a5.getSkillLevel(iSkill5));
                if (mapleStatEffect != null && a5.getSkillLevel(iSkill) > 0 && mapleStatEffect.makeChanceResult_z(a5)) {
                    a4 = a2.getHp();
                }
            }
        } else if (JobConstants.is\u7834\u98a8\u4f7f\u8005(a5.getJob())) {
            iSkill = SkillFactory.getSkill(13110009);
            if (iSkill != null) {
                int n6;
                ISkill iSkill6 = iSkill;
                mapleStatEffect = iSkill6.getEffect(a5.getSkillLevel(iSkill6));
                if (mapleStatEffect != null && a5.getSkillLevel(iSkill) > 0 && (n6 = Math.round((float)a2.getHp() / (float)a2.getMobMaxHp() * 100.0f)) < mapleStatEffect.getX() && mapleStatEffect.makeChanceResult_y(a5)) {
                    MapleCharacter mapleCharacter = a5;
                    int n7 = mapleCharacter.getStat().getCurrentMaxHp() / 100;
                    int n8 = mapleCharacter.getStat().getCurrentMaxMp() / 100;
                    mapleCharacter.addHPMP(n7 * mapleStatEffect.getZ(), n8 * mapleStatEffect.getZ());
                    a4 = a2.getHp();
                }
            }
        } else if (JobConstants.is\u7cbe\u9748\u904a\u4fe0(a5.getJob())) {
            if (a3.skill == 23110006 && (iSkill = SkillFactory.getSkill(23110006)) != null) {
                ISkill iSkill7 = iSkill;
                mapleStatEffect = iSkill7.getEffect(a5.getSkillLevel(iSkill7));
                if (mapleStatEffect != null && a5.getSkillLevel(iSkill) > 0 && mapleStatEffect.makeChanceResult(a5)) {
                    a4 = a2.getHp();
                }
            }
        } else if (JobConstants.is\u60e1\u9b54\u6bba\u624b(a5.getJob())) {
            iSkill = SkillFactory.getSkill(30010111);
            if (iSkill != null) {
                ISkill iSkill8 = iSkill;
                mapleStatEffect = iSkill8.getEffect(a5.getSkillLevel(iSkill8));
                if (mapleStatEffect != null && a5.getSkillLevel(iSkill) > 0 && mapleStatEffect.makeChanceResult(a5)) {
                    a4 = a2.getHp();
                    a5.addHP((int)((double)a5.getStat().getCurrentMaxHp() * ((double)mapleStatEffect.getX() / 100.0)));
                }
            }
        } else if (JobConstants.is\u591c\u5149(a5.getJob()) && a3.skill == 27121303) {
            iSkill = SkillFactory.getSkill(27121303);
            if (iSkill != null) {
                ISkill iSkill9 = iSkill;
                mapleStatEffect = iSkill9.getEffect(a5.getSkillLevel(iSkill9));
                if (mapleStatEffect != null && a5.getSkillLevel(iSkill) > 0 && mapleStatEffect.makeChanceResult(a5)) {
                    a4 = a2.getHp();
                }
            }
        } else if (JobConstants.is\u6cd5\u5e2b(a5.getJob()) && (iSkill = SkillFactory.getSkill(2210000)) != null && (n2 = a5.getTotalSkillLevel(iSkill)) > 0) {
            MapleStatEffect mapleStatEffect2 = iSkill.getEffect(n2);
            if (!a2.getStats().isBoss() && a2.getHPPercent() < mapleStatEffect2.getX() && mapleStatEffect2.makeChanceResult_y()) {
                a4 = (int)a2.getHp();
            }
        }
        return a4;
    }

    public /* synthetic */ void loadMapleTrait() {
        MapleCharacter a2;
        for (MapleTrait mapleTrait : a2.Ta.values()) {
            if (a2.ga.containsKey(mapleTrait.getType().name())) {
                MapleTrait mapleTrait2 = mapleTrait;
                mapleTrait2.setExp((int)a2.getCharacterSet(mapleTrait2.getType().name(), false));
                continue;
            }
            mapleTrait.setExp(0);
        }
    }

    public /* synthetic */ long getExtraExp() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u7da5\u9a11\u987b\u5950\u5296\u6256"), false);
    }

    /*
     * WARNING - Removed back jump from a try to a catch block - possible behaviour change.
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ void loadCharacterString() {
        block23: {
            block22: {
                block21: {
                    if (a.ga.isEmpty() == false) return;
                    if (a.Ca.isEmpty() == false) return;
                    try {
                        var1_1 = DBConPool.getInstance().getDataSource().getConnection();
                        var2_3 = null;
                        var3_5 = FixDropNullItem.ALLATORIxDEMO("E#Z#U2\u001c D)[fU.W4W%B#D5i,E)XfA.S4Sf\u001e%^'D'U2S4_\"\u0016{\u0016y\u0016\u0007x\u0002\u0016 C(U2_)Xf\u000bf\u0011\u0005^'D'U2S4e#Ba\u001ffy\u0014\u0016nU.W4W%B#D/Rf\u000bf\tfw\brfP3X%B/Y(\u0016{\u0016au.W4W%B#D\u0015S2i\u0007U%\u0011o");
                        v0 = var2_3 = var1_1.prepareStatement(var3_5);
                        v0.setInt(1, a.XC);
                        v0.setInt(2, a.nC);
                        var4_7 = v0.executeQuery();
lbl12:
                        // 3 sources

                        while (true) {
                            try {
                                while (var4_7.next()) {
                                    var5_8 = var4_7.getString(MapleNodes.ALLATORIxDEMO("hY`OzEaB"));
                                    if (var5_8.equals(FixDropNullItem.ALLATORIxDEMO("u.W4W%B#D\u0015S2"))) {
                                        var6_10 = JsonMapConverter.JsonToMapLong(var4_7.getString(MapleNodes.ALLATORIxDEMO("d_aB")));
                                        for (Map.Entry<String, Long> var8_13 : var6_10.entrySet()) {
                                            if (var8_13.getKey().contains(FixDropNullItem.ALLATORIxDEMO("\u65d3\u8a4e")) && !var8_13.getKey().contains(FileoutputUtil.NowDay())) continue;
                                            a.ga.put(var8_13.getKey(), var8_13.getValue());
                                        }
                                        continue;
                                    }
                                    break block21;
                                }
                                ** GOTO lbl-1000
                            }
                            catch (Throwable var5_9) {
                                if (var4_7 != null) {
                                    try {
                                        var4_7.close();
                                        v1 = var5_9;
                                        throw v1;
                                    }
                                    catch (Throwable var6_11) {
                                        var5_9.addSuppressed(var6_11);
                                    }
                                }
                                v1 = var5_9;
                                throw v1;
                            }
                            break;
                        }
                    }
                    catch (SQLException var1_2) {
                        System.out.println(var1_2);
                        FilePrinter.printError(FixDropNullItem.ALLATORIxDEMO("!S2P3X%B/Y(\u00182N2"), var1_2);
                        return;
                    }
                    catch (Throwable var2_4) {
                        if (var1_1 != null) {
                            try {
                                var1_1.close();
                                v2 = var2_4;
                                throw v2;
                            }
                            catch (Throwable var3_6) {
                                var2_4.addSuppressed(var3_6);
                            }
                        }
                        v2 = var2_4;
                        throw v2;
                    }
                }
                if (!var5_8.equals(MapleNodes.ALLATORIxDEMO("MDo^oOzI|\u007fkXQmmO"))) ** GOTO lbl12
                var6_10 = JsonMapConverter.JsonToMapLong(var4_7.getString(FixDropNullItem.ALLATORIxDEMO("\\5Y(")));
                var7_12 = var6_10.entrySet().iterator();
                while (true) {
                    if (!var7_12.hasNext()) ** continue;
                    var8_13 = var7_12.next();
                    if (var8_13.getKey().contains(MapleNodes.ALLATORIxDEMO("\u65eb\u8a24")) && !var8_13.getKey().contains(FileoutputUtil.NowDay())) ** continue;
                    a.Ca.put(var8_13.getKey(), var8_13.getValue());
                }
lbl-1000:
                // 1 sources

                {
                    var4_7.close();
                    if (var4_7 == null) break block22;
                    v3 = var2_3;
                }
                var4_7.close();
                break block23;
            }
            v3 = var2_3;
        }
        v3.close();
        if (var1_1 == null) return;
        var1_1.close();
    }

    public /* synthetic */ int getDex() {
        MapleCharacter a2;
        return a2.getStat().getDex();
    }

    public /* synthetic */ void changeTeam(int a2) {
        MapleCharacter a3;
        a3.dB = a2;
        if (a3.inPVP()) {
            MapleCharacter mapleCharacter = a3;
            mapleCharacter.Cb.sendPacket(MaplePacketCreator.getPVPTransform(a2 + 1));
            mapleCharacter.rC.broadcastMessage(MaplePacketCreator.changeTeam(a3.XC, a2 + 1));
            return;
        }
        a3.Cb.sendPacket(MaplePacketCreator.showEquipEffect(a2));
    }

    public /* synthetic */ int getTouzhuNum() {
        MapleCharacter a2;
        return a2.ad;
    }

    public final /* synthetic */ int getCloneSize() {
        int n2;
        MapleCharacter a2;
        int n3 = 0;
        WeakReference<MapleCharacter>[] arrweakReference = a2.qb;
        int n4 = a2.qb.length;
        int n5 = n2 = 0;
        while (n5 < n4) {
            if (arrweakReference[n2].get() != null) {
                ++n3;
            }
            n5 = ++n2;
        }
        return n3;
    }

    public /* synthetic */ void handleLuminous(int a2) {
        int n2;
        int n3;
        MapleCharacter a3;
        if (a3.D == 20040219 || a3.D == 20040220) {
            return;
        }
        boolean bl = false;
        int n4 = 0;
        int n5 = 1;
        if (a3.A == 0 && a3.h == 0) {
            MapleCharacter mapleCharacter = a3;
            mapleCharacter.A = 9999;
            mapleCharacter.h = 1;
        }
        int[] arrn = SkillConstants.luminous_lightSkills;
        int n6 = SkillConstants.luminous_lightSkills.length;
        int n7 = n3 = 0;
        while (n7 < n6) {
            n2 = arrn[n3];
            if (a2 == n2 && a3.f == 0) {
                a3.m = 1;
            }
            n7 = ++n3;
        }
        arrn = SkillConstants.luminous_darkSkills;
        n6 = SkillConstants.luminous_darkSkills.length;
        int n8 = n3 = 0;
        while (n8 < n6) {
            n2 = arrn[n3];
            if (a2 == n2 && a3.m == 0) {
                a3.f = 1;
            }
            n8 = ++n3;
        }
        if (a3.m == 1) {
            arrn = SkillConstants.luminous_lightSkills;
            n6 = SkillConstants.luminous_lightSkills.length;
            int n9 = n3 = 0;
            while (n9 < n6) {
                n2 = arrn[n3];
                if (a2 == n2) {
                    MapleCharacter mapleCharacter = a3;
                    mapleCharacter.A -= 277;
                    if (mapleCharacter.A <= 0) {
                        MapleCharacter mapleCharacter2 = a3;
                        MapleCharacter mapleCharacter3 = a3;
                        a3.setLuminousMode(a2);
                        mapleCharacter3.A = 9999;
                        mapleCharacter3.m = 0;
                        mapleCharacter2.f = 1;
                        n4 = 1;
                        ++mapleCharacter2.j;
                        if (mapleCharacter2.j > 5) {
                            a3.j = 5;
                        }
                    } else {
                        MapleCharacter mapleCharacter4 = a3;
                        n4 = mapleCharacter4.A;
                        mapleCharacter4.setLuminousMode(a2);
                    }
                    n5 = 1;
                    bl = true;
                }
                n9 = ++n3;
            }
        }
        if (a3.f == 1) {
            arrn = SkillConstants.luminous_darkSkills;
            n6 = SkillConstants.luminous_darkSkills.length;
            int n10 = n3 = 0;
            while (n10 < n6) {
                n2 = arrn[n3];
                if (a2 == n2) {
                    MapleCharacter mapleCharacter;
                    if (a3.h >= 1000) {
                        MapleCharacter mapleCharacter5 = a3;
                        mapleCharacter = mapleCharacter5;
                        mapleCharacter5.h += 416;
                    } else {
                        MapleCharacter mapleCharacter6 = a3;
                        mapleCharacter = mapleCharacter6;
                        mapleCharacter6.h += 76;
                    }
                    if (mapleCharacter.h > 10000) {
                        MapleCharacter mapleCharacter7 = a3;
                        MapleCharacter mapleCharacter8 = a3;
                        a3.setLuminousMode(a2);
                        mapleCharacter8.h = 1;
                        mapleCharacter8.m = 1;
                        mapleCharacter7.f = 0;
                        n4 = 9999;
                        ++mapleCharacter7.L;
                        if (mapleCharacter7.L > 5) {
                            a3.L = 5;
                        }
                    } else {
                        MapleCharacter mapleCharacter9 = a3;
                        n4 = mapleCharacter9.h;
                        mapleCharacter9.setLuminousMode(a2);
                    }
                    n5 = 2;
                    bl = true;
                }
                n10 = ++n3;
            }
        }
        if (!bl) {
            return;
        }
        a3.Cb.sendPacket(JobPacket.LuminousPacket.updateLuminousGauge(n4, n5));
    }

    public /* synthetic */ boolean canSummon() {
        MapleCharacter a2;
        return a2.canSummon(5000);
    }

    public /* synthetic */ List<PlayerBuffValueHolder> getAllBuffs() {
        Serializable serializable;
        Pair<Integer, Byte> pair;
        MapleCharacter a2;
        ArrayList<PlayerBuffValueHolder> arrayList = new ArrayList<PlayerBuffValueHolder>();
        HashMap<Object, Integer> hashMap = new HashMap<Object, Integer>();
        for (Map.Entry object : new LinkedList<Map.Entry<MapleBuffStat, MapleBuffStatValueHolder>>(a2.kb.entrySet())) {
            pair = new Pair<Integer, Byte>(((MapleBuffStatValueHolder)object.getValue()).effect.getSourceId(), ((MapleBuffStatValueHolder)object.getValue()).effect.getLevel());
            if (hashMap.containsKey(pair)) {
                ((PlayerBuffValueHolder)arrayList.get((int)((Integer)hashMap.get((Object)pair)).intValue())).statup.add(new Pair<MapleBuffStat, Integer>((MapleBuffStat)object.getKey(), ((MapleBuffStatValueHolder)object.getValue()).value));
                continue;
            }
            hashMap.put(pair, arrayList.size());
            serializable = new ArrayList();
            ((ArrayList)serializable).add(new Pair<MapleBuffStat, Integer>((MapleBuffStat)object.getKey(), ((MapleBuffStatValueHolder)object.getValue()).value));
            arrayList.add(new PlayerBuffValueHolder(((MapleBuffStatValueHolder)object.getValue()).startTime, ((MapleBuffStatValueHolder)object.getValue()).effect, (List<Pair<MapleBuffStat, Integer>>)((Object)serializable), ((MapleBuffStatValueHolder)object.getValue()).localDuration, ((MapleBuffStatValueHolder)object.getValue()).cid));
        }
        for (SpecialBuffInfo specialBuffInfo : a2.p) {
            pair = specialBuffInfo.getBuffStatValueHolder();
            serializable = new Pair<Integer, Byte>(((MapleBuffStatValueHolder)pair).effect.getSourceId(), ((MapleBuffStatValueHolder)pair).effect.getLevel());
            if (hashMap.containsKey(serializable)) {
                ((PlayerBuffValueHolder)arrayList.get((int)((Integer)hashMap.get(serializable)).intValue())).statup.add(new Pair<MapleBuffStat, Integer>(specialBuffInfo.getBuffStat(), ((MapleBuffStatValueHolder)pair).value));
                continue;
            }
            hashMap.put(serializable, arrayList.size());
            ArrayList<Pair<MapleBuffStat, Integer>> arrayList2 = new ArrayList<Pair<MapleBuffStat, Integer>>();
            arrayList2.add(new Pair<MapleBuffStat, Integer>(specialBuffInfo.getBuffStat(), ((MapleBuffStatValueHolder)pair).value));
            Pair<Integer, Byte> pair2 = pair;
            arrayList.add(new PlayerBuffValueHolder(((MapleBuffStatValueHolder)pair).startTime, ((MapleBuffStatValueHolder)pair).effect, arrayList2, ((MapleBuffStatValueHolder)pair2).localDuration, ((MapleBuffStatValueHolder)pair2).cid));
        }
        return arrayList;
    }

    public /* synthetic */ void cancelFairySchedule(boolean a2) {
        MapleCharacter a3;
        if (a3.Ed != null) {
            a3.Ed.cancel(false);
            a3.Ed = null;
        }
        if (a2) {
            MapleCharacter mapleCharacter = a3;
            mapleCharacter.yc = (byte)10;
            mapleCharacter.iC = 1;
        }
    }

    public /* synthetic */ void addMechDoor(MechDoor a2) {
        MapleCharacter a3;
        a3.Dd.add(a2);
    }

    public /* synthetic */ void deleteFromHyperRocks(int a2) {
        int n2;
        int n3 = n2 = 0;
        while (n3 < 13) {
            MapleCharacter a3;
            if (a3.RB[n2] == a2) {
                a3.RB[n2] = 999999999;
                a3.KB = true;
                return;
            }
            n3 = ++n2;
        }
    }

    public /* synthetic */ void setAutoMP(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u81e4\u52f9\u88d2\u9b78"), a2, false);
    }

    public /* synthetic */ boolean SaveKeyB() {
        MapleCharacter a2;
        CharSequence charSequence = new StringBuilder();
        charSequence.append(a2.Ab);
        charSequence.append(a2.sA);
        charSequence.append(a2.jc);
        charSequence.append(a2.Cb.isMonitored());
        charSequence.append(a2.Cb.getAccID());
        charSequence.append(a2.Cb.getVipAll());
        charSequence = charSequence.toString();
        if (a2.T.equals(charSequence)) {
            boolean bl = true;
            return true;
        }
        a2.T = charSequence;
        boolean bl = false;
        return false;
    }

    public /* synthetic */ boolean sendSMS(String a2) {
        try {
            String string;
            String string2 = string = String.valueOf(Randomizer.rand(1000000, 9999999));
            Nexmo.sendSMS(a2, string2);
            a.ma = string2;
            return true;
        }
        catch (Exception exception) {
            return false;
        }
    }

    public /* synthetic */ int getPVPDirection() {
        MapleCharacter a2;
        return a2.Ob;
    }

    public /* synthetic */ int getBuffSource(MapleBuffStat a2) {
        MapleCharacter a3;
        if ((a2 = a3.kb.get(a2)) == null) {
            return -1;
        }
        return ((MapleBuffStatValueHolder)a2).effect.getSourceId();
    }

    public /* synthetic */ int getCSPoints(int a2) {
        switch (a2) {
            case 1: {
                MapleCharacter a3;
                while (false) {
                }
                return a3.getAcash();
            }
            case 2: {
                MapleCharacter a3;
                return a3.Ab;
            }
            case 4: {
                MapleCharacter a3;
                return a3.hd;
            }
        }
        return 0;
    }

    public /* synthetic */ void setPQrewardUI(boolean a2) {
        a.za = a2;
    }

    public /* synthetic */ void startItemVac() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        a2.dc = new ItemVac(a2);
        a2.dc.start();
        a2.EB = true;
    }

    public /* synthetic */ boolean getTotemHide() {
        MapleCharacter a2;
        return a2.fa;
    }

    public /* synthetic */ void setVipMedal(boolean a2) {
        MapleCharacter a3;
        a3.Hd = a2;
        a3.renewGuildMsg();
    }

    public /* synthetic */ void writeStatus(String a2, String a3) {
        MapleCharacter a4;
        a4.Cb.sendPacket(MaplePacketCreator.sendGhostStatus(a2, a3));
    }

    public /* synthetic */ void addMobVac_Count() {
        MapleCharacter a2;
        ++a2.Sa;
    }

    public /* synthetic */ MapleFriendship getFriendship(MapleFriendship.MapleFriendshipType a2) {
        MapleCharacter a3;
        return a3.na.get((Object)a2);
    }

    public /* synthetic */ void settrading(boolean a2) {
        a.bA = a2;
    }

    public /* synthetic */ void cancelHiredFishingTask() {
        a.ua = 0L;
    }

    public /* synthetic */ void setItemQuestId(int a2) {
        a.Yc = a2;
    }

    public /* synthetic */ Map<String, Long> getCharacterSet() {
        MapleCharacter a2;
        return new HashMap<String, Long>(a2.ga);
    }

    public /* synthetic */ Map<Integer, Integer> getAllLinkMid() {
        MapleCharacter a2;
        return a2.Ka;
    }

    public /* synthetic */ String getOneInfo(int a2, String a3) {
        MapleCharacter a4;
        if (!a4.CA.containsKey(a2) || MapleQuest.getInstance(a2) == null) {
            return null;
        }
        return StringTool.getOneValue(a4.CA.get(a2), a3);
    }

    public /* synthetic */ byte getZeroLook() {
        MapleCharacter a2;
        if (!JobConstants.is\u795e\u4e4b\u5b50(a2.ob)) {
            return -1;
        }
        if (a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u001cS4Y\u0019z)Y-")) == 0L) {
            a2.setCharacterSet(MapleNodes.ALLATORIxDEMO("vk^asBCaG"), 0L);
        }
        return (byte)a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u001cS4Y\u0019z)Y-"));
    }

    public /* synthetic */ boolean isShowErr() {
        MapleCharacter a2;
        return a2.isShowInfo();
    }

    public /* synthetic */ int getEquippedWeapon() {
        MapleCharacter a2;
        IItem iItem = a2.getInventory(MapleInventoryType.EQUIPPED).getItem((short)-11);
        if (iItem == null) {
            return 0;
        }
        return iItem.getItemId();
    }

    public /* synthetic */ void sendMacros() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.getMacros(mapleCharacter.rA));
    }

    public final /* synthetic */ boolean haveItem(int a2, int a3, boolean a4, boolean a5) {
        MapleCharacter a6;
        if (a3 < 0) {
            return false;
        }
        MapleInventoryType mapleInventoryType = GameConstants.getInventoryType(a2);
        int n2 = a6.LA[mapleInventoryType.ordinal()].countById(a2);
        if (a4 && mapleInventoryType == MapleInventoryType.EQUIP) {
            n2 += a6.LA[MapleInventoryType.EQUIPPED.ordinal()].countById(a2);
        }
        if (a5) {
            return n2 >= a3;
        }
        return n2 == a3;
    }

    public /* synthetic */ int getRunningLight() {
        MapleCharacter a2;
        return a2.m;
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ boolean startPartyQuest(int a2) {
        MapleCharacter a3;
        boolean bl = false;
        if (!a3.XB.containsKey(MapleQuest.getInstance(a2)) || !a3.CA.containsKey(a2)) {
            MapleCharacter mapleCharacter = a3;
            MapleQuestStatus mapleQuestStatus = mapleCharacter.getQuestNAdd(MapleQuest.getInstance(a2));
            mapleQuestStatus.setStatus((byte)1);
            mapleCharacter.updateQuest(mapleQuestStatus);
            switch (a2) {
                case 1300: 
                case 1301: 
                case 1302: {
                    a3.updateInfoQuest(a2, FixDropNullItem.ALLATORIxDEMO("[/X{\u0006}E#U{\u0006}R'B#\u000bv\u0006v\u0006k\u0006v\u001bv\u0006}^'@#\u000bv\r4W(]{p}B4O{\u0006}U+F{\u0006}u\u0014\u000bv\r\u0010d{\u0006}Q0C6\u000bv\r0_%\u000bv\r*Y5S{\u0006}R4W1\u000bv"));
                    break;
                }
                case 1204: {
                    a3.updateInfoQuest(a2, MapleNodes.ALLATORIxDEMO("cE`\u0011>\u0017}Im\u0011>\u0017jMzI3\u001c>\u001c>\u0001>\u001c#\u001c>\u0017fMxI>\u0011>\u0017fMxI?\u0011>\u0017fMxI<\u0011>\u0017fMxI=\u0011>\u0017|M`G3j5X|U3\u001c5Oc\\3\u001c5o\\\u0011>\u0017X~3\u001c"));
                    break;
                }
                case 1206: {
                    a3.updateInfoQuest(a2, FixDropNullItem.ALLATORIxDEMO("[/X{\u0006}E#U{\u0006}R'B#\u000bv\u0006v\u0006k\u0006v\u001bv\u0006}^'@#\u0006{\u0006}^'@#\u0007{\u0006}D'X-\u000b\u0000\r2D?\u000bv\r%[6\u000bv\r\u0005d{\u0006}`\u0014\u000bv"));
                    break;
                }
                default: {
                    a3.updateInfoQuest(a2, MapleNodes.ALLATORIxDEMO("AgB3\u001c5_kO3\u001c5HoXk\u0011>\u001c>\u001c#\u001c>\u0001>\u001c5DoZk\u0011>\u0017|M`G3j5X|U3\u001c5Oc\\3\u001c5o\\\u0011>\u0017X~3\u001c"));
                }
            }
            bl = true;
            a3.zb = true;
        }
        return bl;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ void setDayLog(String a) {
        var2_3 = DBConPool.getInstance().getDataSource().getConnection();
        try {
            v0 = var3_5 = var2_3.prepareStatement(FixDropNullItem.ALLATORIxDEMO("_(E#D2\u0016/X2YfR'O*Y!\u0016nW%U)C(B/Rj\u0016\"W?_\"\u001ff@'Z3S5\u0016n\tj\to"));
            v0.setInt(1, a.getClient().getAccID());
            var3_5.setString(2, a);
            v0.executeUpdate();
            var3_5.close();
            ** if (var2_3 == null) goto lbl-1000
        }
        catch (Throwable var3_6) {
            if (var2_3 == null) ** GOTO lbl24
            try {
                var2_3.close();
                v1 = var3_6;
                ** GOTO lbl25
            }
            catch (Throwable a) {
                try {
                    var3_6.addSuppressed(a);
lbl24:
                    // 2 sources

                    v1 = var3_6;
lbl25:
                    // 2 sources

                    throw v1;
                }
                catch (Exception var2_4) {
                    // empty catch block
                }
            }
        }
lbl-1000:
        // 1 sources

        {
            var2_3.close();
            return;
        }
lbl-1000:
        // 1 sources

        {
        }
    }

    public /* synthetic */ void setCheckSelectionMin(int a2) {
        a.c = a2;
    }

    public final /* synthetic */ PlayerStats getStat() {
        MapleCharacter a2;
        return a2.GB;
    }

    public final /* synthetic */ SkillMacro[] getMacros() {
        MapleCharacter a2;
        return a2.rA;
    }

    public /* synthetic */ boolean isAran() {
        MapleCharacter a2;
        return a2.ob >= 2000 && a2.ob <= 2112 && a2.ob != 2001;
    }

    public /* synthetic */ void setAutoHP(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u81e4\u52f9\u88d2\u886c"), a2, false);
    }

    public /* synthetic */ void setSecondFace(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u007fkOaBjsHMmI"), a2);
    }

    public /* synthetic */ void addJobSkills() {
        ISkill iSkill;
        int n2;
        int n3;
        int n4;
        int[] arrn;
        MapleCharacter a2;
        int[] arrn2 = null;
        int[] arrn3 = null;
        HashMap<ISkill, SkillEntry> hashMap = new HashMap<ISkill, SkillEntry>();
        if (MapleJob.isBeginner(a2.ob)) {
            arrn = arrn2;
        } else if (MapleJob.is\u91cd\u7832\u6307\u63ee\u5b98(a2.ob)) {
            int[] arrn4 = new int[1];
            arrn4[0] = 109;
            arrn = arrn2 = arrn4;
        } else if (MapleJob.is\u84bc\u9f8d\u4fe0\u5ba2(a2.ob)) {
            int[] arrn5 = new int[1];
            arrn5[0] = 228;
            arrn = arrn2 = arrn5;
        } else if (MapleJob.is\u7687\u5bb6\u9a0e\u58eb\u5718(a2.ob)) {
            int[] arrn6 = new int[3];
            arrn6[0] = 10000252;
            arrn6[1] = 10001244;
            arrn6[2] = 10001254;
            arrn = arrn2 = arrn6;
        } else if (MapleJob.is\u72c2\u72fc\u52c7\u58eb(a2.ob)) {
            int[] arrn7 = new int[3];
            arrn7[0] = 20000014;
            arrn7[1] = 20000015;
            arrn7[2] = 20000016;
            arrn3 = arrn7;
            arrn = arrn2;
        } else if (MapleJob.is\u7cbe\u9748\u904a\u4fe0(a2.ob)) {
            int[] arrn8 = new int[3];
            arrn8[0] = 20020109;
            arrn8[1] = 20020111;
            arrn8[2] = 20020112;
            arrn2 = arrn8;
            int[] arrn9 = new int[2];
            arrn9[0] = 20021181;
            arrn9[1] = 20021166;
            arrn3 = arrn9;
            arrn = arrn2;
        } else if (MapleJob.is\u5e7b\u5f71\u4fe0\u76dc(a2.ob)) {
            int[] arrn10 = new int[7];
            arrn10[0] = 20031203;
            arrn10[1] = 20031205;
            arrn10[2] = 20030206;
            arrn10[3] = 20031207;
            arrn10[4] = 20031208;
            arrn10[5] = 20031260;
            arrn10[6] = a2.ob == 2412 ? 20031210 : 20031209;
            arrn2 = arrn10;
            int[] arrn11 = new int[3];
            arrn11[0] = 20031211;
            arrn11[1] = 20031212;
            arrn11[2] = a2.ob == 2412 ? 20031209 : 20031210;
            arrn3 = arrn11;
            arrn = arrn2;
        } else if (MapleJob.is\u591c\u5149(a2.ob)) {
            int[] arrn12 = new int[5];
            arrn12[0] = 20040216;
            arrn12[1] = 20040217;
            arrn12[2] = 20040221;
            arrn12[3] = 20041222;
            arrn12[4] = 20040219;
            arrn2 = arrn12;
            int[] arrn13 = new int[2];
            arrn13[0] = 20041226;
            arrn13[1] = 20040220;
            arrn3 = arrn13;
            arrn = arrn2;
        } else if (MapleJob.is\u60e1\u9b54\u6bba\u624b(a2.ob)) {
            int[] arrn14 = new int[1];
            arrn14[0] = 30010111;
            arrn2 = arrn14;
            int[] arrn15 = new int[5];
            arrn15[0] = 30010166;
            arrn15[1] = 30011167;
            arrn15[2] = 30011168;
            arrn15[3] = 30011169;
            arrn15[4] = 30011170;
            arrn3 = arrn15;
            arrn = arrn2;
        } else if (MapleJob.is\u60e1\u9b54\u5fa9\u4ec7\u8005(a2.ob)) {
            int[] arrn16 = new int[3];
            arrn16[0] = 30010242;
            arrn16[1] = 30010230;
            arrn16[2] = 30010231;
            arrn2 = arrn16;
            int[] arrn17 = new int[5];
            arrn17[0] = 30010166;
            arrn17[1] = 30011167;
            arrn17[2] = 30011168;
            arrn17[3] = 30011169;
            arrn17[4] = 30011170;
            arrn3 = arrn17;
            arrn = arrn2;
        } else if (MapleJob.is\u5091\u8afe(a2.ob)) {
            int n5 = MapleJob.getJobGrade(a2.ob);
            int[] arrn18 = new int[7];
            arrn18[0] = 30020232;
            arrn18[1] = 30020240;
            arrn18[2] = 30021237;
            arrn18[3] = 30020234;
            arrn18[4] = 30021235;
            arrn18[5] = a2.ob >= 3610 ? 30021236 : 0;
            arrn18[6] = a2.ob >= 3612 ? 36120010 : 0;
            arrn2 = arrn18;
            int[] arrn19 = new int[1];
            arrn19[0] = 30021238;
            arrn3 = arrn19;
            arrn = arrn2;
        } else if (MapleJob.is\u672b\u65e5\u53cd\u6297\u8ecd(a2.ob)) {
            int[] arrn20 = new int[1];
            arrn20[0] = 30000074;
            arrn = arrn2 = arrn20;
        } else if (MapleJob.is\u528d\u8c6a(a2.ob)) {
            int[] arrn21 = new int[4];
            arrn21[0] = 40010000;
            arrn21[1] = 40010067;
            arrn21[2] = 40011288;
            arrn21[3] = 40011289;
            arrn2 = arrn21;
            int[] arrn22 = new int[5];
            arrn22[0] = 40011023;
            arrn22[1] = 40011183;
            arrn22[2] = 40011184;
            arrn22[3] = 40011185;
            arrn22[4] = 40011186;
            arrn3 = arrn22;
            arrn = arrn2;
        } else if (MapleJob.is\u9670\u967d\u5e2b(a2.ob)) {
            int[] arrn23 = new int[3];
            arrn23[0] = 40020000;
            arrn23[1] = 40020001;
            arrn23[2] = 40020109;
            arrn2 = arrn23;
            int[] arrn24 = new int[4];
            arrn24[0] = 40021183;
            arrn24[1] = 40021184;
            arrn24[2] = 40021185;
            arrn24[3] = 40021186;
            arrn3 = arrn24;
            arrn = arrn2;
        } else if (MapleJob.is\u51f1\u6492(a2.ob)) {
            int[] arrn25 = new int[4];
            arrn25[0] = 60001216;
            arrn25[1] = 60001217;
            arrn25[2] = 60001218;
            arrn25[3] = 60000219;
            arrn2 = arrn25;
            int[] arrn26 = new int[1];
            arrn26[0] = 60001229;
            arrn3 = arrn26;
            arrn = arrn2;
        } else {
            if (MapleJob.is\u5929\u4f7f\u7834\u58de\u8005(a2.ob)) {
                int[] arrn27 = new int[5];
                arrn27[0] = 60011216;
                arrn27[1] = 60011218;
                arrn27[2] = 60011220;
                arrn27[3] = 60011221;
                arrn27[4] = 60011222;
                arrn2 = arrn27;
            }
            arrn = arrn2;
        }
        if (arrn != null) {
            int[] arrn28 = arrn2;
            n4 = arrn2.length;
            int n6 = n3 = 0;
            while (n6 < n4) {
                n2 = arrn28[n3];
                if (n2 > 0) {
                    iSkill = SkillFactory.getSkill(n2);
                    if (a2.getSkillLevel(n2) <= 0 && iSkill != null && iSkill.canBeLearnedBy(a2.ob)) {
                        hashMap.put(iSkill, new SkillEntry(1, 1, -1L));
                    }
                }
                n6 = ++n3;
            }
        }
        if (arrn3 != null) {
            int[] arrn29 = arrn3;
            n4 = arrn3.length;
            int n7 = n3 = 0;
            while (n7 < n4) {
                n2 = arrn29[n3];
                if (n2 > 0 && (iSkill = SkillFactory.getSkill(n2)) != null) {
                    hashMap.put(iSkill, new SkillEntry(0, 0, -1L));
                }
                n7 = ++n3;
            }
        }
        if (!hashMap.isEmpty()) {
            a2.changeSkillLevel(hashMap);
        }
    }

    public /* synthetic */ void resetReChargeFalse_2() {
        a.J = 0;
    }

    public /* synthetic */ Map<Byte, Integer> getEquips(boolean a2) {
        MapleCharacter a3;
        Iterator<IItem> iterator;
        HashMap<Byte, Integer> hashMap = new HashMap<Byte, Integer>();
        Iterator<IItem> iterator2 = iterator = a3.LA[MapleInventoryType.EQUIPPED.ordinal()].newList().iterator();
        while (iterator2.hasNext()) {
            IItem iItem = iterator.next();
            int n2 = iItem.getItemId();
            if (iItem instanceof Equip && a2 && ((Equip)iItem).getFusionAnvil() != 0) {
                n2 = ((Equip)iItem).getFusionAnvil();
            }
            if (a3.getCashEquipHide() && iItem.getPosition() < -100) {
                iterator2 = iterator;
                continue;
            }
            hashMap.put((byte)iItem.getPosition(), n2);
            iterator2 = iterator;
        }
        return hashMap;
    }

    /*
     * Enabled aggressive block sorting
     */
    private /* synthetic */ boolean ALLATORIxDEMO(List<MapleBuffStat> a2, int a3) {
        Object object;
        Object object2;
        MapleCharacter a4;
        if (!a4.isClone() && a4.getDebugMessage()) {
            Iterator iterator;
            Iterator iterator2 = iterator = a2.iterator();
            while (iterator2.hasNext()) {
                object2 = (MapleBuffStat)iterator.next();
                a4.dropMessage(6, "CancelBuff : " + ((Enum)object2).toString());
                iterator2 = iterator;
            }
        }
        boolean bl = false;
        object2 = new ArrayList(a2.size());
        a2 = a2.iterator();
        while (a2.hasNext()) {
            boolean bl2;
            object = (MapleBuffStat)a2.next();
            MapleBuffStatValueHolder mapleBuffStatValueHolder = a4.kb.remove(object);
            if (mapleBuffStatValueHolder == null) continue;
            boolean bl3 = true;
            Iterator iterator = object2.iterator();
            while (iterator.hasNext()) {
                MapleBuffStatValueHolder mapleBuffStatValueHolder2 = (MapleBuffStatValueHolder)iterator.next();
                if (mapleBuffStatValueHolder.startTime != mapleBuffStatValueHolder2.startTime || mapleBuffStatValueHolder2.effect != mapleBuffStatValueHolder.effect) continue;
                bl3 = false;
            }
            if (bl3) {
                object2.add(mapleBuffStatValueHolder);
            }
            if (null == object) continue;
            boolean bl4 = false;
            if (a3 == 5211011 || a3 == 5211015 || a3 == 5211016) {
                bl4 = true;
            }
            switch (9.ALLATORIxDEMO[((Enum)object).ordinal()]) {
                case 1: 
                case 2: 
                case 3: 
                case 4: 
                case 5: 
                case 6: 
                case 7: {
                    bl2 = bl4 = true;
                    break;
                }
                case 8: {
                    a4.Ad = 0L;
                    bl2 = bl4;
                    break;
                }
                case 9: {
                    a4.Jb = 0L;
                    bl2 = bl4;
                    break;
                }
                case 10: {
                    a4.disposeClones();
                    bl = true;
                    bl2 = bl4;
                    break;
                }
                case 11: 
                case 12: {
                    a4.Ka.clear();
                    bl2 = bl4;
                    break;
                }
                default: {
                    bl2 = bl4;
                }
            }
            if (bl2) {
                int n2 = mapleBuffStatValueHolder.effect.getSourceId();
                ArrayList<MapleSummon> arrayList = new ArrayList<MapleSummon>();
                for (MapleSummon mapleSummon : a4.Hb) {
                    if (!(mapleSummon.getSkill() == n2 || object == MapleBuffStat.RAINING_MINES && n2 == 33101008 || n2 == 35121009 && mapleSummon.getSkill() == 35121011 || (n2 == 86 || n2 == 88 || n2 == 91) && mapleSummon.getSkill() == n2 + 999) && (n2 != 1085 && n2 != 1087 && n2 != 1090 && n2 != 1179 || mapleSummon.getSkill() != n2 - 999)) continue;
                    MapleCharacter mapleCharacter = a4;
                    mapleCharacter.rC.broadcastMessage(MaplePacketCreator.removeSummon(mapleSummon, true));
                    mapleCharacter.rC.removeMapObject(mapleSummon);
                    mapleCharacter.MB.remove(mapleSummon);
                    arrayList.add(mapleSummon);
                }
                Iterator<MapleSummon> iterator3 = arrayList.iterator();
                Iterator<Object> iterator4 = iterator3;
                while (iterator4.hasNext()) {
                    MapleSummon mapleSummon;
                    mapleSummon = iterator3.next();
                    iterator4 = iterator3;
                    a4.Hb.remove(mapleSummon);
                }
            }
            if (mapleBuffStatValueHolder.effect.getSourceId() != 35121005) continue;
            a4.Ad = 0L;
        }
        a2 = object2.iterator();
        while (a2.hasNext()) {
            Object object3 = object = (MapleBuffStatValueHolder)a2.next();
            if (!a4.getBuffStatsFromStatEffect(((MapleBuffStatValueHolder)object3).effect, ((MapleBuffStatValueHolder)object3).startTime).isEmpty()) continue;
            ((MapleBuffStatValueHolder)object).localDuration = 0;
        }
        return bl;
    }

    public /* synthetic */ void addArcanceDamage(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.setSkillTemp(2120000, mapleCharacter.getArcanceDamage() + a2);
    }

    public /* synthetic */ MapleExtractor getExtractor() {
        MapleCharacter a2;
        return a2.Mc;
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ void DoLevelMap() {
        MapleMap mapleMap;
        boolean bl;
        MapleCharacter a2;
        boolean bl2 = false;
        int n2 = 0;
        switch (a2.getMapId()) {
            case 910060000: {
                bl2 = true;
                n2 = 100010000;
                bl = bl2;
                break;
            }
            case 910120000: {
                bl2 = true;
                n2 = 100040000;
                bl = bl2;
                break;
            }
            case 910220000: {
                bl2 = true;
                n2 = 101040000;
                bl = bl2;
                break;
            }
            case 910310000: {
                bl2 = true;
                n2 = 103010000;
                bl = bl2;
                break;
            }
            case 912030000: {
                bl2 = true;
                n2 = 120010000;
            }
            default: {
                bl = bl2;
            }
        }
        if (bl && (mapleMap = a2.Cb.getChannelServer().getMapFactory().getMap(n2)) != null) {
            MapleCharacter mapleCharacter = a2;
            MapleMap mapleMap2 = mapleMap;
            mapleCharacter.changeMap(mapleMap2, mapleMap2.getPortal(0));
            mapleCharacter.dropMessage(MapleNodes.ALLATORIxDEMO("\u753f\u6590\u4f6e\u76a8\u7b47\u7d36\u8d8b\u9062<\u001c\uff02\u5dde\u7d9d\u4e21\u7b28\u5424\u65be\u6267\u970e\u6c6e\uff02\u5c2b\u6284\u6084\u50bd\u51d6\u8a1d\u7dd8\u583a\u302e"));
        }
    }

    public /* synthetic */ long getlastmovepackettime() {
        MapleCharacter a2;
        a2.Pa = System.currentTimeMillis();
        return System.currentTimeMillis() - a2.Pa;
    }

    public /* synthetic */ void updateFame() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.updateSingleStat(MapleStat.FAME, mapleCharacter.getFame());
    }

    public /* synthetic */ void setReactorNow(int a2) {
        a.mc = a2;
    }

    public /* synthetic */ void removeStolenSkill(int a2) {
        int n2;
        int n3;
        Pair<Integer, Boolean> pair;
        int n4;
        MapleCharacter a3;
        block6: {
            int n5;
            if (a3.skillisCooling(20031208) || a3.y == null) {
                a3.dropMessage(-6, MapleNodes.ALLATORIxDEMO("\u76c2\u5243\u8679\u65b2\u519b\u5375\u6733\u959d\uff20\u8ac5\u7a21\u5017\u51a1\u8a68\u302e"));
                return;
            }
            n4 = JobConstants.getJobNumber(a2 / 10000);
            pair = new Pair<Integer, Boolean>(a2, false);
            n3 = -1;
            int n6 = 0;
            int n7 = n5 = 0;
            while (n7 < a3.y.size()) {
                if ((Integer)a3.y.get((int)n5).left == a2) {
                    if (((Boolean)a3.y.get((int)n5).right).booleanValue()) {
                        a3.unchooseStolenSkill(a2);
                    }
                    n2 = n3 = n6;
                    break block6;
                }
                if (JobConstants.getJobNumber((Integer)a3.y.get((int)n5).left / 10000) == n4) {
                    ++n6;
                }
                n7 = ++n5;
            }
            n2 = n3;
        }
        if (n2 >= 0) {
            MapleCharacter mapleCharacter = a3;
            mapleCharacter.gC = true;
            mapleCharacter.cancelStolenSkill(a2);
            mapleCharacter.y.remove(pair);
            pair.right = true;
            a3.y.remove(pair);
            MapleCharacter mapleCharacter2 = a3;
            a3.zA = true;
            mapleCharacter2.changeSkillLevel_Skip(a2, (byte)0, (byte)0);
            a3.Cb.sendPacket(JobPacket.PhantomPacket.replaceStolenSkill(SkillConstants.getStealSkill(n4), 0));
            mapleCharacter2.Cb.sendPacket(JobPacket.PhantomPacket.removeStolenSkill(n4, n3));
        }
    }

    public /* synthetic */ int getTrueBuffSource(MapleBuffStat a2) {
        MapleCharacter a3;
        if ((a2 = a3.kb.get(a2)) == null) {
            return -1;
        }
        if (((MapleBuffStatValueHolder)a2).effect.isSkill()) {
            return ((MapleBuffStatValueHolder)a2).effect.getSourceId();
        }
        return -((MapleBuffStatValueHolder)a2).effect.getSourceId();
    }

    public /* synthetic */ void dropNPC(String a2) {
        MapleCharacter a3;
        a3.Cb.sendPacket(MaplePacketCreator.getNPCTalk(9010000, (byte)0, a2, FixDropNullItem.ALLATORIxDEMO("v\u0006f\u0006v"), (byte)0));
    }

    public /* synthetic */ void addEarnMeso(int a2) {
        MapleCharacter a3;
        long l2 = a3.getEarnMeso() + (long)a2;
        if (l2 >= Integer.MAX_VALUE) {
            l2 = Integer.MAX_VALUE;
        }
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u4ec4\u65c9\u737c\u5fbb\u695d\u5e4f"), (int)l2, false);
    }

    public final /* synthetic */ List<MaplePet> getPets() {
        MapleCharacter a2;
        return a2.Md;
    }

    public /* synthetic */ boolean SaveKeyStorage() {
        Object object;
        MapleCharacter a2;
        StringBuilder stringBuilder = new StringBuilder();
        if (a2.gb != null) {
            stringBuilder.append(a2.gb.getKey());
        }
        if (GameSetConstants.STORAGE_EXCEED && a2.mC != null) {
            object = a2.mC.values().iterator();
            while (object.hasNext()) {
                MapleStorage mapleStorage = (MapleStorage)object.next();
                if (mapleStorage == null) continue;
                stringBuilder.append(mapleStorage.getKey());
            }
        }
        if (a2.R.equals(object = stringBuilder.toString())) {
            boolean bl = true;
            return true;
        }
        a2.R = object;
        boolean bl = false;
        return false;
    }

    public /* synthetic */ void unlockWriteVisibleMapObjects() {
        MapleCharacter a2;
        a2.AA.writeLock().unlock();
    }

    public /* synthetic */ int getTotalCP() {
        MapleCharacter a2;
        return a2.qd;
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ void obtainHyperSP() {
        MapleCharacter a2;
        if (GameSetConstants.MAPLE_VERSION < 151) {
            return;
        }
        if (MapleJob.is\u795e\u4e4b\u5b50(a2.ob)) {
            return;
        }
        if (MapleJob.is\u76ae\u5361\u557e(a2.ob)) {
            return;
        }
        switch (a2.IC) {
            case 140: 
            case 160: 
            case 190: {
                a2.gainHSP(0, 1);
                a2.gainHSP(1, 1);
                return;
            }
            case 150: 
            case 170: {
                a2.gainHSP(0, 1);
                a2.gainHSP(2, 1);
                return;
            }
            case 180: {
                a2.gainHSP(1, 1);
                return;
            }
            case 200: {
                MapleCharacter mapleCharacter = a2;
                mapleCharacter.gainHSP(0, 1);
                mapleCharacter.gainHSP(1, 1);
                a2.gainHSP(2, 1);
                return;
            }
        }
    }

    public /* synthetic */ int getAntiMacroFailureTimes() {
        MapleCharacter a2;
        String string = a2.getOneInfo(99999, MapleNodes.ALLATORIxDEMO("OBzECMm^a{a^`E`K"));
        if (string == null) {
            a2.setAntiMacroFailureTimes(0);
            return 0;
        }
        return Integer.parseInt(string);
    }

    public /* synthetic */ void clearCarnivalRequests() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.Kb = new LinkedList<MapleCarnivalChallenge>();
    }

    public final /* synthetic */ String getBlessOfEmpressOrigin() {
        MapleCharacter a2;
        return a2.oB;
    }

    public /* synthetic */ MapleImp[] getImps() {
        MapleCharacter a2;
        return a2.uc;
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ void saveFamilyStatus() {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [3[TRYBLOCK], 1[TRYBLOCK]], but top level block is 5[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ void removeSell(IItem a2) {
        MapleCharacter a3;
        a3.ea.remove(a2);
    }

    public /* synthetic */ boolean isCanSetBeansNum() {
        MapleCharacter a2;
        return a2.vC;
    }

    public /* synthetic */ boolean getWalkDebugMessage() {
        MapleCharacter a2;
        return a2.TB;
    }

    public /* synthetic */ int getPortalNow() {
        MapleCharacter a2;
        return a2.Nc;
    }

    public /* synthetic */ void setDPM(long a2) {
        MapleCharacter a3;
        if (a3.Za >= Integer.MAX_VALUE) {
            a3.Za = 0L;
        }
        a3.Za = a2;
    }

    public /* synthetic */ boolean isSaving() {
        MapleCharacter a2;
        return a2.Ib;
    }

    public /* synthetic */ void setMp_Force(int a2) {
        MapleCharacter a3;
        if (World.Find.findChannel(a3.cB) <= 0) {
            a3.UpdateCharacter(MapleNodes.ALLATORIxDEMO("c\\"), a2);
            return;
        }
        a3.getStat().setMp(a2);
    }

    public /* synthetic */ void setday(int a2) {
        a.QA = a2;
    }

    public final /* synthetic */ void updateQuest(MapleQuestStatus a2, boolean a3) {
        MapleCharacter a4;
        a4.zb = true;
        MapleQuestStatus mapleQuestStatus = a2;
        a4.XB.put(a2.getQuest(), mapleQuestStatus);
        if (!mapleQuestStatus.isCustom()) {
            MapleQuestStatus mapleQuestStatus2 = a2;
            a4.Cb.sendPacket(MaplePacketCreator.updateQuest(mapleQuestStatus2));
            if (mapleQuestStatus2.getStatus() == 1 && !a3) {
                a4.Cb.sendPacket(MaplePacketCreator.updateQuestInfo(a4, a2.getQuest().getId(), a2.getNpc(), (byte)(GameSetConstants.MAPLE_VERSION >= 134 ? 10 : 8)));
            }
        }
    }

    public /* synthetic */ boolean isVip() {
        MapleCharacter a2;
        return a2.getClient().getVip() > 0;
    }

    public /* synthetic */ void resetMobKill() {
        MapleCharacter a2;
        HashMap<String, Long> hashMap = new HashMap<String, Long>();
        for (Map.Entry<String, Long> entry : a2.ga.entrySet()) {
            if (entry.getKey().contains(MapleNodes.ALLATORIxDEMO("\u6bc1\u65c9\u64c4\u6b96\u6024\u7245"))) continue;
            hashMap.put(entry.getKey(), entry.getValue());
        }
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.ga.clear();
        mapleCharacter.ga.putAll(hashMap);
    }

    public final /* synthetic */ byte getPetIndex(MaplePet a2) {
        return (byte)Math.max(-1, a2.getSummonedValue() - 1);
    }

    public /* synthetic */ void setLevel_Force(short a2) {
        MapleCharacter a3;
        if (World.Find.findChannel(a3.cB) <= 0) {
            a3.UpdateCharacter(MapleNodes.ALLATORIxDEMO("@kZk@"), a2);
            return;
        }
        a3.IC = a2;
    }

    public /* synthetic */ void removeExtractor() {
        MapleCharacter a2;
        if (a2.Mc != null) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.rC.broadcastMessage(MaplePacketCreator.removeExtractor(a2.XC));
            mapleCharacter.rC.removeMapObject(a2.Mc);
            mapleCharacter.Mc = null;
        }
    }

    public /* synthetic */ void addDoor(MapleDoor a2) {
        MapleCharacter a3;
        a3.Sb.add(a2);
    }

    public /* synthetic */ void removeAndroid() {
        MapleCharacter a2;
        if (a2.rC != null) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.rC.broadcastMessage(MaplePacketCreator.deactivateAndroid(mapleCharacter.XC));
        }
        a2.Da = null;
    }

    public static /* synthetic */ void deletefunctionAcccountId(Connection a2, String a32, int a4, String a5) {
        try {
            Object object = a32 = a2.prepareStatement((String)a32);
            object.setInt(1, a4);
            a32.setString(2, a5);
            object.executeUpdate();
            a32.close();
            return;
        }
        catch (Exception a32) {
            FilePrinter.printError(FixDropNullItem.ALLATORIxDEMO("R#Z#B#P3X%B/Y(w%U%Y3X2\u007f\"\u00182N2"), a32, MapleNodes.ALLATORIxDEMO("UHk@kXkJ{BmXgC`mmOmC{Bzejq"));
            return;
        }
    }

    public /* synthetic */ boolean getCheckedAmulet() {
        MapleCharacter a2;
        return a2.cc;
    }

    public /* synthetic */ void setAttackCombo(short a2) {
        MapleCharacter a3;
        a3.setSkillTemp(61000000, a2);
    }

    /*
     * Loose catch block
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ Map<String, Integer> getMonitored() {
        LinkedHashMap<String, Integer> linkedHashMap;
        block11: {
            ResultSet resultSet;
            linkedHashMap = new LinkedHashMap<String, Integer>();
            DruidPooledConnection druidPooledConnection = DBConPool.getInstance().getDataSource().getConnection();
            PreparedStatement preparedStatement = druidPooledConnection.prepareStatement(MapleNodes.ALLATORIxDEMO("\u007fK`KoZ\fgH\"\f`McI.J|Cc\foOmC{Bz_.{Fi\\i.aaBgXa^kH.\u0011.\u0013"));
            preparedStatement.setInt(1, 1);
            ResultSet resultSet2 = resultSet = preparedStatement.executeQuery();
            while (resultSet2.next()) {
                ResultSet resultSet3 = resultSet;
                resultSet2 = resultSet3;
                int n2 = resultSet3.getInt(FixDropNullItem.ALLATORIxDEMO("_\""));
                String string = resultSet3.getString(MapleNodes.ALLATORIxDEMO("`McI"));
                linkedHashMap.put(string, n2);
            }
            resultSet.close();
            preparedStatement.close();
            if (druidPooledConnection == null) break block11;
            {
                catch (Throwable throwable) {
                    try {
                        Throwable throwable2;
                        block12: {
                            if (druidPooledConnection != null) {
                                try {
                                    druidPooledConnection.close();
                                    throwable2 = throwable;
                                    break block12;
                                }
                                catch (Throwable throwable3) {
                                    throwable.addSuppressed(throwable3);
                                }
                            }
                            throwable2 = throwable;
                        }
                        throw throwable2;
                    }
                    catch (Exception exception) {
                        return null;
                    }
                }
            }
            druidPooledConnection.close();
        }
        return linkedHashMap;
    }

    public /* synthetic */ int getBattlePoints() {
        MapleCharacter a2;
        return a2.EC;
    }

    public /* synthetic */ long getSpeedStartTime() {
        MapleCharacter a2;
        return a2.sa;
    }

    public /* synthetic */ short getSpace(int a2) {
        MapleCharacter a3;
        return a3.getInventory(MapleInventoryType.getByType((byte)a2)).getNumFreeSlot();
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ void RemoveHired() {
        var1_1 = DBConPool.getInstance().getDataSource().getConnection();
        try {
            var2_3 = var1_1.prepareStatement(FixDropNullItem.ALLATORIxDEMO("r#Z#B#\u0016\u0000D)[f^/D#R+S4U.\u0016\u0011^#D#\u0016%^'D'U2S4_\"\u0016{\u0016y"));
            var2_3.setInt(1, a.XC);
            var2_3.execute();
            var2_3 = var1_1.prepareStatement(MapleNodes.ALLATORIxDEMO("hk@kXk\fH^aA.Dg^kHcI|OfEzIc_.{fI|I.OfM|MmXk^gH.\u0011.\u0013"));
            var2_3.setInt(1, a.XC);
            var2_3.execute();
            var2_3.close();
            ** if (var1_1 == null) goto lbl-1000
        }
        catch (Throwable var2_4) {
            if (var1_1 == null) ** GOTO lbl27
            try {
                var1_1.close();
                v0 = var2_4;
                ** GOTO lbl28
            }
            catch (Throwable var3_5) {
                try {
                    var2_4.addSuppressed(var3_5);
lbl27:
                    // 2 sources

                    v0 = var2_4;
lbl28:
                    // 2 sources

                    throw v0;
                }
                catch (Exception var1_2) {
                    FilePrinter.printError(FixDropNullItem.ALLATORIxDEMO("{'F*S\u0005^'D'U2S4\u00182N2"), var1_2, MapleNodes.ALLATORIxDEMO("~kAaZkdg^kH"));
                }
            }
        }
lbl-1000:
        // 1 sources

        {
            var1_1.close();
            return;
        }
lbl-1000:
        // 1 sources

        {
        }
    }

    public /* synthetic */ int getHonorLevel() {
        MapleCharacter a2;
        int n2 = (int)a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u69a0\u8b51\u7b47\u7d36"), false);
        if (n2 == 0) {
            ++n2;
        }
        return n2;
    }

    public /* synthetic */ void doFish() {
        MapleCharacter a2;
        block10: {
            MapleCharacter mapleCharacter;
            block11: {
                int n2;
                block9: {
                    n2 = 5340001;
                    a2.pa = System.currentTimeMillis();
                    if (a2.Cb == null || a2.Cb.getPlayer() == null || !a2.Cb.isReceiving()) {
                        a2.cancelFishingTask();
                        return;
                    }
                    if (!MapConstants.isFishingMap(a2.getMapId()) || a2.kC <= 0) {
                        MapleCharacter mapleCharacter2 = a2;
                        mapleCharacter2.dropMessage(1, FixDropNullItem.ALLATORIxDEMO("\u91a5\u9b6c\u763a\u7529\u676c\u77d3\u76c2\u9319\u8ae2\uff3a\u8a8d\u91fb\u8a20"));
                        mapleCharacter2.cancelFishingTask();
                        return;
                    }
                    if (a2.getMeso() >= Integer.MAX_VALUE) {
                        MapleCharacter mapleCharacter3 = a2;
                        mapleCharacter3.dropMessage(1, MapleNodes.ALLATORIxDEMO("\u8ea5\u4e26\u768a\u697f\u5e6d\u9062\u5914\u0000.\u8ae7\u657a\u742a\u5f82\u51a1\u9585\u59e7\u91ed\u9b76"));
                        mapleCharacter3.cancelFishingTask();
                        return;
                    }
                    if (a2.getInventory(MapleInventoryType.EQUIP).getNextFreeSlot() == -1 || a2.getInventory(MapleInventoryType.USE).getNextFreeSlot() == -1 || a2.getInventory(MapleInventoryType.ETC).getNextFreeSlot() == -1 || a2.getInventory(MapleInventoryType.SETUP).getNextFreeSlot() == -1) {
                        MapleCharacter mapleCharacter4 = a2;
                        mapleCharacter4.dropMessage(1, FixDropNullItem.ALLATORIxDEMO("\u808a\u5333\u722f\u54f7\u9008\u592cj\u0016\u8a8d\u6542\u7440\u5fba\u51cb\u95bd\u598d\u91d5\u9b1c"));
                        mapleCharacter4.cancelFishingTask();
                        return;
                    }
                    if (!a2.haveItem(n2, 1) && !a2.haveItem(n2 = 5340000, 1)) {
                        MapleCharacter mapleCharacter5 = a2;
                        mapleCharacter5.dropMessage(1, MapleNodes.ALLATORIxDEMO("\u8ea5\u4e26\u6c9c\u6725\u4ef5\u4f79\u91ed\u7ad3"));
                        mapleCharacter5.cancelFishingTask();
                        return;
                    }
                    MapleCharacter mapleCharacter6 = a2;
                    n2 = mapleCharacter6.haveItem(2300000, true ? 1 : 0, false, true) ? 1 : 0;
                    boolean bl = mapleCharacter6.haveItem(2300001, true ? 1 : 0, false, true);
                    if (!mapleCharacter6.getcheck_FishingVip()) break block9;
                    if (bl) break block10;
                    mapleCharacter = a2;
                    break block11;
                }
                if (n2 != 0) break block10;
                mapleCharacter = a2;
            }
            mapleCharacter.Cb.sendPacket(MaplePacketCreator.getErrorNotice(FixDropNullItem.ALLATORIxDEMO("\u6ca4\u674f\u9b6c\u994a\u4eb0\uff4a\u4e3b\u80bb\u91d5\u9b1c\u4eb0\u0017gh")));
            a2.cancelFishingTask();
            return;
        }
        MapleInventoryManipulator.removeById(a2.Cb, MapleInventoryType.USE, a2.getcheck_FishingVip() ? 2300001 : 2300000, 1, false, false);
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.gainFishReward(mapleCharacter.getcheck_FishingVip() ? 2300001 : 2300000, false);
        if (MapConstants.isFishingMap(a2.getMapId())) {
            a2.getMap().broadcastMessage(UIPacket.fishingCaught(a2.XC));
        }
    }

    public /* synthetic */ boolean canSummon(int a2) {
        MapleCharacter a3;
        if (a3.tc + (long)a2 < System.currentTimeMillis()) {
            a3.tc = System.currentTimeMillis();
            return true;
        }
        return false;
    }

    public /* synthetic */ void useFamilyBuff(MapleFamilyBuff.MapleFamilyBuffEntry a2) {
        MapleCharacter a3;
        a3.getQuestNAdd(MapleQuest.getInstance(a2.questID)).setCustomData(String.valueOf(System.currentTimeMillis()));
        a3.zb = true;
    }

    public /* synthetic */ void setSoulCount(short a2) {
        a.od = (short)(a2 > 1000 ? 1000 : (int)a2);
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ int getSignTimes() {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [3[TRYBLOCK]], but top level block is 5[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ void setHarvesting(boolean a2) {
        a.ab = a2;
    }

    public /* synthetic */ void changeRemoval(boolean a2) {
        MapleCharacter a3;
        if (a3.getTrade() != null) {
            MapleTrade.cancelTrade(a3.getTrade(), a3.Cb);
        }
        if (a3.getCheatTracker() != null) {
            a3.getCheatTracker().dispose();
        }
        if (!a2) {
            if (GameSetConstants.MAPLE_VERSION >= 134) {
                MapleCharacter mapleCharacter = a3;
                mapleCharacter.cancelEffectFromBuffStat(MapleBuffStat.SOARING);
                mapleCharacter.cancelEffectFromBuffStat(MapleBuffStat.MECH_CHANGE);
                mapleCharacter.cancelEffectFromBuffStat(MapleBuffStat.RECOVERY);
            }
            MapleCharacter mapleCharacter = a3;
            mapleCharacter.cancelEffectFromBuffStat(MapleBuffStat.MONSTER_RIDING);
            mapleCharacter.cancelEffectFromBuffStat(MapleBuffStat.SUMMON);
            mapleCharacter.cancelEffectFromBuffStat(MapleBuffStat.PUPPET);
        }
        if (a3.getPyramidSubway() != null) {
            a3.getPyramidSubway().dispose(a3);
        }
        if (a3.bb != null && !a2) {
            MapleCharacter mapleCharacter = a3;
            a3.bb.removeVisitor(mapleCharacter);
            if (mapleCharacter.bb.isOwner(a3)) {
                a3.bb.setOpen(true);
            }
        }
        if (!a3.getDoors().isEmpty()) {
            a3.removeDoor();
        }
        if (!a3.getMechDoors().isEmpty()) {
            a3.removeMechDoor();
        }
        a3.disposeClones();
        NPCScriptManager.getInstance().dispose(a3.Cb);
    }

    public /* synthetic */ Map<Integer, MonsterFamiliar> getFamiliars() {
        MapleCharacter a2;
        return a2.ja;
    }

    public /* synthetic */ long getPotential2() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("t\te\u0015\u601c\u722f\u987b\u5950\u5081\u5bf5\u5296\u6256"), false);
    }

    public /* synthetic */ void clearNpcSelect() {
        MapleCharacter a2;
        a2.G.clear();
    }

    public final /* synthetic */ MaplePet getPet(int a2) {
        MapleCharacter a3;
        int n2 = 0;
        for (MaplePet maplePet : a3.Md) {
            if (!maplePet.getSummoned()) continue;
            if (n2 == a2) {
                return maplePet;
            }
            n2 = (byte)(n2 + 1);
        }
        return null;
    }

    public final /* synthetic */ boolean hasDisease(MapleBuffStat a2) {
        MapleCharacter a3;
        return a3.qc.keySet().contains(a2);
    }

    public /* synthetic */ void resetBeans() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        MapleCharacter mapleCharacter2 = a2;
        a2.setBeansLight(0);
        mapleCharacter2.setBeansStage(0);
        mapleCharacter2.setBeansTime(0);
        mapleCharacter.setCanGainBeansReward(false);
        mapleCharacter.setBeansStatus(false);
    }

    public /* synthetic */ boolean getCanDice() {
        MapleCharacter a2;
        return a2.Ub;
    }

    public /* synthetic */ boolean SaveKeyA() {
        MapleCharacter a2;
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(a2.IC);
        stringBuilder.append(a2.IB);
        stringBuilder.append(a2.GB.getStr());
        stringBuilder.append(a2.GB.getDex());
        stringBuilder.append(a2.GB.getLuk());
        stringBuilder.append(a2.GB.getInt());
        stringBuilder.append(a2.GB.getHp());
        stringBuilder.append(a2.GB.getMp());
        stringBuilder.append(a2.GB.getMaxHp());
        stringBuilder.append(a2.GB.getMaxMp());
        int n2 = 0;
        int n3 = n2;
        while (n3 < a2.nc.length) {
            stringBuilder.append(a2.nc[n2++]);
            n3 = n2;
        }
        stringBuilder.append(a2.iA);
        stringBuilder.append(a2.id);
        stringBuilder.append(a2.jd);
        stringBuilder.append(a2.WA);
        stringBuilder.append(a2.ob);
        stringBuilder.append(a2.zc);
        stringBuilder.append(a2.dA);
        stringBuilder.append(a2.Qc);
        stringBuilder.append(a2.vA);
        stringBuilder.append(a2.qC);
        stringBuilder.append(a2.tB.getCapacity());
        stringBuilder.append(a2.kB);
        stringBuilder.append(a2.lB);
        stringBuilder.append(a2.bB);
        Iterator<MaplePet> iterator = a2.Md.iterator();
        Iterator<MaplePet> iterator2 = iterator;
        while (iterator2.hasNext()) {
            MaplePet maplePet = iterator.next();
            iterator2 = iterator;
            stringBuilder.append(maplePet.getPetKey());
        }
        stringBuilder.append(a2.zC);
        stringBuilder.append(a2.Jd);
        stringBuilder.append(a2.sC);
        stringBuilder.append(a2.cA);
        stringBuilder.append(a2.SA);
        stringBuilder.append(a2.xc);
        stringBuilder.append(a2.Lc);
        stringBuilder.append(a2.oA);
        stringBuilder.append(a2.pB);
        stringBuilder.append(a2.QA);
        stringBuilder.append(a2.VB);
        stringBuilder.append(a2.OB);
        stringBuilder.append(a2.wB);
        stringBuilder.append(a2.cB);
        stringBuilder.append(a2.Hd);
        stringBuilder.append(a2.sd);
        stringBuilder.append(a2.Nb);
        stringBuilder.append(a2.HC);
        stringBuilder.append(a2.fA);
        int n4 = 0;
        int n5 = n4;
        while (n5 < a2.JB.length) {
            stringBuilder.append(a2.JB[n4++]);
            n5 = n4;
        }
        int n6 = n4 = 0;
        while (n6 < a2.Cd.length) {
            stringBuilder.append(a2.Cd[n4++]);
            n6 = n4;
        }
        stringBuilder.append(a2.Za);
        stringBuilder.append(a2.Cc);
        stringBuilder.append(a2.XC);
        String string = stringBuilder.toString();
        if (a2.v.equals(string)) {
            boolean bl = true;
            return true;
        }
        a2.v = string;
        boolean bl = false;
        return false;
    }

    public /* synthetic */ boolean changeFace(short a2, int a3) {
        MapleCharacter a4;
        a3 = a4.dA / 1000 * 1000 + a3 + a4.dA % 100;
        if (!MapleItemInformationProvider.getInstance().itemExists(a3)) {
            MapleCharacter mapleCharacter = a4;
            a3 = mapleCharacter.dA;
            mapleCharacter.gainItem(a2, 1);
            return false;
        }
        MapleCharacter mapleCharacter = a4;
        mapleCharacter.dA = a3;
        mapleCharacter.updateSingleStat(MapleStat.FACE, a3);
        mapleCharacter.equipChanged();
        return true;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    public /* synthetic */ Map<Byte, Integer> getTotems() {
        var1_1 = new HashMap<Byte, Integer>();
        var2_2 = a.LA[MapleInventoryType.EQUIPPED.ordinal()].newList().iterator();
        block0: while (true) lbl-1000:
        // 3 sources

        {
            v0 = var2_2;
            while (true) {
                if (!v0.hasNext()) {
                    if (a.fa == false) return var1_1;
                    var1_1.clear();
                    return var1_1;
                }
                var3_3 = var2_2.next();
                var4_4 = (byte)((var3_3.getPosition() + 5000) * -1);
                if (var4_4 < 0) ** GOTO lbl-1000
                if (var4_4 > 2) {
                    v0 = var2_2;
                    continue;
                }
                if (var3_3.getItemId() < 1200000) continue block0;
                if (var3_3.getItemId() >= 1210000) {
                    v0 = var2_2;
                    continue;
                }
                var1_1.put(var4_4, var3_3.getItemId());
                v0 = var2_2;
            }
            break;
        }
    }

    public /* synthetic */ void gainBeans(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.VB += a2;
        mapleCharacter.updateBeans();
    }

    public /* synthetic */ NiuNiu.NiuNiuResultInfo getNiuNiuCard() {
        MapleCharacter a2;
        return a2.La;
    }

    public /* synthetic */ void doRecovery() {
        MapleCharacter a2;
        MapleStatEffect mapleStatEffect = a2.getStatForBuff(MapleBuffStat.RECOVERY);
        if (mapleStatEffect == null) {
            mapleStatEffect = a2.getStatForBuff(MapleBuffStat.MECH_CHANGE);
            if (mapleStatEffect == null) {
                a2.Jb = 0L;
                return;
            }
            if (mapleStatEffect.getSourceId() == 35121005) {
                MapleCharacter mapleCharacter = a2;
                mapleCharacter.I();
                if (mapleCharacter.GB.getMp() < mapleStatEffect.getU()) {
                    MapleCharacter mapleCharacter2 = a2;
                    mapleCharacter2.cancelEffectFromBuffStat(MapleBuffStat.MONSTER_RIDING);
                    mapleCharacter2.cancelEffectFromBuffStat(MapleBuffStat.MECH_CHANGE);
                    return;
                }
                a2.addMP(-mapleStatEffect.getU());
                return;
            }
        } else {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.I();
            if (mapleCharacter.GB.getHp() >= a2.GB.getCurrentMaxHp()) {
                a2.cancelEffectFromBuffStat(MapleBuffStat.RECOVERY);
                return;
            }
            a2.healHP(mapleStatEffect.getX());
        }
    }

    public /* synthetic */ void setPotentialMessage() {
        MapleCharacter a2;
        if (a2.VC) {
            a2.VC = false;
            a2.dropMessage(5, MapleNodes.ALLATORIxDEMO("\u753f\u6590\u60a6\u95f0\u9587\u4eaa\u9861\u7916\u6df4\u80d1\u8a04\u6043\uff02\u626c\u4eeb\u6084\u7705\u4e21\u8985\u4ed7\u4f5b\u76a8\u6df4\u80d1\u8a04\u6043\uff02\u59ae\u6792\u89ad\u625d\u95a7\u8ac5\u627fN\u6f77\u80f3\u8a26\u6061\u302e"));
            return;
        }
        a2.VC = true;
        a2.dropMessage(5, FixDropNullItem.ALLATORIxDEMO("\u76d8\u520b\u5dc4\u7dd5\u6265\u95cd\u9859\u797c\u6dcc\u80bb\u8a3c\u6029"));
    }

    public /* synthetic */ boolean inPVP() {
        MapleCharacter a2;
        return a2.Uc != null && a2.Uc.getName().startsWith(MapleNodes.ALLATORIxDEMO("|X|"));
    }

    public /* synthetic */ void resetCP() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.qd = 0;
        mapleCharacter.sc = 0;
    }

    public /* synthetic */ void setChalkboard(String a2) {
        MapleCharacter a3;
        a3.lb = a2;
        a3.rC.broadcastMessage(MTSCSPacket.useChalkboard(a3.getId(), a2));
    }

    public /* synthetic */ MapleBuffStatValueHolder getBuffStatValueHolder(MapleBuffStat a2) {
        MapleCharacter a3;
        if ((a2 = a3.kb.get(a2)) == null) {
            return null;
        }
        return a2;
    }

    private /* synthetic */ void H(Connection a2, String a3) throws SQLException {
        MapleCharacter a4;
        MapleCharacter.deleteWhereCharacterId_NoLock(a2, a3, a4.XC);
    }

    public /* synthetic */ void addInfinityCount() {
        MapleCharacter a2;
        long l2 = a2.getInfinityCount() + 1;
        if (l2 > 10L) {
            l2 = 10L;
        }
        a2.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u9b62\u52dd\u7117\u9616"), l2, false);
    }

    public /* synthetic */ boolean canChallageJP() {
        MapleCharacter a2;
        long l2 = System.currentTimeMillis();
        if (a2.zB + 30000L > l2) {
            l2 = (l2 - a2.zB) / 1000L;
            if (!a2.hasGmLevel(1)) {
                MapleCharacter mapleCharacter = a2;
                mapleCharacter.ban(mapleCharacter.getName() + " \u5fcd\u8010\u6642\u9593\u7570\u5e38(" + l2 + "s)", true, true, false);
                a2.getClient().getSession().close();
                String string = FixDropNullItem.ALLATORIxDEMO("\u4f39\u751e\u9013\u6ce3\u7a4d\u5f39\u9008\u5ffb\u8056");
                World.Broadcast.broadcastMessage(MaplePacketCreator.getItemNotice("[\u5c01\u9396\u7cfb\u7d71] " + a2.getName() + " \u56e0\u70ba" + string + "\u800c\u88ab\u7ba1\u7406\u54e1\u6c38\u4e45\u505c\u6b0a\u3002"));
                World.Broadcast.broadcastGMMessage(MaplePacketCreator.getItemNotice("[GM\u5bc6\u8a9e] " + a2.getName() + " \u5fcd\u8010\u6642\u9593\u7570\u5e38(" + l2 + ")\u81ea\u52d5\u5c01\u9396! "));
                FileoutputUtil.logToFile(MapleNodes.ALLATORIxDEMO("bCi_!doOe\u0003LM`\u0003\u5fc3\u803c\u4f52\u5f26 XvX"), "\r\n " + FileoutputUtil.NowTime() + " \u73a9\u5bb6: " + a2.getName() + " \u5730\u5716: " + a2.getMap().getMapName() + "(" + a2.getMapId() + ") \u79d2\u6578: " + l2);
            } else {
                a2.dropMessage(FixDropNullItem.ALLATORIxDEMO("\u5ffb\u8056\u6674\u95d5\u7546\u5e7e"));
            }
            return false;
        }
        a2.zB = System.currentTimeMillis();
        return true;
    }

    public /* synthetic */ void setSmega() {
        MapleCharacter a2;
        if (a2.rc) {
            a2.rc = false;
            a2.dropMessage(5, FixDropNullItem.ALLATORIxDEMO("\u7507\u65fa\u609e\u959a\u95bf\u4ec0\u9859\u797c\u5ed5\u64eb\uff3a\u6206\u4ed3\u60ee\u773d\u4e4b\u89bd\u4ebd\u4f63\u76c2\u5ed5\u64eb\uff3a\u59c4\u67aa\u89c7\u6265\u95cd\u8afd\u6215v\u0012e+S!W\u3044"));
            return;
        }
        a2.rc = true;
        a2.dropMessage(5, MapleNodes.ALLATORIxDEMO("\u76c2\u5243\u5dde\u7d9d\u627f\u9585\u9843\u7934\u5ecf\u64a3\uff20\u82eb\u89ad\u5183\u6b0d\u95d2\u95a5\u8ac5\u627fNx]AkKo\u302e"));
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    public /* synthetic */ void equip(int a, boolean a, boolean a) {
        v0 = a;
        var4_5 = v0.getInventory(MapleInventoryType.EQUIPPED);
        var5_6 = v0.getInventory(MapleInventoryType.EQUIP);
        var6_8 = null;
        for (IItem var8_17 : var5_6.newList()) {
            if (var8_17.getItemId() != a) continue;
            var6_8 = (Equip)var8_17;
        }
        if (var6_8 == null) {
            if (!a) {
                return;
            }
            var7_10 = MapleItemInformationProvider.getInstance();
            var8_18 = var7_10.getEquipById(a);
            var8_18.setPosition(var5_6.getNextFreeSlot());
            var8_18.setGMLog("\u5f9e\u7a7f\u6234\u51fd\u6578\u4e2d\u7372\u5f97, \u6642\u9593 " + FileoutputUtil.CurrentReadable_Time());
            v1 = var8_18;
            MapleInventoryManipulator.addbyItem(a.Cb, v1);
            var6_8 = (Equip)v1;
        }
        var7_12 = 0;
        var8_20 = ItemConstants.getEquipedSlot(a);
        switch (var8_20.length) {
            case 0: {
                if (a.isGM() == false) return;
                a.showInfo(FixDropNullItem.ALLATORIxDEMO("\u7a49\u6272\u51cb\u653e"), true, "\u672a\u627e\u5230\u7a7f\u6234\u4f4d\u7f6e, \u9053\u5177ID:" + a);
                return;
            }
            case 1: {
                v2 = var7_13 = var8_20[0];
                break;
            }
            default: {
                a = var8_20;
                var5_7 = var8_20.length;
                v3 = var9_21 = 0;
                while (v3 < var5_7) {
                    var10_22 = a[var9_21];
                    if (var4_5.getItem((short)(var7_12 ? 1 : 0)) != null) ** GOTO lbl40
                    v4 = var7_14 = var10_22;
                    ** GOTO lbl43
lbl40:
                    // 1 sources

                    v3 = ++var9_21;
                }
                v4 = var7_12;
lbl43:
                // 2 sources

                if (v4 == 0) {
                    var7_15 = var8_20[0];
                }
                v2 = var7_15;
            }
        }
        if (v2 == 0) {
            if (a.isGM() == false) return;
            a.showInfo(MapleNodes.ALLATORIxDEMO("\u7a71\u6218\u51f3\u6554"), true, "\u672a\u627e\u5230\u7a7f\u6234\u4f4d\u7f6e, \u9053\u5177ID:" + a);
            return;
        }
        if (a && var4_5.getItem((short)var7_16) != null) {
            MapleInventoryManipulator.unequip(a.Cb, var4_5.getItem((short)var7_16).getPosition(), a.getInventory(MapleInventoryType.EQUIP).getNextFreeSlot(), true);
        }
        MapleInventoryManipulator.equip(a.Cb, var6_8.getPosition(), (short)var7_16);
    }

    public /* synthetic */ int getSavedHairs(int a2) {
        if (a2 <= 3) {
            MapleCharacter a3;
            return a3.Gd[a2];
        }
        return -1;
    }

    public /* synthetic */ short getSoulCount() {
        MapleCharacter a2;
        return a2.od;
    }

    public /* synthetic */ void removeAll(int a2) {
        MapleCharacter a3;
        a3.removeAll(a2, false);
    }

    private /* synthetic */ void ALLATORIxDEMO(MapleMap a2, Point a3, byte[] a422, MaplePortal a522) {
        int n2;
        boolean bl;
        MapleCharacter a6;
        if (a2 == null) {
            return;
        }
        if (a6.getAntiMacro() != null && a6.getAntiMacro().inProgress()) {
            MapleCharacter mapleCharacter = a6;
            mapleCharacter.dropMessage(5, FixDropNullItem.ALLATORIxDEMO("\u889d\u4f39\u751e\u6e6a\u8b3c\u562e\u6674\u7167\u6ce3\u648b\u4f6a\u3044"));
            mapleCharacter.Cb.sendPacket(MaplePacketCreator.enableActions());
            return;
        }
        if (MapConstants.isBossMap(a2.getId())) {
            a6.cancelEffectFromBuffStat(MapleBuffStat.SOARING);
        }
        if (!GameSetConstants.SERVER_NAME.equals(MapleNodes.ALLATORIxDEMO("\u605c\u607e\u8c1b")) && a2.getId() == 180000000 && a6.getGMLevel() < 4) {
            a6.changeMap(100000000);
            return;
        }
        MapleCharacter mapleCharacter = a6;
        int a522 = mapleCharacter.rC.getId();
        if (mapleCharacter.Uc != null) {
            a6.Uc.changedMap(a6, a2.getId());
        }
        if (a6.getTrade() != null) {
            MapleTrade.cancelTrade(a6.getTrade(), a6.Cb);
        }
        if (GameSetConstants.FLY_CHAIR && a6.getFlyChairId() != 0) {
            MapleCharacter mapleCharacter2 = a6;
            mapleCharacter2.setFlyChairId(0);
            MapleBuffStat[] arrmapleBuffStat = new MapleBuffStat[1];
            arrmapleBuffStat[0] = MapleBuffStat.MONSTER_RIDING;
            mapleCharacter2.cancelBuffStats(arrmapleBuffStat);
        }
        boolean bl2 = bl = a6.Fb != null;
        if (a6.rC.getId() == a522) {
            MapleCharacter mapleCharacter3 = a6;
            mapleCharacter3.F = false;
            mapleCharacter3.aa = System.currentTimeMillis();
            mapleCharacter3.Cb.sendPacket((byte[])a422);
            a522 = !mapleCharacter3.isClone() && a6.Cb.getChannelServer().getPlayerStorage().getCharacterById(a6.getId()) != null ? 1 : 0;
            int n3 = n2 = a6.rC.getId() == a2.getId() ? 1 : 0;
            if (a522 != 0 && n2 != 0) {
                a2.setCheckStates(false);
            }
            a6.rC.removePlayer(a6);
            try {
                a422 = a6.rC.getAllMonsters();
                Iterator<MapleMapObject> iterator = a422.iterator();
                while (iterator.hasNext()) {
                    MapleMonster mapleMonster = (MapleMonster)iterator.next();
                    if (mapleMonster.getBelongsTo() != a6.getId()) continue;
                    a6.decAntiKSNum();
                    mapleMonster.expireAntiKS();
                }
            }
            catch (Exception a422) {
                // empty catch block
            }
            if (a522 != 0) {
                MapleCharacter mapleCharacter4 = a6;
                MapleCharacter mapleCharacter5 = a6;
                MapleCharacter mapleCharacter6 = a6;
                mapleCharacter6.rC = a2;
                mapleCharacter6.Qc = a2.getId();
                mapleCharacter5.setPosition(a3);
                mapleCharacter5.setStance(0);
                mapleCharacter4.setFh(0);
                a2.addPlayer(mapleCharacter4);
                mapleCharacter4.GB.relocHeal();
                if (n2 != 0) {
                    a2.setCheckStates(true);
                }
            }
        }
        if (a6.getCheckedEffectAmulet()) {
            MapleCharacter mapleCharacter7 = a6;
            a522 = (int)((double)mapleCharacter7.getStat().getMaxHp() * 0.3);
            n2 = (int)((double)mapleCharacter7.getStat().getMaxHp() * 0.3);
            mapleCharacter7.getStat().setHp(a522);
            a6.getStat().setMp(n2);
            MapleCharacter mapleCharacter8 = a6;
            mapleCharacter8.Cb.getPlayer().updateSingleStat(MapleStat.HP, a522);
            mapleCharacter8.Cb.getPlayer().updateSingleStat(MapleStat.MP, n2);
            mapleCharacter8.Xb = false;
        }
        if (bl && a6.Fb != null) {
            a6.Fb.onChangeMap(a6, a2.getId());
        }
        MapleCharacter mapleCharacter9 = a6;
        mapleCharacter9.handleMapQuest(a2.getId());
        mapleCharacter9.saveofflinelocations();
        if (mapleCharacter9.Cb.isMonitored()) {
            FileoutputUtil.logToFile("logs/Hack/\u5371\u96aa\u5e33\u865f\u64cd\u4f5c/" + a6.getName() + "/\u5404\u5f0f\u64cd\u4f5c.txt", a6.getChrInfo("\u9032\u5165\u5730\u5716 " + a2.getMapName() + "(\u4ee3\u78bc:" + a2.getId() + ")"));
        }
    }

    public /* synthetic */ MapleCharacterCards getCharacterCard() {
        MapleCharacter a2;
        return a2.V;
    }

    public /* synthetic */ long getLastSaveTime() {
        MapleCharacter a2;
        return a2.wa;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ void setEventCount(String a) {
        block16: {
            block15: {
                block13: {
                    if (!GameSetConstants.EVENT_COUNT) break block16;
                    var2_2 = DBConPool.getInstance().getDataSource().getConnection();
                    if (a.getEventCount(a) == 0) break block13;
                    v0 = var2_2.prepareStatement(MapleNodes.ALLATORIxDEMO("y^hOxK\fnIxI`XQOaY`Xn\f]iZ\fnOaA~@kXkHzEcI}L.\u0011.\u0013.{Fi\\i.LkZkBzsmC{BzL LkZkBzBoAkL.\u0011.\u0013.m@h.OfM|MmXk^gH.\u0011.\u0013"));
                    ** GOTO lbl12
                }
                v0 = var2_2.prepareStatement(FixDropNullItem.ALLATORIxDEMO("\u000fX5S4Bf\u007f(B)\u0016#@#X2i%Y3X2\u0016nU)[6Z#B#R2_+S5\u001afS0S(B(W+Sj\u0016%^'D'U2S4_\"\u001ff@'Z3S5\u0016n\tj\tj\to"));
lbl12:
                // 2 sources

                var3_5 = v0;
                var4_7 = a.getEventCount(a) + 1;
                v1 = var3_5;
                v2 = var3_5;
                v2.setInt(1, var4_7);
                v2.setString(2, a);
                v1.setInt(3, a.XC);
                v1.executeUpdate();
                v1.close();
                ** if (var2_2 == null) goto lbl-1000
lbl-1000:
                // 1 sources

                {
                    var2_2.close();
                }
lbl-1000:
                // 2 sources

                {
                }
                {
                    catch (Throwable var3_6) {
                        try {
                            block14: {
                                if (var2_2 != null) {
                                    try {
                                        var2_2.close();
                                        v3 = var3_6;
                                        break block14;
                                    }
                                    catch (Throwable var4_8) {
                                        var3_6.addSuppressed(var4_8);
                                    }
                                }
                                v3 = var3_6;
                            }
                            throw v3;
                        }
                        catch (Exception var2_3) {
                            // empty catch block
                        }
                    }
                }
                v4 = a;
                v4.setBossLog(a);
                if (v4.getSpeedStartTime() > 0L) break block15;
                return;
            }
            var2_4 = (int)((System.currentTimeMillis() - a.sa) / 1000L);
            a.sa = 0L;
            if (a.getSpeedTime(a) > (long)var2_4 || a.getSpeedTime(a) == 0L) {
                a.setSpeedTime(a, var2_4);
                a.dropMessage(-1, "\u606d\u559c\u60a8\u6253\u7834\u4e86\u81ea\u5df1\u7684\u6b77\u53f2\u7d00\u9304! \u526f\u672c: " + a + "  \u65b0\u7d00\u9304: " + var2_4 + " \u79d2");
            }
            if (a.getEventToday(a) < (long)var2_4) {
                v5 = a;
                v5.setEventToday(a, var2_4);
                v5.dropMessage(-1, "\u606d\u559c\u60a8\u6253\u7834\u4e86\u81ea\u5df1\u7684\u4eca\u65e5\u7d00\u9304! \u526f\u672c: " + a + "  \u65b0\u7d00\u9304: " + var2_4 + " \u79d2");
            }
        }
    }

    public final /* synthetic */ void addFriendShipToAdd(int a2) {
        a.z += a2;
    }

    public /* synthetic */ void addLTC(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        long l2 = mapleCharacter.getLTC() + (long)a2;
        mapleCharacter.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\nb\u0005"), l2, false);
        Cryptocurrency.HandlePrice(MapleNodes.ALLATORIxDEMO("`Zo"), a2);
    }

    public /* synthetic */ void setAutoHPPercent(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u81e4\u52f9\u88d2\u886c\u6bda\u4fa7"), a2, false);
    }

    public /* synthetic */ int[] getExcludeItems() {
        int n2;
        long l2;
        MapleCharacter a2;
        LinkedList<Long> linkedList = new LinkedList<Long>();
        for (Map.Entry<String, Long> entry : a2.ga.entrySet()) {
            if (!entry.getKey().contains(FixDropNullItem.ALLATORIxDEMO("\u9078\u6fb8\u725f\u5487"))) continue;
            l2 = entry.getValue();
            if (!MapleItemInformationProvider.getInstance().itemExists((int)l2)) continue;
            linkedList.add(entry.getValue());
        }
        Object object = new int[linkedList.size()];
        int n3 = n2 = 0;
        while (n3 < ((Object)object).length) {
            l2 = (Long)linkedList.get(n2);
            object[n2++] = (int)l2;
            n3 = n2;
        }
        return object;
    }

    public /* synthetic */ int getSecondFace() {
        MapleCharacter a2;
        if (JobConstants.is\u795e\u4e4b\u5b50(a2.ob)) {
            if (a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u007fkOaBjsHMmI")) == 0L) {
                a2.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u0015S%Y(R\u0019p'U#"), 21290L);
            }
            return (int)a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u007fkOaBjsHMmI"));
        }
        if (JobConstants.is\u5929\u4f7f\u7834\u58de\u8005(a2.ob)) {
            if (a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u0015S%Y(R\u0019p'U#")) == 0L) {
                a2.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u007fkOaBjsHMmI"), 21173L);
            }
            return (int)a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u0015S%Y(R\u0019p'U#"));
        }
        return a2.dA;
    }

    public /* synthetic */ HashMap<Integer, Long> getSkillWorkings() {
        MapleCharacter a2;
        return a2.k;
    }

    public /* synthetic */ void addItemCooldown(int a2, long a3) {
        MapleCharacter a4;
        a4.setCharacterSetTemp("cool_" + a2, System.currentTimeMillis() + a3);
        MapleCharacter mapleCharacter = a4;
        mapleCharacter.getClient().sendPacket(MaplePacketCreator.itemCooldown(false, a2, 0L));
        mapleCharacter.getClient().sendPacket(MaplePacketCreator.updateItemCoolTime(a2, a3));
    }

    public /* synthetic */ int getItemQuestItemId() {
        MapleCharacter a2;
        return a2.fB;
    }

    public /* synthetic */ void setOperateStorage(boolean a2) {
        a.aA = a2;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public final /* synthetic */ Map<Integer, Pair<Integer, Integer>> getAuctionItems() {
        hashMap = new HashMap<Integer, Pair<Integer, Integer>>();
        druidPooledConnection = DBConPool.getInstance().getDataSource().getConnection();
        preparedStatement = druidPooledConnection.prepareStatement(MapleNodes.ALLATORIxDEMO("}IbImX.\u0006.J|Cc\foYmXgC`sgXkA.[fI|I.OfM|MmXk^gH.\u0011.\u0013"));
        preparedStatement.setInt(1, a2.XC);
        resultSet = preparedStatement.executeQuery();
        block9: while (true) {
            v0 = resultSet;
            while (v0.next()) {
                if (!MapleItemInformationProvider.getInstance().itemExists(resultSet.getInt(FixDropNullItem.ALLATORIxDEMO("_2S+_\"")))) continue block9;
                v1 = resultSet;
                v0 = v1;
                hashMap.put(v1.getInt(MapleNodes.ALLATORIxDEMO("gH")), new Pair<Integer, Integer>(resultSet.getInt(FixDropNullItem.ALLATORIxDEMO("_2S+_\"")), resultSet.getInt(MapleNodes.ALLATORIxDEMO("OaY`X"))));
            }
            break;
        }
        preparedStatement.close();
        resultSet.close();
        ** if (druidPooledConnection == null) goto lbl-1000
lbl-1000:
        // 1 sources

        {
            druidPooledConnection.close();
        }
lbl-1000:
        // 2 sources

        {
        }
        {
            catch (Throwable throwable) {
                try {
                    block13: {
                        if (druidPooledConnection != null) {
                            try {
                                druidPooledConnection.close();
                                v2 = throwable;
                                break block13;
                            }
                            catch (Throwable throwable3) {
                                throwable.addSuppressed(throwable3);
                            }
                        }
                        v2 = throwable;
                    }
                    throw v2;
                }
                catch (SQLException sQLException) {
                    System.err.println(sQLException);
                }
            }
        }
        return hashMap;
    }

    public /* synthetic */ void setCanGainBeansReward(boolean a2) {
        a.yC = a2;
    }

    public /* synthetic */ boolean isExcludeItem(int a2) {
        MapleCharacter a3;
        return a3.getExcludeItem().contains(a2);
    }

    public /* synthetic */ void addSavedHairs(int a2, int a3) {
        a.Gd[a2] = a3;
    }

    public /* synthetic */ MapleGuildCharacter getMGC() {
        MapleCharacter a2;
        return a2.Rb;
    }

    public /* synthetic */ int getRankMove() {
        MapleCharacter a2;
        return a2.Qb;
    }

    public final /* synthetic */ int getFriendShipToAdd() {
        MapleCharacter a2;
        return a2.z;
    }

    public /* synthetic */ List<MapleShopItem> getRebuy() {
        MapleCharacter a2;
        return a2.Ha;
    }

    public /* synthetic */ void setPlayerFishing(HiredFishing a2) {
        a.va = a2;
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ void havePartyQuest(int a2) {
        MapleCharacter mapleCharacter;
        MapleCharacter a3;
        int n2;
        int n3 = -1;
        switch (a2) {
            case 1002798: {
                n2 = 1200;
                mapleCharacter = a3;
                break;
            }
            case 1072369: {
                n2 = 1201;
                mapleCharacter = a3;
                break;
            }
            case 1022073: {
                n2 = 1202;
                mapleCharacter = a3;
                break;
            }
            case 1082232: {
                n2 = 1203;
                mapleCharacter = a3;
                break;
            }
            case 1002571: 
            case 1002572: 
            case 1002573: 
            case 1002574: {
                n2 = 1204;
                n3 = a2 - 1002571;
                mapleCharacter = a3;
                break;
            }
            case 1122010: {
                n2 = 1205;
                mapleCharacter = a3;
                break;
            }
            case 1032060: 
            case 1032061: {
                n2 = 1206;
                n3 = a2 - 1032060;
                mapleCharacter = a3;
                break;
            }
            case 0x2DEDE2: {
                n2 = 1300;
                mapleCharacter = a3;
                break;
            }
            case 1122007: {
                n2 = 1301;
                mapleCharacter = a3;
                break;
            }
            case 1122058: {
                n2 = 1302;
                mapleCharacter = a3;
                break;
            }
            default: {
                return;
            }
        }
        mapleCharacter.startPartyQuest(n2);
        a3.updateOneInfo(n2, "have" + (Serializable)(n3 == -1 ? "" : Integer.valueOf(n3)), "1");
    }

    public /* synthetic */ int getHair() {
        MapleCharacter a2;
        return a2.zc;
    }

    public /* synthetic */ void addSpendPoint(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        long l2 = mapleCharacter.getSpendPoint() + (long)a2;
        mapleCharacter.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u4ec4\u65c9\u82bf\u8c97\u7d0b\u5205"), l2, false);
    }

    private /* synthetic */ void l(Connection a2, String a3) throws SQLException {
        MapleCharacter a4;
        MapleCharacter.deleteWhereCharacterId(a2, a3, a4.nC);
    }

    public /* synthetic */ int getTouzhuType() {
        MapleCharacter a2;
        return a2.Kc;
    }

    public /* synthetic */ int getMSG() {
        MapleCharacter a2;
        return a2.uC;
    }

    public /* synthetic */ boolean getcheck_FishingVip() {
        MapleCharacter a2;
        return a2.gd;
    }

    public /* synthetic */ byte getGender() {
        MapleCharacter a2;
        return a2.WA;
    }

    public /* synthetic */ long getCharacterSetTemp(String a2) {
        MapleCharacter a3;
        long l2 = 0L;
        if (a3.Fa.containsKey(a2)) {
            l2 = a3.Fa.get(a2);
        }
        return l2;
    }

    public /* synthetic */ void autoJob_\u7687\u5bb6() {
        MapleCharacter a2;
        if (JobConstants.is\u8056\u9b42\u528d\u58eb(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                a2.changeJob(1110);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(1111);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter4thJobLevel(a2.ob)) {
                a2.changeJob(1112);
                return;
            }
        } else if (JobConstants.is\u70c8\u7130\u5deb\u5e2b(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                a2.changeJob(1210);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(1211);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter4thJobLevel(a2.ob)) {
                a2.changeJob(1212);
                return;
            }
        } else if (JobConstants.is\u7834\u98a8\u4f7f\u8005(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                a2.changeJob(1310);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(1311);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter4thJobLevel(a2.ob)) {
                a2.changeJob(1312);
                return;
            }
        } else if (JobConstants.is\u6697\u591c\u884c\u8005(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                a2.changeJob(1410);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(1411);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter4thJobLevel(a2.ob)) {
                a2.changeJob(1412);
                return;
            }
        } else if (JobConstants.is\u9583\u96f7\u608d\u5c07(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                a2.changeJob(1510);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(1511);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter4thJobLevel(a2.ob)) {
                a2.changeJob(1512);
            }
        }
    }

    public /* synthetic */ void setCharacterSetTemp(String a2, long a3) {
        MapleCharacter a4;
        a4.Fa.remove(a2);
        a4.Fa.put(a2, a3);
    }

    public /* synthetic */ void setLastDayAcc(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u672c\u5f82\u5e1f\u8651\u4e26\u7dd4\u65c9"), a2, true);
    }

    public /* synthetic */ boolean isInvincible() {
        MapleCharacter a2;
        return a2.Pb;
    }

    public /* synthetic */ int getTeam() {
        MapleCharacter a2;
        return a2.dB;
    }

    public /* synthetic */ void setClone(boolean a2) {
        a.Hc = a2;
    }

    public final /* synthetic */ void maxSkillsByJob4() {
        MapleCharacter a2;
        HashMap<ISkill, SkillEntry> hashMap = new HashMap<ISkill, SkillEntry>();
        for (ISkill iSkill : SkillFactory.getAllSkills()) {
            int n2;
            if (!iSkill.canBeLearnedBy(a2.ob) || iSkill.isZeroSkill(a2.ob)) continue;
            if (!iSkill.isSkillNeedMasterLevel()) {
                ISkill iSkill2 = iSkill;
                ISkill iSkill3 = iSkill;
                hashMap.put(iSkill3, new SkillEntry(iSkill3.getMaxLevel(), iSkill.getMaxLevel(), -1L));
                if (GameSetConstants.MAPLE_VERSION > 113) continue;
                MapleCharacter mapleCharacter = a2;
                n2 = mapleCharacter.XC / 10000;
                mapleCharacter.changeSkillLevel(iSkill, (int)iSkill.getMaxLevel(), (int)iSkill.getMaxLevel());
                continue;
            }
            hashMap.put(iSkill, new SkillEntry(0, iSkill.getMaxLevel() > 10 ? 10 : (int)iSkill.getMaxLevel(), -1L));
            if (GameSetConstants.MAPLE_VERSION > 113) continue;
            MapleCharacter mapleCharacter = a2;
            n2 = mapleCharacter.XC / 10000;
            mapleCharacter.changeSkillLevel(iSkill, 0, iSkill.getMaxLevel() > 10 ? 10 : (int)iSkill.getMaxLevel());
        }
        if (GameSetConstants.MAPLE_VERSION > 113) {
            a2.changeSkillLevel(hashMap);
        }
    }

    public /* synthetic */ long getBank() {
        MapleCharacter a2;
        return a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u928e\u8860"), true);
    }

    public /* synthetic */ byte getNumClones() {
        MapleCharacter a2;
        return a2.LC;
    }

    public /* synthetic */ void setTotalRep(int a2) {
        MapleCharacter a3;
        a3.cA = a2;
        if (a3.JC != null) {
            a3.JC.setTotalRep(a2);
        }
    }

    public /* synthetic */ String getVerifyNumber() {
        MapleCharacter a2;
        return a2.ma;
    }

    public /* synthetic */ void setPlayerShop(IMaplePlayerShop a2) {
        a.bb = a2;
    }

    public /* synthetic */ short getJob() {
        MapleCharacter a2;
        return a2.ob;
    }

    public /* synthetic */ void addMonsterKillToday() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        long l2 = mapleCharacter.getMonsterKillToday() + 1L;
        mapleCharacter.setCharacterSetToday(MapleNodes.ALLATORIxDEMO("\u6024\u7245\u64c4\u6b96"), l2, false);
    }

    public /* synthetic */ void dropMessageAll(String a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.dropMessage(6, a2);
        mapleCharacter.dropMessage(-1, a2);
    }

    public /* synthetic */ int getLuk() {
        MapleCharacter a2;
        return a2.getStat().getLuk();
    }

    public /* synthetic */ int getmonth() {
        MapleCharacter a2;
        return a2.pB;
    }

    public /* synthetic */ void addMonsterPoint(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        long l2 = mapleCharacter.getMonsterPoint() + (long)a2;
        mapleCharacter.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6bf9\u65a3\u6265\u606c\u7344\u5fd1\u9ee8\u653e"), l2, true);
    }

    public /* synthetic */ String getbirthIP() {
        MapleCharacter a2;
        return a2.UC;
    }

    public /* synthetic */ int getAnyWhereDoor() {
        MapleCharacter a2;
        return (int)a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u510b\u8c8d\u4ebd\u6139\u95c6"), false);
    }

    @Override
    public /* synthetic */ int getObjectId() {
        MapleCharacter a2;
        return a2.getId();
    }

    public final /* synthetic */ boolean canHP() {
        MapleCharacter a2;
        if (a2.eB + 1000L > System.currentTimeMillis()) {
            return false;
        }
        a2.eB = System.currentTimeMillis();
        return true;
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ void hasGivenFame(MapleCharacter a) {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [3[TRYBLOCK]], but top level block is 5[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ int getVip() {
        MapleCharacter a2;
        return a2.getClient().getVip();
    }

    public /* synthetic */ void setSpeedStartTime() {
        MapleCharacter a2;
        a2.setSpeedStartTime(System.currentTimeMillis());
    }

    public final /* synthetic */ MapleClient getClient() {
        MapleCharacter a2;
        return a2.Cb;
    }

    public /* synthetic */ int getExtendedSlotsIndexByUniqueid(int a2) {
        MapleCharacter a3;
        Iterator<MapleExtendedSlots> iterator;
        int n2 = 0;
        Iterator<MapleExtendedSlots> iterator2 = iterator = a3.Ma.iterator();
        while (iterator2.hasNext()) {
            if (iterator.next().getUniqueid() == a2) {
                if (a2 == -1) {
                    return -1;
                }
                return n2;
            }
            ++n2;
            iterator2 = iterator;
        }
        return -1;
    }

    public /* synthetic */ void dropMessagePotential(String a2) {
        MapleCharacter a3;
        if (a3.VC) {
            a3.dropMessage(-1, a2);
        }
    }

    public /* synthetic */ int getPee() {
        MapleCharacter a2;
        return a2.HC;
    }

    public /* synthetic */ int getTalkNpc() {
        MapleCharacter a2;
        return a2.O;
    }

    public /* synthetic */ void startMapTimeLimitTask(int a2, final MapleMap a3) {
        MapleCharacter a4;
        a4.Cb.sendPacket(MaplePacketCreator.getClock(a2));
        a4.UB = Timer.MapTimer.getInstance().register(new Runnable(){
            {
                2 a32;
            }

            @Override
            public /* synthetic */ void run() {
                2 a2;
                2 v0 = a2;
                v0.MapleCharacter.this.changeMap(v0.a3, a2.a3.getPortal(0));
            }
        }, a2 *= 1000, a2);
    }

    public /* synthetic */ boolean isShowInfo() {
        MapleCharacter a2;
        return a2.isAdmin();
    }

    public /* synthetic */ long getLastMonth() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6746\u5fba\u4e4c\u7dec\u542e"), false);
    }

    public /* synthetic */ void familyUpdate() {
        MapleCharacter a2;
        if (a2.JC == null) {
            return;
        }
        World.Family.memberFamilyUpdate(a2.JC, a2);
    }

    public /* synthetic */ void addRunningStack(int a2) {
        a.Y += a2;
    }

    public /* synthetic */ void checkSoulState(boolean a2) {
        MapleCharacter mapleCharacter;
        block5: {
            MapleCharacter a3;
            block4: {
                int n2;
                block3: {
                    n2 = a3.getEquippedSoulSkill();
                    ISkill iSkill = SkillFactory.getSkill(n2);
                    MapleStatEffect mapleStatEffect = null;
                    if (iSkill != null && a3.getTotalSkillLevel(n2) > 0) {
                        mapleStatEffect = iSkill.getEffect(a3.getTotalSkillLevel(n2));
                    }
                    if (mapleStatEffect == null || a3.getSoulCount() < 1000) {
                        MapleCharacter mapleCharacter2 = a3;
                        mapleCharacter2.getClient().announce(MaplePacketCreator.cancelSoulEffect());
                        mapleCharacter2.getMap().broadcastMessage(MaplePacketCreator.cancelForeignSoulEffect(a3.getId()));
                        return;
                    }
                    a3.getClient().announce(MaplePacketCreator.cancelSoulEffect());
                    if (!a2) break block3;
                    MapleCharacter mapleCharacter3 = a3;
                    mapleCharacter3.setSoulCount((short)0);
                    mapleCharacter3.getMap().broadcastMessage(MaplePacketCreator.cancelForeignSoulEffect(a3.getId()));
                    if (mapleCharacter3.skillisCooling(n2)) break block4;
                    MapleCharacter mapleCharacter4 = a3;
                    mapleCharacter = mapleCharacter4;
                    mapleCharacter4.setSoulCount((short)(mapleCharacter4.getSoulCount() - mapleStatEffect.getSoulMpCon()));
                    mapleCharacter4.getClient().announce(MaplePacketCreator.giveSoulGauge(0, n2));
                    break block5;
                }
                if (a3.getCooldownLimit(n2) <= 0L) {
                    MapleCharacter mapleCharacter5 = a3;
                    mapleCharacter5.getClient().announce(MaplePacketCreator.giveSoulEffect(n2));
                    MapleCharacter mapleCharacter6 = a3;
                    mapleCharacter5.getMap().broadcastMessage(mapleCharacter6, MaplePacketCreator.giveForeignSoulEffect(mapleCharacter6.getId(), n2), false);
                }
            }
            mapleCharacter = a3;
        }
        mapleCharacter.getClient().announce(MaplePacketCreator.getInventoryFull());
    }

    public final /* synthetic */ byte getPetById(int a2) {
        MapleCharacter a3;
        byte by = 0;
        for (MaplePet maplePet : a3.Md) {
            if (!maplePet.getSummoned()) continue;
            if (maplePet.getPetItemId() == a2) {
                return by;
            }
            by = (byte)(by + 1);
        }
        return -1;
    }

    public /* synthetic */ int getCheckSelectionMax() {
        MapleCharacter a2;
        return a2.l;
    }

    public /* synthetic */ void setcharmessage(String a2) {
        MapleCharacter a3;
        try {
            if (a2.getBytes().length > 24) {
                FileoutputUtil.logToFile(FixDropNullItem.ALLATORIxDEMO("*Y!Ei~'U-\u0019\u8941\u88cbi\u89e4\u8234\u8a3c\u6029\u8931\u88bb\u00182N2"), "\r\n " + FileoutputUtil.NowTime() + "\u89d2\u8272" + a3.getName() + "\u7b49\u7d1a:" + a3.getLevel() + " (\u7de8\u865f: " + a3.getId() + ") \u8a0a\u606f\u9577\u5ea6:" + a2.getBytes().length + " \u8a0a\u606f\u5167\u5bb9:" + a2);
                a2 = a2.substring(0, 24);
            }
        }
        catch (Exception exception) {
            FilePrinter.printError(MapleNodes.ALLATORIxDEMO("}IzOfM|Ak_}MiI XvX"), exception, "\u4fdd\u5b58\u4eba\u7269\u8a0a\u606f\u7570\u5e38 \u8a0a\u606f\u9577\u5ea6:" + a2.getBytes().length + " \u8a0a\u606f\u5167\u5bb9:" + a2);
            a2 = "";
        }
        a3.SA = a2;
        a3.handlemessage(a3.SA);
    }

    public /* synthetic */ void UpdateSaveTime() {
        a.wa = System.currentTimeMillis();
    }

    private /* synthetic */ void E() {
        a.Ad = System.currentTimeMillis();
    }

    public /* synthetic */ short getAttackCombo() {
        MapleCharacter a2;
        return (short)a2.getSkillTemp(61000000);
    }

    public /* synthetic */ void setAcLog(String a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.setCharacterSet("\u65e5\u8a08" + FileoutputUtil.NowDay() + a2, mapleCharacter.getAcLog(a2) + 1, true);
    }

    public /* synthetic */ void spawnFamiliar(MonsterFamiliar a2) {
        MapleCharacter a3;
        MonsterFamiliar monsterFamiliar = a2;
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.ba = a2;
        MapleCharacter mapleCharacter2 = a3;
        ((AbstractAnimatedMapleMapObject)((Object)a2)).setStance(0);
        ((AbstractMapleMapObject)((Object)a2)).setPosition(mapleCharacter2.getPosition());
        monsterFamiliar.setFh(mapleCharacter2.getFH());
        mapleCharacter.addVisibleMapObject(monsterFamiliar);
        mapleCharacter.getMap().spawnFamiliar((MonsterFamiliar)a2);
        MapleItemInformationProvider mapleItemInformationProvider = MapleItemInformationProvider.getInstance();
        a2 = mapleItemInformationProvider.getItemEffect(mapleItemInformationProvider.getFamiliar((int)a3.ba.getFamiliar()).passive);
        if (a2 != null && ((MapleStatEffect)a2).getInterval() <= 0 && ((MapleStatEffect)a2).makeChanceResult()) {
            ((MapleStatEffect)a2).applyTo(a3);
        }
        a3.Qa = System.currentTimeMillis();
    }

    public /* synthetic */ void setFatigue(int a2) {
        MapleCharacter a3;
        a3.Cc = Math.max(0, a2);
        if (a3.Cc > 100) {
            a3.Cc = 100;
        }
        if (GameSetConstants.MAPLE_VERSION >= 134) {
            MapleCharacter mapleCharacter = a3;
            mapleCharacter.updateSingleStat(MapleStat.FATIGUE, mapleCharacter.Cc);
        }
    }

    public /* synthetic */ void setAnyWhereDoor(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u5161\u8cb5\u4ed7\u6101\u95ac"), a2, false);
    }

    public /* synthetic */ void setPortalNow(int a2) {
        a.Nc = a2;
    }

    public final /* synthetic */ List<MapleDiseaseValueHolder> getAllDiseases() {
        MapleCharacter a2;
        return new ArrayList<MapleDiseaseValueHolder>(a2.qc.values());
    }

    public /* synthetic */ void setFallCounter(int a2) {
        a.HA = a2;
    }

    public /* synthetic */ long getSpendGash() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u4efc\u65a3\u8287\u8cfdq'E."), false);
    }

    public final /* synthetic */ void showInstruction(String a2, int a3, int a4) {
        MapleCharacter a5;
        a5.Cb.getSession().writeAndFlush((Object)MaplePacketCreator.sendHint(a2, a3, a4));
    }

    public /* synthetic */ void gainMeso(int a2, boolean a3, boolean a4) {
        MapleCharacter a5;
        a5.gainMeso(a2, a3, a4, false, false);
    }

    public final /* synthetic */ void maxSkills() {
        MapleCharacter a2;
        Iterator<ISkill> iterator;
        HashMap<ISkill, SkillEntry> hashMap = new HashMap<ISkill, SkillEntry>();
        Iterator<ISkill> iterator2 = iterator = SkillFactory.getAllSkills().iterator();
        while (iterator2.hasNext()) {
            ISkill iSkill = iterator.next();
            iterator2 = iterator;
            ISkill iSkill2 = iSkill;
            ISkill iSkill3 = iSkill;
            hashMap.put(iSkill3, new SkillEntry(iSkill3.getMaxLevel(), iSkill.getMaxLevel(), -1L));
        }
        a2.changeSkillLevel(hashMap);
    }

    public /* synthetic */ void setKillHp(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u601c\u722f\u64fc\u6bfc\u63ed\u8806"), a2, false);
    }

    public /* synthetic */ void CreateSpeedTime(String a2) {
        Object object;
        MapleCharacter a3;
        if (a3.getSpeedStartTime() <= 0L) {
            return;
        }
        String string = FixDropNullItem.ALLATORIxDEMO("\u8dc5\u5f8b\u5706\u5750");
        if (a3.Qc == 990000900) {
            string = MapleNodes.ALLATORIxDEMO("\u5140\u670d\u621c\u5261\u6700");
        }
        if (a3.Qc == 280020001) {
            a3.Qc = 280020000;
        }
        if (a3.Qc == 910530001) {
            a3.Qc = 910530000;
        }
        if (a3.Qc == 910530101) {
            a3.Qc = 910530100;
        }
        if (a3.Qc == 800040211) {
            a3.Qc = 800040210;
        }
        String string2 = a2 == null ? MapleItemInformationProvider.getInstance().getMapFullName(a3.Qc) : a2;
        int n2 = (int)((System.currentTimeMillis() - a3.sa) / 1000L);
        MapleCharacter mapleCharacter = a3;
        a3.sa = 0L;
        mapleCharacter.setEventCount(string2);
        if (mapleCharacter.getSpeedTime(string2) > (long)n2 || a3.getSpeedTime(string2) == 0L) {
            a3.setSpeedTime(string2, n2);
            object = string + ": " + string2;
            if (a2 != null) {
                object = a2;
            }
            a3.dropMessage(-1, "\u606d\u559c\u60a8\u6253\u7834\u4e86\u81ea\u5df1\u7684\u6b77\u53f2\u7d00\u9304! " + (String)object + "  \u65b0\u7d00\u9304: " + n2 + " \u79d2");
        }
        if (a3.getEventToday(string2) < (long)n2) {
            String string3 = string2;
            a3.setEventToday(string3, n2);
            object = string + ": " + string3;
            if (a2 != null) {
                object = a2;
            }
            a3.dropMessage(-1, "\u606d\u559c\u60a8\u6253\u7834\u4e86\u81ea\u5df1\u7684\u4eca\u65e5\u7d00\u9304! " + (String)object + "  \u65b0\u7d00\u9304: " + n2 + " \u79d2");
        }
    }

    public /* synthetic */ void setLoggedIn(boolean a2) {
        a.I = a2;
    }

    public /* synthetic */ int getRunningStack() {
        MapleCharacter a2;
        return a2.Y;
    }

    public /* synthetic */ MapleBuffStatValueHolder getBuffStatValueHolder(MapleBuffStat a2, int a3) {
        MapleCharacter a4;
        if ((a2 = a4.kb.get(a2)) != null) {
            if (((MapleBuffStatValueHolder)a2).effect.getSourceId() == a3) {
                return a2;
            }
            return null;
        }
        return null;
    }

    public /* synthetic */ void setHasSummon(boolean a2) {
        a.Od = a2;
    }

    public /* synthetic */ boolean getAntiKS() {
        MapleCharacter a2;
        return a2.d;
    }

    public /* synthetic */ int getTotalRep() {
        MapleCharacter a2;
        return a2.cA;
    }

    public /* synthetic */ boolean checkUsingMoveskillTime() {
        boolean bl;
        MapleCharacter a2;
        boolean bl2 = a2.g > 0L;
        boolean bl3 = bl = a2.g + 2500L < System.currentTimeMillis();
        if (!bl2) {
            return bl2;
        }
        return !bl2 || !bl;
    }

    public /* synthetic */ void controlMonster(MapleMonster a2, boolean a3) {
        MapleCharacter a4;
        if (a4.Hc) {
            return;
        }
        a2.setController(a4);
        a4.CC.add(a2);
        a4.Cb.sendPacket(MobPacket.controlMonster(a2, false, a3));
        if (GameSetConstants.MAPLE_VERSION >= 134) {
            a2.sendStatus(a4.Cb);
        }
    }

    public /* synthetic */ void setExtractor(MapleExtractor a2) {
        MapleCharacter a3;
        a3.removeExtractor();
        a3.Mc = a2;
    }

    public /* synthetic */ void setCanClone(boolean a2) {
        a.qB = a2;
    }

    public /* synthetic */ void updateShadowKillCount() {
        MapleCharacter a2;
        if (a2.getBuffedValue(MapleBuffStat.KILLING_POINT) != null) {
            MapleCharacter mapleCharacter = a2;
            a2.Cb.sendPacket(JobPacket.ShadowerPacket.giveKilling(mapleCharacter.getShadowKillCount()));
            MapleCharacter mapleCharacter2 = a2;
            mapleCharacter.getMap().broadcastMessage(mapleCharacter2, JobPacket.ShadowerPacket.giveKilling(a2.getId(), mapleCharacter2.getShadowKillCount()), false);
        }
    }

    public /* synthetic */ void setAutoMPPercent(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u81e4\u52f9\u88d2\u9b78\u6bda\u4fa7"), a2, false);
    }

    public /* synthetic */ void mobKilled(int a2, int a3) {
        MapleCharacter a4;
        if (a4.Qc == 910031000) {
            a4.Cb.sendPacket(MaplePacketCreator.updateCookieScore(678));
            return;
        }
        Iterator<MapleQuestStatus> iterator = a4.XB.values().iterator();
        block0: while (true) {
            Iterator<MapleQuestStatus> iterator2 = iterator;
            while (iterator2.hasNext()) {
                MapleQuestStatus mapleQuestStatus = iterator.next();
                if (mapleQuestStatus.getStatus() != 1) continue block0;
                if (!mapleQuestStatus.hasMobKills()) {
                    iterator2 = iterator;
                    continue;
                }
                if (!mapleQuestStatus.mobKilled(a2, a3)) continue block0;
                MapleQuestStatus mapleQuestStatus2 = mapleQuestStatus;
                a4.Cb.sendPacket(MaplePacketCreator.updateQuestMobKills(mapleQuestStatus2));
                if (mapleQuestStatus2.getQuest().canComplete(a4, null)) {
                    a4.Cb.sendPacket(MaplePacketCreator.getShowQuestCompletion(mapleQuestStatus.getQuest().getId()));
                }
                a4.zb = true;
                continue block0;
            }
            break;
        }
    }

    public /* synthetic */ void setItemQuestItemId(int a2) {
        a.fB = a2;
    }

    public /* synthetic */ void makeDragon() {
        MapleCharacter a2;
        a2.PB = new MapleDragon(a2);
        a2.rC.broadcastMessage(MaplePacketCreator.spawnDragon(a2.PB));
    }

    public /* synthetic */ void changeLuminousMode(int a222) {
        MapleCharacter mapleCharacter;
        MapleCharacter a3;
        boolean bl = a222 == 20040220 || a222 == 20040219;
        boolean bl2 = a222 == 20040217;
        boolean bl3 = a222 == 20040216;
        final MapleCharacter mapleCharacter2 = a3;
        int n2 = 0;
        if (bl || !bl2 && !bl3) {
            return;
        }
        MapleCharacter mapleCharacter3 = a3;
        mapleCharacter3.dispelBuff(a222);
        if (mapleCharacter3.m == 1) {
            n2 = 20040220;
            mapleCharacter = a3;
        } else {
            n2 = 20040219;
            mapleCharacter = a3;
        }
        mapleCharacter.removeCooldown(27111303);
        MapleCharacter mapleCharacter4 = a3;
        MapleCharacter mapleCharacter5 = a3;
        mapleCharacter5.removeCooldown(27121303);
        mapleCharacter5.getClient().sendPacket(MaplePacketCreator.skillCooldown(27111303, 0));
        mapleCharacter5.getClient().sendPacket(MaplePacketCreator.skillCooldown(27121303, 0));
        a3.D = n2;
        MapleStatEffect a222 = SkillFactory.getSkill(n2).getEffect(a3.getTotalSkillLevel(n2));
        Object object = Collections.singletonList(new Pair<MapleBuffStat, Integer>(MapleBuffStat.LUMINOUS_GAUGE, 2));
        mapleCharacter4.Cb.sendPacket(MaplePacketCreator.giveBuff(n2, 0, object, a222, a3));
        a3.registerEffect(a222, System.currentTimeMillis(), (List<Pair<MapleBuffStat, Integer>>)object, Integer.MAX_VALUE, a3.getId());
        if (!mapleCharacter4.isHidden()) {
            MapleCharacter mapleCharacter6 = a3;
            a3.getMap().broadcastMessage(mapleCharacter6, MaplePacketCreator.giveForeignBuff(mapleCharacter6, object, a222), false);
        }
        a222.applyTo(a3);
        a3.equipChanged();
        int a222 = 10000;
        if (a3.getTotalSkillLevel(27120008) > 0) {
            object = SkillFactory.getSkill(27120008).getEffect(a3.getTotalSkillLevel(27120008));
            a222 += ((MapleStatEffect)object).getDuration();
        }
        Timer.BuffTimer.getInstance().schedule(new Runnable(){
            {
                8 a3;
            }

            @Override
            public /* synthetic */ void run() {
                8 v2;
                8 a2;
                8 v0 = a2;
                a2.MapleCharacter.this.dispelBuff(v0.MapleCharacter.this.D);
                if (v0.MapleCharacter.this.m == 1) {
                    8 v1 = a2;
                    v2 = v1;
                    v1.MapleCharacter.this.D = 20040216;
                } else {
                    8 v3 = a2;
                    v2 = v3;
                    v3.MapleCharacter.this.D = 20040217;
                }
                8 v4 = a2;
                MapleStatEffect mapleStatEffect = SkillFactory.getSkill(v2.MapleCharacter.this.D).getEffect(v4.MapleCharacter.this.getTotalSkillLevel(v4.MapleCharacter.this.D));
                List<Pair<MapleBuffStat, Integer>> list = Collections.singletonList(new Pair<MapleBuffStat, Integer>(MapleBuffStat.LUMINOUS_GAUGE, 1));
                8 v5 = a2;
                8 v6 = a2;
                v5.MapleCharacter.this.Cb.sendPacket(MaplePacketCreator.giveBuff(v6.MapleCharacter.this.D, 0, list, mapleStatEffect, a2.mapleCharacter2));
                v5.MapleCharacter.this.registerEffect(mapleStatEffect, System.currentTimeMillis(), list, Integer.MAX_VALUE, a2.MapleCharacter.this.getId());
                if (!v6.MapleCharacter.this.isHidden()) {
                    8 v7 = a2;
                    a2.MapleCharacter.this.getMap().broadcastMessage(v7.mapleCharacter2, MaplePacketCreator.giveForeignBuff(v7.mapleCharacter2, list, mapleStatEffect), false);
                }
                mapleStatEffect.applyTo(a2.mapleCharacter2);
            }
        }, a222);
    }

    public /* synthetic */ void setSecondSkinColor(byte a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u007fkOaBjs]GgB"), a2);
    }

    public /* synthetic */ int getCData(int a22) {
        MapleCharacter a3;
        MapleQuestStatus a22 = a3.getQuestNAdd(MapleQuest.getInstance(a22));
        if (a22.getCustomData() != null) {
            return Integer.parseInt(a22.getCustomData());
        }
        return 0;
    }

    public /* synthetic */ void serChangeQuest(boolean a2) {
        a.zb = a2;
    }

    public final /* synthetic */ Integer getBuffedSkill_X(MapleBuffStat a2) {
        MapleCharacter a3;
        if ((a2 = a3.kb.get(a2)) == null) {
            return null;
        }
        return ((MapleBuffStatValueHolder)a2).effect.getX();
    }

    public /* synthetic */ void setmsg_HiredMerchant(boolean a2) {
        a.wb = a2;
    }

    public /* synthetic */ boolean getKillMob_Temp_using() {
        MapleCharacter a2;
        return a2.o;
    }

    public /* synthetic */ void addVisibleMapObject(MapleMapObject a2) {
        MapleCharacter a3;
        if (a3.Hc) {
            return;
        }
        a3.AA.writeLock().lock();
        try {
            a3.MB.add(a2);
            return;
        }
        finally {
            a3.AA.writeLock().unlock();
        }
    }

    public /* synthetic */ int getLinkMid() {
        MapleCharacter a2;
        return a2.fd;
    }

    public /* synthetic */ boolean isAdventurer() {
        MapleCharacter a2;
        return a2.ob >= 0 && a2.ob < 1000;
    }

    public /* synthetic */ void RemoveKeybindingBySkillid(int a2) {
        MapleCharacter a3;
        int n2 = 0;
        for (Map.Entry<Integer, Pair<Byte, Integer>> entry : a3.Pd.Layout().entrySet()) {
            if (a2 != entry.getValue().getRight()) continue;
            n2 = entry.getKey();
        }
        if (n2 != 0) {
            a3.Pd.Layout().remove(n2);
        }
    }

    public /* synthetic */ void addCData(int a22, int a3) {
        MapleCharacter a4;
        MapleQuestStatus a22 = a4.Cb.getPlayer().getQuestNAdd(MapleQuest.getInstance(a22));
        if (a22.getCustomData() != null) {
            MapleQuestStatus mapleQuestStatus = a22;
            mapleQuestStatus.setCustomData(String.valueOf(a3 + Integer.parseInt(mapleQuestStatus.getCustomData())));
            a4.zb = true;
            return;
        }
        a22.setCustomData(String.valueOf(a3));
        a4.zb = true;
    }

    public /* synthetic */ void handleMapKillAll() {
        if (GameSetConstants.MAPLE_VERSION >= 151) {
            MapleCharacter a2;
            switch (a2.Qc) {
                case 940001010: {
                    while (false) {
                    }
                    if (a2.getMap().getMobsSize() >= 1) break;
                    Map<Pair<Integer, MapleClient>, MapleNPC> map = NPCConversationManager.npcRequestController;
                    Integer n2 = 0;
                    for (Map.Entry entry : map.entrySet()) {
                        if (((MapleNPC)entry.getValue()).getId() != 3000107 || ((Pair)entry.getKey()).right != a2.getClient()) continue;
                        n2 = (Integer)((Pair)entry.getKey()).left;
                        break;
                    }
                    NPCConversationManager.npcRequestController.remove(new Pair<Integer, MapleClient>(n2, a2.getClient()));
                    a2.changeMap(940001050);
                    return;
                }
                case 940011110: {
                    if (a2.getJob() != 6500 || a2.getMap().getMobsSize() > 0) break;
                    a2.changeMap(940011150);
                }
            }
        }
    }

    public /* synthetic */ List<SpecialBuffInfo> getSpecialBuffInfo() {
        MapleCharacter a2;
        return a2.p;
    }

    /*
     * WARNING - Removed back jump from a try to a catch block - possible behaviour change.
     * Loose catch block
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ void loadCharacterJson() {
        PreparedStatement preparedStatement;
        Map<String, Long> map;
        ResultSet resultSet;
        String string;
        PreparedStatement preparedStatement2;
        DruidPooledConnection druidPooledConnection;
        MapleCharacter a2;
        block28: {
            block26: {
                if (!a2.ga.isEmpty()) return;
                if (!a2.Ca.isEmpty()) return;
                try {
                    druidPooledConnection = DBConPool.getInstance().getDataSource().getConnection();
                    try {
                        preparedStatement2 = null;
                        string = MapleNodes.ALLATORIxDEMO("_k@kOz\u0006h^aA.Of^QF}C`\fyDk^k\fgH.\u0011.\u0013");
                        preparedStatement2 = druidPooledConnection.prepareStatement(string);
                        preparedStatement2.setInt(1, a2.XC);
                        resultSet = preparedStatement2.executeQuery();
                        try {
                            while (resultSet.next()) {
                                map = JsonMapConverter.JsonToMapLong(resultSet.getString(FixDropNullItem.ALLATORIxDEMO("\\5Y(")));
                                for (Map.Entry<String, Long> entry : map.entrySet()) {
                                    if (entry.getKey().contains(MapleNodes.ALLATORIxDEMO("\u65eb\u8a24")) && !entry.getKey().contains(FileoutputUtil.NowDay()) && !entry.getKey().contains(FileoutputUtil.YesturdayDay())) continue;
                                    a2.ga.put(entry.getKey(), entry.getValue());
                                }
                            }
                        }
                        catch (Throwable throwable) {
                            Throwable throwable2;
                            if (resultSet != null) {
                                try {
                                    resultSet.close();
                                    throwable2 = throwable;
                                    throw throwable2;
                                }
                                catch (Throwable throwable3) {
                                    throwable.addSuppressed(throwable3);
                                }
                            }
                            throwable2 = throwable;
                            throw throwable2;
                        }
                    }
                    catch (Throwable throwable) {
                        Throwable throwable4;
                        if (druidPooledConnection != null) {
                            try {
                                druidPooledConnection.close();
                                throwable4 = throwable;
                                throw throwable4;
                            }
                            catch (Throwable throwable5) {
                                throwable.addSuppressed(throwable5);
                            }
                        }
                        throwable4 = throwable;
                        throw throwable4;
                    }
                }
                catch (SQLException sQLException) {
                    System.out.println(sQLException);
                    FilePrinter.printError(MapleNodes.ALLATORIxDEMO("KkXhY`OzEaB XvX"), sQLException);
                    return;
                }
                {
                    resultSet.close();
                    if (resultSet == null) break block26;
                    preparedStatement = preparedStatement2;
                }
                resultSet.close();
                break block28;
            }
            preparedStatement = preparedStatement2;
        }
        preparedStatement.close();
        string = FixDropNullItem.ALLATORIxDEMO("5S*S%BlP4Y+\u0016'U%i,E)XfA.S4Sf_\"\u0016{\u0016y");
        preparedStatement2 = druidPooledConnection.prepareStatement(string);
        preparedStatement2.setInt(1, a2.nC);
        resultSet = preparedStatement2.executeQuery();
        while (resultSet.next()) {
            map = JsonMapConverter.JsonToMapLong(resultSet.getString(MapleNodes.ALLATORIxDEMO("d_aB")));
            for (Map.Entry<String, Long> entry : map.entrySet()) {
                if (entry.getKey().contains(FixDropNullItem.ALLATORIxDEMO("\u65d3\u8a4e")) && !entry.getKey().contains(FileoutputUtil.NowDay()) && !entry.getKey().contains(FileoutputUtil.YesturdayDay())) continue;
                a2.Ca.put(entry.getKey(), entry.getValue());
            }
        }
        {
            PreparedStatement preparedStatement3;
            block29: {
                block27: {
                    catch (Throwable throwable) {
                        Throwable throwable6;
                        if (resultSet != null) {
                            try {
                                resultSet.close();
                                throwable6 = throwable;
                                throw throwable6;
                            }
                            catch (Throwable throwable7) {
                                throwable.addSuppressed(throwable7);
                            }
                        }
                        throwable6 = throwable;
                        throw throwable6;
                    }
                    {
                        resultSet.close();
                        if (resultSet == null) break block27;
                        preparedStatement3 = preparedStatement2;
                    }
                    resultSet.close();
                    break block29;
                }
                preparedStatement3 = preparedStatement2;
            }
            preparedStatement3.close();
            if (druidPooledConnection == null) return;
        }
        druidPooledConnection.close();
    }

    public /* synthetic */ void setBuff(boolean a2) {
        a.oa = a2;
    }

    public /* synthetic */ void setHonorLevel(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6998\u8b3b\u7b7f\u7d5c"), a2, false);
    }

    public /* synthetic */ int getEquipDamage() {
        MapleCharacter a2;
        return a2.GB.EquipDamage;
    }

    public /* synthetic */ int getRockSize() {
        int n2;
        int n3 = 0;
        int n4 = n2 = 0;
        while (n4 < 10) {
            MapleCharacter a2;
            if (a2.DB[n2] != 999999999) {
                ++n3;
            }
            n4 = ++n2;
        }
        return n3;
    }

    public final /* synthetic */ int getFallCounter() {
        MapleCharacter a2;
        return a2.HA;
    }

    public /* synthetic */ MapleAndroid getAndroid() {
        MapleCharacter a2;
        return a2.Da;
    }

    public /* synthetic */ long getEventToday(String a2) {
        MapleCharacter a3;
        return a3.getCharacterSetToday(a2, false);
    }

    public /* synthetic */ void spawnPet(byte a2, boolean a3) {
        MapleCharacter a4;
        a4.spawnPet(a2, a3, true);
    }

    public /* synthetic */ void doDragonBlood() {
        MapleCharacter a2;
        MapleStatEffect mapleStatEffect = a2.getStatForBuff(MapleBuffStat.DRAGONBLOOD);
        if (mapleStatEffect == null) {
            a2.Ad = 0L;
            return;
        }
        int n2 = 5;
        if (GameSetConstants.MAPLE_VERSION >= 134) {
            n2 = 7;
        }
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.E();
        if (mapleCharacter.GB.getHp() - mapleStatEffect.getX() <= 1) {
            a2.cancelEffectFromBuffStat(MapleBuffStat.DRAGONBLOOD);
            return;
        }
        a2.addHP(-mapleStatEffect.getX());
        if (GameSetConstants.MAPLE_VERSION >= 134) {
            MapleCharacter mapleCharacter2 = a2;
            mapleCharacter2.Cb.sendPacket(MaplePacketCreator.showOwnBuffEffect(mapleStatEffect.getSourceId(), 7, a2.getLevel(), mapleStatEffect.getLevel()));
            if (mapleCharacter2.getBuffedValue(MapleBuffStat.MORPH) == null) {
                MapleCharacter mapleCharacter3 = a2;
                a2.rC.broadcastMessage(mapleCharacter3, MaplePacketCreator.showBuffEffect(mapleCharacter3.getId(), mapleStatEffect.getSourceId(), 7, a2.getLevel(), mapleStatEffect.getLevel()), false);
                return;
            }
        } else {
            MapleCharacter mapleCharacter4 = a2;
            mapleCharacter4.Cb.sendPacket(MaplePacketCreator.showOwnBuffEffect(mapleStatEffect.getSourceId(), n2, a2.getLevel(), mapleStatEffect.getLevel()));
            if (mapleCharacter4.getBuffedValue(MapleBuffStat.MORPH) == null) {
                MapleCharacter mapleCharacter5 = a2;
                a2.rC.broadcastMessage(mapleCharacter5, MaplePacketCreator.showBuffEffect(mapleCharacter5.getId(), mapleStatEffect.getSourceId(), n2, a2.getLevel(), mapleStatEffect.getLevel()), false);
            }
        }
    }

    public /* synthetic */ void endStorageMsg(String a2) {
        MapleCharacter a3;
        if (GameSetConstants.LOG_STORAGE) {
            FileoutputUtil.logToFile(MapleNodes.ALLATORIxDEMO("bCi_!hoXo\u0003\u5007\u5e87\u7d0e\u9328 XvX"), a3.uB);
        }
        if (a3.Cb.isMonitored()) {
            FileoutputUtil.logToFile("logs/Hack/\u5371\u96aa\u5e33\u865f\u64cd\u4f5c/" + a3.getName() + "/\u5404\u5f0f\u64cd\u4f5c.txt", a3.uB);
        }
        a3.uB = "";
    }

    public /* synthetic */ void setLinkMid(int a2, int a3) {
        MapleCharacter a4;
        a4.Ka.put(a2, a3);
    }

    public /* synthetic */ void addEmptyTradeMsg(String a2) {
        MapleCharacter a3;
        a3.tC = a3.tC + a2;
    }

    public /* synthetic */ void updatePetAuto() {
        MapleCharacter a2;
        if (a2.getIntNoRecord(122221) > 0) {
            a2.Cb.sendPacket(MaplePacketCreator.petAutoHP(a2.getIntRecord(122221)));
        }
        if (a2.getIntNoRecord(122222) > 0) {
            a2.Cb.sendPacket(MaplePacketCreator.petAutoMP(a2.getIntRecord(122222)));
        }
    }

    public /* synthetic */ void gainAp(short a2) {
        MapleCharacter mapleCharacter;
        MapleCharacter a3;
        if (a3.iA + a2 > 30000) {
            mapleCharacter = a3;
            a3.iA = (short)32767;
        } else {
            MapleCharacter mapleCharacter2 = a3;
            mapleCharacter = mapleCharacter2;
            mapleCharacter2.iA = (short)(mapleCharacter2.iA + a2);
        }
        mapleCharacter.updateSingleStat(MapleStat.AVAILABLEAP, a3.iA);
    }

    public /* synthetic */ void setEventToday(String a2, int a3) {
        MapleCharacter a4;
        a4.setCharacterSetToday(a2, a3, false);
    }

    public /* synthetic */ List<SpecialBuffInfo> getStackBuffInfo(MapleBuffStat a2) {
        MapleCharacter a3;
        ArrayList<SpecialBuffInfo> arrayList = new ArrayList<SpecialBuffInfo>();
        for (SpecialBuffInfo specialBuffInfo : a3.p) {
            if (specialBuffInfo.getBuffStat() != a2) continue;
            arrayList.add(specialBuffInfo);
        }
        return arrayList;
    }

    /*
     * WARNING - Removed try catching itself - possible behaviour change.
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    private /* synthetic */ void ALLATORIxDEMO(List<MapleBuffStat> a, MapleStatEffect a, boolean a, long a) {
        var6_5 = a.iterator();
        while (true) {
            block15: {
                if (!var6_5.hasNext()) {
                    a.cancelPlayerBuffs(a, a);
                    return;
                }
                var7_6 = var6_5.next();
                if (!a.kb.containsKey(var7_6)) continue;
                var8_7 = a.kb.get(var7_6);
                var9_10 = false;
                if ((!var8_7.effect.sameSource(a) || var8_7.startTime != a && a != -1L) && (var8_7.effect.sameSource(a) || var7_6.canStack())) ** GOTO lbl56
                if (var7_6 != MapleBuffStat.SUMMON && var7_6 != MapleBuffStat.BEHOLDER) break block15;
                var8_8 = var8_7.effect.getSourceId();
                var10_11 = new ArrayList<MapleSummon>();
                a.AA.writeLock().lock();
                try {
                    for (MapleSummon var12_14 : a.Hb) {
                        if (!(var12_14.getSkill() == var8_8 || var7_6 == MapleBuffStat.RAINING_MINES && var8_8 == 33101008 || var8_8 == 35121009 && var12_14.getSkill() == 35121011 || (var8_8 == 86 || var8_8 == 88 || var8_8 == 91) && var12_14.getSkill() == var8_8 + 999) && (var8_8 != 1085 && var8_8 != 1087 && var8_8 != 1090 && var8_8 != 1179 || var12_14.getSkill() != var8_8 - 999)) continue;
                        if (var12_14.getSkill() == 5321004) {
                            for (MapleSummon var14_16 : a.Hb) {
                                if (var14_16.getSkill() != 5320011) continue;
                                v0 = a;
                                v0.rC.broadcastMessage(MaplePacketCreator.removeSummon(var14_16, true));
                                v0.rC.removeMapObject(var14_16);
                                v0.MB.remove(var14_16);
                                var10_11.add(var14_16);
                                var9_10 = true;
                            }
                        }
                        v1 = a;
                        v1.rC.broadcastMessage(MaplePacketCreator.removeSummon(var12_14, true));
                        v1.rC.removeMapObject(var12_14);
                        v1.MB.remove(var12_14);
                        var10_11.add(var12_14);
                        var9_10 = true;
                    }
                    a.Hb.removeAll(var10_11);
                }
                catch (Exception var11_13) {
                    System.out.println("\u53d6\u6d88\u53ec\u559a\u7378\u767c\u751f\u554f\u984c, \u73a9\u5bb6: " + a.cB);
                    FileoutputUtil.printError(MapleNodes.ALLATORIxDEMO("CM~@kofM|MmXk^ XvX"), var11_13, "\u73a9\u5bb6: " + a.cB);
                }
                finally {
                    a.AA.writeLock().unlock();
                }
            }
            if (var7_6 == MapleBuffStat.DRAGONBLOOD) {
                v2 = a;
                a.Ad = 0L;
            } else {
                if (var7_6 == MapleBuffStat.HOMING_BEACON || var7_6 == MapleBuffStat.ARCANE_AIM) {
                    a.Ka.clear();
                }
lbl56:
                // 6 sources

                v2 = a;
            }
            v2.kb.remove(var7_6);
        }
    }

    public /* synthetic */ boolean isGod() {
        MapleCharacter a2;
        return a2.id >= 100;
    }

    /*
     * Loose catch block
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ boolean OfflineBanByName(String a2, String a3) {
        MapleCharacter a4;
        int n2 = 0;
        DruidPooledConnection druidPooledConnection = DBConPool.getInstance().getDataSource().getConnection();
        PreparedStatement preparedStatement = null;
        DruidPooledConnection druidPooledConnection2 = druidPooledConnection;
        Statement statement = druidPooledConnection2.createStatement();
        preparedStatement = druidPooledConnection2.prepareStatement(FixDropNullItem.ALLATORIxDEMO("E#Z#U2\u0016/RfP4Y+\u0016%^'D'U2S4EfA.S4SfX'[#\u0016{\u0016y"));
        preparedStatement.setString(1, (String)a2);
        a2 = preparedStatement.executeQuery();
        while (a2.next()) {
            n2 = a2.getInt(MapleNodes.ALLATORIxDEMO("gH"));
        }
        if (druidPooledConnection != null) {
            druidPooledConnection.close();
        }
        {
            catch (Throwable throwable) {
                try {
                    Throwable throwable2;
                    block12: {
                        if (druidPooledConnection != null) {
                            try {
                                druidPooledConnection.close();
                                throwable2 = throwable;
                                break block12;
                            }
                            catch (Throwable throwable3) {
                                throwable.addSuppressed(throwable3);
                            }
                        }
                        throwable2 = throwable;
                    }
                    throw throwable2;
                }
                catch (Exception exception) {
                    // empty catch block
                }
            }
        }
        if (n2 == 0) {
            return false;
        }
        return a4.OfflineBanById(n2, a3);
    }

    public /* synthetic */ Pair<List<MapleRing>, List<MapleRing>> getRings(boolean a2) {
        Object object;
        MapleCharacter a3;
        MapleInventory mapleInventory = a3.getInventory(MapleInventoryType.EQUIPPED);
        ArrayList<ArrayList<Item>> arrayList = mapleInventory.list();
        Serializable serializable = new ArrayList<Item>(arrayList.size());
        ArrayList<ArrayList<Item>> arrayList2 = arrayList = arrayList.iterator();
        while (arrayList2.hasNext()) {
            object = (IItem)arrayList.next();
            serializable.add((Item)object);
            arrayList2 = arrayList;
        }
        ArrayList<Item> arrayList3 = serializable;
        Collections.sort(arrayList3);
        arrayList = new ArrayList<ArrayList<Item>>();
        object = new ArrayList();
        for (Item iItem : arrayList3) {
            if (iItem.getRing() == null) continue;
            Item item2 = iItem;
            serializable = item2.getRing();
            ((MapleRing)serializable).setEquipped(true);
            if (!GameConstants.isEffectRing(item2.getItemId())) continue;
            if (a2) {
                if (GameConstants.isCrushRing(iItem.getItemId())) {
                    arrayList.add((ArrayList<Item>)serializable);
                    continue;
                }
                if (!GameConstants.isFriendshipRing(iItem.getItemId())) continue;
                object.add(serializable);
                continue;
            }
            if (arrayList.isEmpty() && GameConstants.isCrushRing(iItem.getItemId())) {
                arrayList.add((ArrayList<Item>)serializable);
                continue;
            }
            if (!object.isEmpty() || !GameConstants.isFriendshipRing(iItem.getItemId())) continue;
            object.add(serializable);
        }
        if (a2) {
            mapleInventory = a3.getInventory(MapleInventoryType.EQUIP);
            for (IItem iItem : mapleInventory.list()) {
                if (iItem.getRing() == null || !GameConstants.isEffectRing(iItem.getItemId())) continue;
                IItem iItem2 = iItem;
                serializable = iItem2.getRing();
                ((MapleRing)serializable).setEquipped(false);
                if (GameConstants.isFriendshipRing(iItem2.getItemId())) {
                    object.add(serializable);
                    continue;
                }
                if (!GameConstants.isCrushRing(iItem.getItemId())) continue;
                arrayList.add((ArrayList<Item>)serializable);
            }
        }
        Collections.sort(object, new MapleRing.RingComparator());
        Collections.sort(arrayList, new MapleRing.RingComparator());
        return new Pair(arrayList, object);
    }

    public /* synthetic */ int getmulungEnergy() {
        MapleCharacter a2;
        return a2.gc;
    }

    public /* synthetic */ int getSkillLevel(ISkill a2) {
        MapleCharacter a3;
        if (a2 == null) {
            return 0;
        }
        if ((a2 = a3.sB.get(a2)) == null || ((SkillEntry)a2).skillevel <= 0) {
            return 0;
        }
        return ((SkillEntry)a2).skillevel;
    }

    public /* synthetic */ void cancelBuffStats(List<MapleBuffStat> a2) {
        MapleCharacter a3;
        a3.ALLATORIxDEMO(a2);
        a3.ALLATORIxDEMO(a2);
    }

    public /* synthetic */ void setHair_Force(int a2) {
        MapleCharacter a3;
        if (World.Find.findChannel(a3.cB) <= 0) {
            a3.UpdateCharacter(MapleNodes.ALLATORIxDEMO("fMg^"), a2);
            return;
        }
        a2 = a3.zc;
    }

    public /* synthetic */ boolean isInBlockedMap() {
        MapleCharacter a2;
        if (!a2.isAlive() || a2.getPyramidSubway() != null || a2.getMap().getSquadByMap() != null || a2.getEventInstance() != null || a2.getMap().getEMByMap() != null) {
            return true;
        }
        return a2.getMapId() >= 680000210 && a2.getMapId() <= 680000502 || a2.getMapId() / 10000 == 92502 && a2.getMapId() >= 925020100 || a2.getMapId() / 10000 == 92503 || a2.getMapId() == 180000001;
    }

    public /* synthetic */ void changeSkillLevel_Skip(int a2, byte a3, byte a4) {
        MapleCharacter a5;
        a5.changeSkillLevel_Skip(a2, a3, a4, false);
    }

    public /* synthetic */ WeakReference<MapleCharacter>[] getClones() {
        MapleCharacter a2;
        return a2.qb;
    }

    public /* synthetic */ void setmsg_MobVac(boolean a2) {
        a.Rc = a2;
    }

    public /* synthetic */ void divorce(boolean a2) {
        MapleCharacter a3;
        if (a2) {
            MapleCharacter mapleCharacter = a3;
            a3.getClient().sendPacket(MaplePacketCreator.sendEngagement((byte)14, 0, mapleCharacter, mapleCharacter));
            return;
        }
        if (a3.Jd > 0 && (a2 = a3.Cb.getChannelServer().getPlayerStorage().getCharacterById(a3.Jd)) != null) {
            a2.getClient().sendPacket(MaplePacketCreator.sendEngagement((byte)14, 0, a2, a3));
            a3.getClient().sendPacket(MaplePacketCreator.sendEngagement((byte)14, 0, a2, a3));
        }
    }

    public /* synthetic */ long getNextConsume() {
        MapleCharacter a2;
        return a2.ac;
    }

    public /* synthetic */ int getFishGameTime() {
        MapleCharacter a2;
        return a2.Ja;
    }

    public /* synthetic */ void startMonsterCarnival(int a2, int a3) {
        MapleCharacter a4;
        a4.Cb.sendPacket(MonsterCarnivalPacket.startMonsterCarnival(a4, a2, a3));
    }

    public /* synthetic */ void startInfinity() {
        a.Z = System.currentTimeMillis();
    }

    public /* synthetic */ boolean getDebugMessage() {
        MapleCharacter a2;
        return a2.NC;
    }

    public /* synthetic */ void fakeRelog() {
        MapleMap mapleMap;
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        a2.Cb.sendPacket(MaplePacketCreator.getCharInfo(mapleCharacter));
        MapleMap mapleMap2 = mapleMap = mapleCharacter.getMap();
        MapleCharacter mapleCharacter2 = a2;
        mapleMap.setCheckStates(false);
        mapleMap.removePlayer(mapleCharacter2);
        mapleMap2.addPlayer(mapleCharacter2);
        mapleMap2.setCheckStates(true);
    }

    public /* synthetic */ void startMapTimeLimitTask(int a2, final int a3) {
        MapleCharacter a4;
        a4.Cb.sendPacket(MaplePacketCreator.getClock(a2));
        a4.UB = Timer.MapTimer.getInstance().register(new Runnable(){

            @Override
            public /* synthetic */ void run() {
                3 a2;
                3 v0 = a2;
                v0.MapleCharacter.this.changeMap(v0.a3);
            }
            {
                3 a32;
            }
        }, a2 *= 1000, a2);
    }

    public /* synthetic */ boolean canCheckCopyItem() {
        MapleCharacter a2;
        if (a2.md + 300000L > System.currentTimeMillis()) {
            return false;
        }
        a2.md = System.currentTimeMillis();
        return true;
    }

    public /* synthetic */ int getexpression() {
        MapleCharacter a2;
        return a2.xc;
    }

    public /* synthetic */ boolean skillisCooling(int a2) {
        MapleCharacter a3;
        return a3.kA.containsKey(a2);
    }

    public /* synthetic */ long getPetVacTime() {
        MapleCharacter a2;
        return a2.getCharacterSetTemp(FixDropNullItem.ALLATORIxDEMO("\u5bc3\u547e\u6674\u95d5"));
    }

    public /* synthetic */ List<Point> getSkillPosition() {
        MapleCharacter a2;
        return a2.C;
    }

    public final /* synthetic */ boolean canHold(int a2, int a3) {
        MapleCharacter a4;
        return MapleInventoryManipulator.checkSpace(a4.Cb, a2, a3, "");
    }

    public /* synthetic */ MapleMonsterPet getMonsterPet() {
        MapleCharacter a2;
        return a2.ka;
    }

    public /* synthetic */ void setLuminousState(int a2) {
        a.D = a2;
    }

    public /* synthetic */ void doBerserk() {
        MapleCharacter a2;
        if (!a2.canBerserk()) {
            return;
        }
        Object object = SkillFactory.getSkill(1320006);
        int n2 = a2.getSkillLevel((ISkill)object);
        if (n2 >= 1 && a2.rC != null) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.yB = System.currentTimeMillis();
            object = object.getEffect(n2);
            mapleCharacter.GB.Berserk = (double)a2.GB.getHp() <= (double)a2.GB.getCurrentMaxHp() * ((double)((MapleStatEffect)object).getX() / 100.0);
            a2.Cb.sendPacket(MaplePacketCreator.showOwnBuffEffect(1320006, 1, a2.getLevel(), n2, (byte)(a2.GB.Berserk ? 1 : 0)));
            if (a2.getBuffedValue(MapleBuffStat.MORPH) == null) {
                MapleCharacter mapleCharacter2 = a2;
                a2.rC.broadcastMessage(mapleCharacter2, MaplePacketCreator.showBuffEffect(mapleCharacter2.getId(), 1320006, 1, a2.getLevel(), n2, (byte)(a2.GB.Berserk ? 1 : 0)), false);
                return;
            }
        } else {
            a2.yB = -1L;
        }
    }

    public final /* synthetic */ void expirationTask(boolean a2) {
        MapleCharacter a3;
        a3.expirationTask(false, a2);
    }

    public /* synthetic */ void forceReAddItem(IItem a2, MapleInventoryType a3) {
        MapleCharacter a4;
        MapleInventoryType mapleInventoryType = a3;
        a4.forceReAddItem_NoUpdate(a2, mapleInventoryType);
        if (mapleInventoryType == MapleInventoryType.EQUIP) {
            a4.forceReAddItem_Equip(a2, a3);
        }
        if (a3 != MapleInventoryType.UNDEFINED) {
            a4.Cb.sendPacket(MaplePacketCreator.modifyInventory(false, new ModifyInventory(1, a2)));
        }
    }

    public /* synthetic */ String getChalkboard() {
        MapleCharacter a2;
        return a2.lb;
    }

    public /* synthetic */ void setSidekick(MapleSidekick a2) {
        a.Ia = a2;
    }

    public /* synthetic */ int getProfessionLevel(int a2) {
        MapleCharacter a3;
        if ((a2 = a3.getSkillLevel(a2)) <= 0) {
            return 0;
        }
        return a2 >>> 24 & 0xFF;
    }

    public /* synthetic */ boolean isHiddenChatCanSee() {
        MapleCharacter a2;
        return a2.Fd;
    }

    public final /* synthetic */ MapleInventory[] getInventorys() {
        MapleCharacter a2;
        return a2.LA;
    }

    public /* synthetic */ void addDonateMeso(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        long l2 = mapleCharacter.getDonateMeso() + (long)a2;
        mapleCharacter.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6366\u733d\u6965\u5e25"), l2, false);
    }

    public /* synthetic */ int[] getRemainingHSps() {
        MapleCharacter a2;
        return a2.yb;
    }

    public /* synthetic */ void updatePartyMemberHP() {
        MapleCharacter a2;
        if (a2.ed != null) {
            MapleCharacter mapleCharacter = a2;
            int n2 = mapleCharacter.Cb.getChannel();
            for (MaplePartyCharacter maplePartyCharacter : mapleCharacter.ed.getMembers()) {
                MapleCharacter mapleCharacter2;
                if (maplePartyCharacter.getMapid() != a2.getMapId() || maplePartyCharacter.getChannel() != n2 || (mapleCharacter2 = a2.Cb.getChannelServer().getPlayerStorage().getCharacterByName(maplePartyCharacter.getName())) == null) continue;
                mapleCharacter2.getClient().sendPacket(MaplePacketCreator.updatePartyMemberHP(a2.getId(), a2.GB.getHp(), a2.GB.getCurrentMaxHp()));
            }
        }
    }

    public /* synthetic */ void cancelEffectFromBuffStat(MapleBuffStat a2) {
        MapleCharacter a3;
        boolean bl = a3.kb.get(a2) != null;
        MapleStatEffect mapleStatEffect = null;
        if (bl) {
            mapleStatEffect = a3.kb.get((Object)a2).effect;
        }
        if (!bl) {
            for (SpecialBuffInfo specialBuffInfo : a3.p) {
                if (specialBuffInfo.getBuffStat() != a2) continue;
                mapleStatEffect = specialBuffInfo.getBuffStatValueHolder().effect;
                bl = true;
            }
        }
        if (bl) {
            a3.cancelEffect(mapleStatEffect, false, -1L);
        }
    }

    public /* synthetic */ void updateInfinityTime() {
        MapleCharacter a2;
        a2.updateInfinityTime(System.currentTimeMillis());
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    public /* synthetic */ void gainExp(int a, boolean a, boolean a, boolean a) {
        try {
            v0 = a;
            var5_5 = v0.getExp();
            var6_7 = GameConstants.getExpNeededForLevel(v0.IC);
            if (a > 0) {
                a.GB.checkEquipLevels(a, a);
            }
            if (a.IC >= 200 || GameConstants.isKOC(a.ob) && a.IC >= 120) {
                if (a.RC + a > var6_7) {
                    v1 = a;
                    a.setExp(var6_7);
                } else {
                    a.RC += a;
                    v1 = a;
                }
            } else {
                var7_8 = false;
                if (a.RC + a >= var6_7 || a.RC >= var6_7) {
                    var8_9 = 0;
                    if ((long)a.RC + (long)a < 0x7FFFFFFFL) {
                        a.RC += a;
                    }
                    while (a.RC >= var6_7) {
                        v2 = a;
                        v2.levelUp();
                        var7_8 = true;
                        var6_7 = GameConstants.getExpNeededForLevel(v2.IC);
                        if (var8_9 == 0) continue;
                    }
                    var8_9 = 200;
                    if (MapleJob.is\u7687\u5bb6\u9a0e\u58eb\u5718(a.ob)) {
                        var8_9 = GameSetConstants.MAXLEVEL_KOC;
                        v3 = a;
                    } else {
                        var8_9 = GameSetConstants.MAXLEVEL;
                        v3 = a;
                    }
                    if (v3.IC >= var8_9) {
                        a.setExp(0);
                    } else {
                        v4 = a;
                        var6_7 = GameConstants.getExpNeededForLevel(v4.IC);
                        if (v4.RC >= var6_7) {
                            a.setExp(var6_7);
                        }
                    }
                } else {
                    a.RC += a;
                }
                if (a > 0) {
                    a.familyRep(var5_5, var6_7, var7_8);
                }
                v1 = a;
            }
            if (v1 == 0) return;
            if (a.RC >= 0) ** GOTO lbl55
            if (a > 0) {
                v5 = a;
                v6 = v5;
                v5.setExp(var6_7);
            } else {
                if (a < 0) {
                    a.setExp(0);
                }
lbl55:
                // 4 sources

                v6 = a;
            }
            v6.updateSingleStat(MapleStat.EXP, a.getExp());
            if (a == false) return;
            a.Cb.sendPacket(MaplePacketCreator.GainEXP_Others(a, a, a));
            return;
        }
        catch (Exception var5_6) {
            var5_6.printStackTrace();
            FilePrinter.printError(FixDropNullItem.ALLATORIxDEMO("{'F*S\u0005^'D'U2S4\u00182N2"), var5_6);
        }
    }

    public /* synthetic */ void setName_Force(String a2) {
        MapleCharacter a3;
        if (World.Find.findChannel(a3.cB) <= 0) {
            a3.UpdateCharacterString(MapleNodes.ALLATORIxDEMO("`McI"), a2);
            return;
        }
        a3.cB = a2;
    }

    public final /* synthetic */ MapleQuestStatus getQuestRemove(int a2) {
        MapleCharacter a3;
        a3.zb = true;
        return a3.XB.remove(MapleQuest.getInstance(a2));
    }

    public /* synthetic */ boolean getGashaponMega() {
        MapleCharacter a2;
        return a2.fc;
    }

    public /* synthetic */ void setGuildId(int a2) {
        MapleCharacter a3;
        a3.RA = a2;
        if (a3.RA > 0) {
            if (a3.Rb == null) {
                MapleCharacter mapleCharacter = a3;
                a3.Rb = new MapleGuildCharacter(a3);
                return;
            }
            MapleCharacter mapleCharacter = a3;
            mapleCharacter.Rb.setGuildId(mapleCharacter.RA);
            return;
        }
        a3.Rb = null;
    }

    public final /* synthetic */ byte getPetIndex(int a2) {
        MapleCharacter a3;
        for (MaplePet maplePet : a3.getSummonedPets()) {
            if (maplePet.getUniqueId() != a2) continue;
            return (byte)Math.max(-1, maplePet.getSummonedValue() - 1);
        }
        return -1;
    }

    public /* synthetic */ void setBeanResult(boolean a2) {
        a.BA = a2;
    }

    public /* synthetic */ int getAcLog(String a2) {
        MapleCharacter a3;
        a2 = "\u65e5\u8a08" + FileoutputUtil.NowDay() + (String)a2;
        return (int)a3.getCharacterSet((String)a2, true);
    }

    public /* synthetic */ void selectExpChair() {
        MapleCharacter a2;
        int n2 = a2.getExpChairSelect();
        if (n2 != 0) {
            MapleCharacter mapleCharacter = a2;
            int n3 = mapleCharacter.getChairExp(n2);
            IItem iItem = mapleCharacter.getInventory(MapleInventoryType.SETUP).findByUniqueId(n2);
            if (iItem != null) {
                a2.getClient().sendPacket(MaplePacketCreator.selectExpChair(iItem.getItemId(), n2, n3, true));
            }
        }
    }

    public /* synthetic */ void familyRep(int a2, int a3, boolean a4) {
        MapleCharacter a5;
        if (a5.JC != null) {
            a2 = a2 / (a3 /= 100) + a5.getExp() / a3;
            if (a4) {
                a2 = 100 - a2 + a5.IC / 10;
            }
            if (a2 > 0 && (a3 = World.Family.setRep(a5.JC.getFamilyId(), a5.JC.getSeniorId(), a2, a5.IC)) > 0) {
                World.Family.setRep(a5.JC.getFamilyId(), a3, a2 / 10, a5.IC);
            }
        }
    }

    public /* synthetic */ boolean isGuildPvPMap() {
        MapleCharacter a2;
        return MapConstants.isGuildPvPMap(a2.getMapId());
    }

    public /* synthetic */ void sendImp() {
        MapleCharacter a2;
        int n2;
        int n3 = n2 = 0;
        while (n3 < a2.uc.length) {
            if (a2.uc[n2] != null) {
                MapleCharacter mapleCharacter = a2;
                mapleCharacter.Cb.sendPacket(MaplePacketCreator.updateImp(mapleCharacter.uc[n2], MapleImp.ImpFlag.SUMMONED.getValue(), n2, true));
            }
            n3 = ++n2;
        }
    }

    public final /* synthetic */ MapleQuestStatus getQuestNAdd(MapleQuest a2) {
        MapleCharacter a3;
        if (!a3.XB.containsKey(a2)) {
            MapleQuestStatus mapleQuestStatus;
            MapleQuestStatus mapleQuestStatus2 = mapleQuestStatus = new MapleQuestStatus(a2, 0);
            a3.XB.put(a2, mapleQuestStatus2);
            return mapleQuestStatus2;
        }
        a3.zb = true;
        return a3.XB.get(a2);
    }

    public /* synthetic */ void addSell(IItem a2) {
        MapleCharacter a3;
        a3.ea.add(a2);
    }

    public /* synthetic */ void makeMFC(int a22, int a3, int a4, int a5) {
        if (a22 > 0) {
            MapleCharacter a6;
            MapleFamily a22 = World.Family.getFamily(a22);
            if (a22 == null) {
                a6.JC = null;
                return;
            }
            a6.JC = a22.getMFC(a6.XC);
            if (a6.JC == null) {
                a6.JC = a22.addFamilyMemberInfo(a6, a3, a4, a5);
            }
            if (a6.JC.getSeniorId() != a3 && a3 != 0) {
                a6.JC.setSeniorId(a3);
            }
            if (a6.JC.getJunior1() != a4) {
                a6.JC.setJunior1(a4);
            }
            if (a6.JC.getJunior2() != a5) {
                a6.JC.setJunior2(a5);
                return;
            }
        } else {
            a6.JC = null;
        }
    }

    public /* synthetic */ void endPartyQuest(int a2) {
        try {
            MapleCharacter a3;
            MapleCharacter mapleCharacter = a3;
            mapleCharacter.startPartyQuest(a2);
            if (mapleCharacter.ic > 0L) {
                long l2 = System.currentTimeMillis() - a3.ic;
                int n2 = (int)(l2 / 1000L / 60L);
                int n3 = (int)(l2 / 1000L % 60L);
                MapleCharacter mapleCharacter2 = a3;
                int n4 = Integer.parseInt(mapleCharacter2.getOneInfo(a2, FixDropNullItem.ALLATORIxDEMO("+_(")));
                int n5 = Integer.parseInt(mapleCharacter2.getOneInfo(a2, MapleNodes.ALLATORIxDEMO("_kO")));
                if (n4 <= 0 || n2 < n4) {
                    MapleCharacter mapleCharacter3 = a3;
                    int n6 = a2;
                    a3.updateOneInfo(a2, FixDropNullItem.ALLATORIxDEMO("+_("), String.valueOf(n2));
                    mapleCharacter3.updateOneInfo(n6, MapleNodes.ALLATORIxDEMO("_kO"), String.valueOf(n3));
                    mapleCharacter3.updateOneInfo(n6, FixDropNullItem.ALLATORIxDEMO("R'B#"), FilePrinter.getLocalDateString());
                }
                MapleCharacter mapleCharacter4 = a3;
                n2 = Integer.parseInt(mapleCharacter4.getOneInfo(a2, MapleNodes.ALLATORIxDEMO("Oc\\"))) + 1;
                mapleCharacter4.updateOneInfo(a2, FixDropNullItem.ALLATORIxDEMO("%[6"), String.valueOf(n2));
                mapleCharacter4.updateOneInfo(a2, MapleNodes.ALLATORIxDEMO("M~"), String.valueOf((int)Math.ceil((double)n2 * 100.0 / (double)Integer.parseInt(a3.getOneInfo(a2, FixDropNullItem.ALLATORIxDEMO("2D?"))))));
                mapleCharacter4.recalcPartyQuestRank(a2);
                mapleCharacter4.ic = 0L;
                return;
            }
        }
        catch (Exception exception) {
            FilePrinter.printError(MapleNodes.ALLATORIxDEMO("CM~@kofM|MmXk^ XvX"), exception, FixDropNullItem.ALLATORIxDEMO("#X\"f'D2O\u0017C#E2\u0016#D4Y4"));
        }
    }

    public /* synthetic */ void checkCopyItems(boolean a22) {
        MapleCharacter a3;
        if (a3.canCheckCopyItem() || a22) {
            Object object;
            Iterator<Object> iterator;
            StringBuilder a22 = new StringBuilder();
            Cloneable cloneable = new ArrayList();
            cloneable = new HashMap();
            HashMap<Long, Integer> hashMap = new HashMap<Long, Integer>();
            Object object2 = new LinkedList<MapleInventoryType>();
            object2.add(MapleInventoryType.EQUIP);
            object2.add(MapleInventoryType.EQUIPPED);
            object2 = object2.iterator();
            block0: while (object2.hasNext()) {
                MapleInventoryType mapleInventoryType = (MapleInventoryType)((Object)object2.next());
                iterator = a3.getInventory(mapleInventoryType).list().iterator();
                block1: while (true) {
                    Iterator<Object> iterator2 = iterator;
                    while (iterator2.hasNext()) {
                        object = (IItem)iterator.next();
                        int n2 = object.getItemId();
                        long l2 = object.getInventoryitemId();
                        long l3 = object.getEquipOnlyId();
                        if (l3 <= 0L) continue block1;
                        if (hashMap.containsKey(l3)) {
                            if (((Integer)hashMap.get(l3)).intValue() != object.getItemId()) {
                                iterator2 = iterator;
                                continue;
                            }
                            a22.append("inventoryitemid = " + l2 + " itemId = " + n2 + " equipOnlyId = " + l3 + " found type = " + mapleInventoryType.name());
                            cloneable.put(l2, n2);
                            continue block1;
                        }
                        hashMap.put(l3, object.getItemId());
                        continue block1;
                    }
                    continue block0;
                    break;
                }
            }
            int n3 = 0;
            boolean bl = false;
            iterator = cloneable.entrySet().iterator();
            Iterator<Object> iterator3 = iterator;
            while (iterator3.hasNext()) {
                object = (Map.Entry)iterator.next();
                ++n3;
                MapleInventoryManipulator.removeAllByInventoryId(a3.Cb, (Long)object.getKey(), (Integer)object.getValue());
                bl = true;
                iterator3 = iterator;
            }
            if (bl) {
                if (GameSetConstants.COPYITEM_BAN) {
                    AutobanManager.getInstance().autoban(a3.Cb, MapleNodes.ALLATORIxDEMO("\u892b\u88f3\u88f1\u5097\u0002"));
                }
                FileoutputUtil.logToFile(FixDropNullItem.ALLATORIxDEMO("*Y!Ei~'U-\u0019\u8941\u88cbi\u88eb\u50df\u8931\u88bbi\u824c\u6a94\u6e6a\u00182N2"), FileoutputUtil.NowTime() + "\u89d2\u8272\u540d\u7a31:" + a3.cB + "\u3000\u7269\u54c1: " + cloneable.toString() + " function:checkCopyItems " + a22.toString() + "\r\n");
            }
            hashMap.clear();
            cloneable.clear();
        }
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ boolean getShow(int a2) {
        boolean bl = false;
        switch (a2) {
            case 1: {
                MapleCharacter a3;
                return a3.Yb;
            }
            case 2: {
                MapleCharacter a3;
                return a3.ec;
            }
        }
        return bl;
    }

    public /* synthetic */ void changeSkillLevel_Skip(ISkill a2, byte a3, byte a4, boolean a5) {
        MapleCharacter a6;
        if (a2 == null) {
            return;
        }
        if (a5) {
            a6.Cb.sendPacket(MaplePacketCreator.updateSkill(a2.getId(), a3, a4, -1L));
        }
        if (a3 == 0 && a4 == 0) {
            if (a6.sB.containsKey(a2)) {
                a6.sB.remove(a2);
                a6.zA = true;
                return;
            }
        } else {
            a6.sB.put(a2, new SkillEntry(a3, a4, -1L));
            a6.zA = true;
        }
    }

    public /* synthetic */ void cancelStolenSkill(int a22) {
        block4: {
            Iterator<MapleCharacter> iterator;
            MapleCharacter a3;
            Object a22;
            block3: {
                a22 = SkillFactory.getSkill(a22);
                ISkill iSkill = a22;
                a22 = iSkill.getEffect(a3.getTotalSkillLevel(iSkill));
                if (!((MapleStatEffect)a22).isMonsterBuff() && (!((MapleStatEffect)a22).getStatups().isEmpty() || ((MapleStatEffect)a22).getMonsterStati().isEmpty())) break block3;
                for (MapleMonster mapleMonster : a3.rC.getAllMonstersThreadsafe()) {
                    for (MonsterStatus monsterStatus : ((MapleStatEffect)a22).getMonsterStati().keySet()) {
                        if (!mapleMonster.isBuffed(monsterStatus) || mapleMonster.getBuff(monsterStatus).getFromID() != a3.XC) continue;
                        mapleMonster.cancelStatus(monsterStatus);
                    }
                }
                break block4;
            }
            if (((MapleStatEffect)a22).getDuration() <= 0 || ((MapleStatEffect)a22).getStatups().isEmpty()) break block4;
            Iterator<MapleCharacter> iterator2 = iterator = a3.rC.getCharactersThreadsafe().iterator();
            while (iterator2.hasNext()) {
                MapleCharacter mapleCharacter = iterator.next();
                iterator2 = iterator;
                mapleCharacter.cancelEffect((MapleStatEffect)a22, false, -1L, ((MapleStatEffect)a22).getStatups());
            }
        }
    }

    public /* synthetic */ boolean isEvan() {
        MapleCharacter a2;
        return a2.ob == 2001 || a2.ob / 100 == 22;
    }

    public /* synthetic */ void setBlackJackCard(BlackJack.BlackJackResultInfo a2) {
        a.ia = a2;
    }

    public /* synthetic */ void removeSummon(MapleSummon a2) {
        MapleCharacter a3;
        a3.Zb.writeLock().lock();
        try {
            a3.Hb.remove(a2);
            return;
        }
        finally {
            a3.Zb.writeLock().unlock();
        }
    }

    public /* synthetic */ void addNpcSelect(int a2) {
        MapleCharacter a3;
        a3.G.add(a2);
    }

    public /* synthetic */ int getMobVac2_Count() {
        MapleCharacter a2;
        return a2.Na;
    }

    public /* synthetic */ void equipSoulWeapon(Equip a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        MapleCharacter mapleCharacter2 = a3;
        MapleCharacter mapleCharacter3 = a3;
        mapleCharacter3.changeSkillLevel(mapleCharacter3.getEquippedSoulSkill(), -1, (byte)0);
        mapleCharacter2.changeSkillLevel(a2.getSoulSkill(), (int)1, (byte)1);
        mapleCharacter.setSoulCount((short)0);
        mapleCharacter2.getClient().sendPacket(MaplePacketCreator.getInventoryFull());
        mapleCharacter.getClient().sendPacket(MaplePacketCreator.giveSoulGauge(a3.getSoulCount(), a2.getSoulSkill()));
    }

    public /* synthetic */ long getPotentialAll() {
        MapleCharacter a2;
        long l2 = a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6f6d\u80bb\u6736\u5961\u7e0b\u507a"), false);
        if (l2 > 10000L) {
            l2 = 10000L;
        }
        return l2;
    }

    private /* synthetic */ void D(Connection a2, String a3) throws SQLException {
        MapleCharacter a4;
        MapleCharacter.deleteWhereCharacterId(a2, a3, a4.XC);
    }

    public /* synthetic */ String getSaveKeyInventory() {
        MapleCharacter a2;
        return a2.S;
    }

    public /* synthetic */ void equip(int a2, boolean a3) {
        MapleCharacter a4;
        a4.equip(a2, a3, true);
    }

    public /* synthetic */ void addSpendMeso(int a2) {
        MapleCharacter a3;
        long l2 = a3.getSpendMeso() + (long)a2;
        if (l2 >= Integer.MAX_VALUE) {
            l2 = Integer.MAX_VALUE;
        }
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u4efc\u65a3\u8287\u8cfd\u6965\u5e25"), (int)l2, false);
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ void setMP(int a) {
        var2_3 = DBConPool.getInstance().getDataSource().getConnection();
        try {
            v0 = var3_6 = var2_3.prepareStatement(MapleNodes.ALLATORIxDEMO("y~HoXk\foOmC{Bz_._kX.a^\f3\f1\fYDk^k\fgH.\u0011.\u0013"));
            v0.setInt(1, a);
            var3_6.setInt(2, a.getClient().getAccID());
            v0.execute();
            var3_6.close();
            ** if (var2_3 == null) goto lbl-1000
        }
        catch (Throwable var3_7) {
            if (var2_3 == null) ** GOTO lbl24
            try {
                var2_3.close();
                v1 = var3_7;
                ** GOTO lbl25
            }
            catch (Throwable a) {
                try {
                    var3_7.addSuppressed(a);
lbl24:
                    // 2 sources

                    v1 = var3_7;
lbl25:
                    // 2 sources

                    throw v1;
                }
                catch (SQLException var2_4) {
                    System.err.println("[setMP]\u7121\u6cd5\u9023\u63a5\u8cc7\u6599\u5eab " + var2_4);
                    return;
                }
                catch (Exception var2_5) {
                    FilePrinter.printError(FixDropNullItem.ALLATORIxDEMO("{'F*S\u0005^'D'U2S4\u00182N2"), var2_5, MapleNodes.ALLATORIxDEMO("_kXC|"));
                    System.err.println("[setMP]" + var2_5);
                }
            }
        }
lbl-1000:
        // 1 sources

        {
            var2_3.close();
            return;
        }
lbl-1000:
        // 1 sources

        {
        }
    }

    public final /* synthetic */ void QuestInfoPacket(MaplePacketLittleEndianWriter a2) {
        Iterator<Map.Entry<Integer, String>> iterator;
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        a2.writeShort(mapleCharacter.CA.size());
        Iterator<Map.Entry<Integer, String>> iterator2 = iterator = mapleCharacter.CA.entrySet().iterator();
        while (iterator2.hasNext()) {
            Map.Entry<Integer, String> entry = iterator.next();
            a2.writeShort(entry.getKey());
            a2.writeMapleAsciiString(entry.getValue() == null ? "" : entry.getValue());
            iterator2 = iterator;
        }
    }

    public /* synthetic */ void pooEffects() {
        MapleCharacter a2;
        if (a2.getPee() >= 100) {
            boolean bl = a2.getStat().setHp(0);
            MapleCharacter mapleCharacter = a2;
            a2.getStat().setMp(0);
            a2.updateSingleStat(MapleStat.HP, 0);
            mapleCharacter.updateSingleStat(MapleStat.MP, 0);
            mapleCharacter.Cb.sendPacket(MaplePacketCreator.serverNotice("[\u516c\u544a]: " + a2.getName() + " \u56e0\u70ba\u9577\u6642\u9593\u6c92\u4fbf\u4fbf\u639b\u6389\u4e86.\u6bcd\u6e6f\u5566!"));
            MapleCharacter mapleCharacter2 = a2;
            a2.dropMessage(MapleNodes.ALLATORIxDEMO("\u4f4c\u768a\u80b7\u958e\u722a\u4e88\u0000\u53b5\u4f93\u4fb1\u672f\u6621\u5027\u5973\u6595\u6cdb\u0002"));
            mapleCharacter2.dropMessage(FixDropNullItem.ALLATORIxDEMO("\u919d\u7559\u5027\u91ed\u594b\u4ec0\u4f56\u76c2\u80ad\u95c6\uff3a\u4e60\u6729\u5fc3\u8461\u512e\u9754\u5fef\u7510h"));
            mapleCharacter2.dropMessage(MapleNodes.ALLATORIxDEMO("w\u91a5\u7533S\u0016.\u4e27\u4e0e\u6b0d\"\f\u53b5\u62e5\u5005\u5c62\u5429\u0002"));
            mapleCharacter2.resetPee();
            return;
        }
        if (a2.getPee() == 90) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.dropMessage("[\u8eab\u9ad4]: \u5927\u54e5! \u6211\u5df2\u7d93\u5f88\u6025\u4e86! \u62dc\u8a17\u53bb\u4e00\u4e0b\u5ec1\u6240!\u5c41\u773c\u5feb\u958b\u82b1\u4e86!!(\u5c4e\u610f:" + mapleCharacter.getPee() + "%)");
            return;
        }
        if (a2.getPee() == 80) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.dropMessage("[\u8eab\u9ad4]: \u963f~, \u597d\u91cd\u7684\u50b7\u5bb3. \u5feb\u53bb\u62c9\u5c4e\u5427?(\u5c4e\u610f:" + mapleCharacter.getPee() + "%)");
            return;
        }
        if (a2.getPee() == 70) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.dropMessage("[\u8eab\u9ad4]: \u6211\u958b\u59cb\u611f\u89ba\u5230\u5c4e\u610f\u4e86,\u5dee\u4e0d\u591a\u53ef\u4ee5\u53bb\u5ec1\u6240\u56c9~.(\u5c4e\u610f:" + mapleCharacter.getPee() + "%)");
            return;
        }
        if (a2.getPee() == 60) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.dropMessage("[\u8eab\u9ad4]: \u5927\u7d04\u4e00\u534a\u7684\u611f\u89ba.(\u5c4e\u610f:" + mapleCharacter.getPee() + "%)");
            return;
        }
        if (a2.getPee() == 40) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.dropMessage("[\u8eab\u9ad4]: \u611f\u89ba\u771f\u597d! \u90a3\u4e00\u5b9a\u662f\u4f60\u7684\u963f\u5b24.(\u5c4e\u610f:" + mapleCharacter.getPee() + "%)");
            return;
        }
        if (a2.getPee() == 20) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.dropMessage("[\u8eab\u9ad4]: \u4f60\u80af\u5b9a\u77e5\u9053\u5982\u4f55\u4fdd\u6301\u5927\u8178\u662f\u7a7a\u7684! (\u5c4e\u610f:" + mapleCharacter.getPee() + "%)");
            return;
        }
        if (a2.getPee() == 1) {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.dropMessage("[\u8eab\u9ad4]: \u611f\u89ba\u826f\u597d\u53c8\u4e7e\u71e5. \u76ee\u524d\u70ba\u6b62\u9084\u4e0d\u932f. (\u5c4e\u610f:" + mapleCharacter.getPee() + "%)");
        }
    }

    public /* synthetic */ void setCharacterSetToday(String a2, long a3, boolean a4) {
        MapleCharacter a5;
        a2 = "\u65e5\u8a08" + (String)a2 + FileoutputUtil.NowDay();
        a5.setCharacterSet((String)a2, a3, a4);
    }

    public /* synthetic */ int getLottoryNumber3() {
        MapleCharacter a2;
        return (int)a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u6a2e\u9001\u7b00\u4e07\u5027\u8651\u7890"), false);
    }

    public /* synthetic */ MapleStatEffect getStatForBuff(MapleBuffStat a2) {
        MapleCharacter a3;
        if ((a2 = a3.kb.get(a2)) == null) {
            return null;
        }
        return ((MapleBuffStatValueHolder)a2).effect;
    }

    public /* synthetic */ void setFlyChairId(int a2) {
        a.KA = a2;
    }

    public /* synthetic */ void showKillMobCount(boolean a2) {
        MapleCharacter a3;
        if (a3.Nb % 10000 == 0 || a2) {
            a3.dropMessage(-1, "\u76ee\u524d\u7d2f\u7a4d\u6bba\u602a\u6578\u91cf: " + a3.Nb);
            MapleCharacter mapleCharacter = a3;
            mapleCharacter.dropMessage("\u76ee\u524d\u7d2f\u7a4d\u6bba\u602a\u6578\u91cf: " + mapleCharacter.Nb);
        }
    }

    public /* synthetic */ int gmLevel() {
        MapleCharacter a2;
        return a2.id;
    }

    public /* synthetic */ int getChair() {
        MapleCharacter a2;
        return a2.kC;
    }

    public /* synthetic */ String getAllBuffId() {
        MapleCharacter a2;
        Iterator<Map.Entry<MapleBuffStat, MapleBuffStatValueHolder>> iterator;
        Object object = "";
        Iterator<Map.Entry<MapleBuffStat, MapleBuffStatValueHolder>> iterator2 = iterator = a2.kb.entrySet().iterator();
        while (iterator2.hasNext()) {
            MapleBuffStatValueHolder mapleBuffStatValueHolder = iterator.next().getValue();
            object = (String)object + mapleBuffStatValueHolder.effect.getSourceId() + " ";
            iterator2 = iterator;
        }
        return object;
    }

    public /* synthetic */ void setAnyWhereDoorCash(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u5f1b\u5318\u4ed7\u6101\u95ac"), a2, false);
    }

    public /* synthetic */ List<Pair<Integer, Integer>> usedBuffs() {
        ArrayList<Pair<Integer, Integer>> arrayList = new ArrayList<Pair<Integer, Integer>>();
        for (MapleFamilyBuff.MapleFamilyBuffEntry mapleFamilyBuffEntry : MapleFamilyBuff.getBuffEntry()) {
            MapleCharacter a2;
            if (a2.canUseFamilyBuff(mapleFamilyBuffEntry)) continue;
            arrayList.add(new Pair<Integer, Integer>(mapleFamilyBuffEntry.index, mapleFamilyBuffEntry.count));
        }
        return arrayList;
    }

    public /* synthetic */ void setHonourExp(int a2) {
        a.U = a2;
    }

    public /* synthetic */ void autoJob_\u7c73\u54c8\u9038() {
        MapleCharacter a2;
        if (JobConstants.is\u7c73\u54c8\u9038(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter1stJobLevel(a2.ob)) {
                a2.changeJob(5100);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                a2.changeJob(5110);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(5111);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter4thJobLevel(a2.ob)) {
                a2.changeJob(5112);
            }
        }
    }

    public /* synthetic */ void addStorageMsg(String a2, String a3) {
        MapleCharacter a4;
        a4.uB = a4.uB + FileoutputUtil.NowTime() + " " + a2 + " : " + a3;
    }

    public /* synthetic */ void setLineChatNotice(boolean a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("z\u000fx\u0003\u8a3c\u6029\u63e6\u91d4"), a2, false);
    }

    public /* synthetic */ void setMeso(int a2) {
        a.vA = a2;
    }

    public /* synthetic */ boolean getmsg_Chat() {
        MapleCharacter a2;
        return a2.Jc;
    }

    public /* synthetic */ String getNowMacs() {
        MapleCharacter a2;
        return a2.Cb.getLoginMacs();
    }

    public /* synthetic */ void setLastRes(List<LifeMovementFragment> a2) {
        a.Tb = a2;
    }

    public /* synthetic */ int getEquipDropRate() {
        MapleCharacter a2;
        return a2.GB.EquipDrop;
    }

    public /* synthetic */ void cancelEffectFromBuffStat(MapleBuffStat a2, int a3) {
        MapleCharacter a4;
        if (a4.kb.get(a2) != null && a4.kb.get((Object)a2).cid == a3) {
            MapleCharacter mapleCharacter = a4;
            mapleCharacter.cancelEffect(mapleCharacter.kb.get((Object)a2).effect, false, -1L);
        }
    }

    public /* synthetic */ void unchooseStolenSkill(int a2) {
        MapleCharacter a3;
        if (a3.skillisCooling(20031208) || a3.y == null) {
            a3.dropMessage(-6, FixDropNullItem.ALLATORIxDEMO("\u76a8\u527b\u8613\u658a\u51f1\u534d\u6759\u95a5\uff4a\u8afd\u7a4b\u502f\u51cb\u8a50\u3044"));
            return;
        }
        int n2 = JobConstants.getJobNumber(a2 / 10000);
        boolean bl = false;
        for (Pair<Integer, Boolean> pair : a3.y) {
            if (!((Boolean)pair.right).booleanValue() || JobConstants.getJobNumber((Integer)pair.left / 10000) != n2) continue;
            a3.cancelStolenSkill((Integer)pair.left);
            pair.right = false;
            bl = true;
        }
        if (bl) {
            a3.gC = true;
            ISkill iSkill = SkillFactory.getSkill(a2);
            a3.Cb.sendPacket(JobPacket.PhantomPacket.replaceStolenSkill(SkillConstants.getStealSkill(n2), 0));
        }
    }

    public /* synthetic */ int getRemainingHSp(int a2) {
        MapleCharacter a3;
        return a3.yb[a2];
    }

    public /* synthetic */ Event_PyramidSubway getPyramidSubway() {
        MapleCharacter a2;
        return a2.Fb;
    }

    public /* synthetic */ void resetMobDirection() {
        a.K = 0L;
    }

    public /* synthetic */ void changeSkillLevel(Integer a2, int a3, byte a4, int a5) {
        MapleCharacter a6;
        if ((a2 = SkillFactory.getSkill((Integer)a2)) == null) {
            return;
        }
        a6.changeSkillLevel((ISkill)a2, a3, (int)a4, System.currentTimeMillis() + (long)a5 * 24L * 60L * 60L * 1000L);
    }

    public /* synthetic */ void setAntiKS(boolean a2) {
        a.d = a2;
    }

    public /* synthetic */ int[] GetExcludeItem() {
        MapleCharacter a2;
        return a2.xb;
    }

    public /* synthetic */ long getPotential6() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u88ea\u9b12\u85d3\u52d7\u5296\u6256"), false);
    }

    public /* synthetic */ int getRemainingSp(int a2) {
        MapleCharacter a3;
        return a3.nc[a2];
    }

    public /* synthetic */ int getMonsterKillTodayRank() {
        MapleCharacter a2;
        return a2.ALLATORIxDEMO("\u65e5\u8a08\u602a\u7269\u64ca\u6bba" + FileoutputUtil.NowDay());
    }

    public /* synthetic */ MapleStorage getStorage() {
        MapleCharacter a2;
        return a2.gb;
    }

    public /* synthetic */ int getMeso() {
        MapleCharacter a2;
        return a2.vA;
    }

    public /* synthetic */ void setCData(int a22, int a3) {
        MapleCharacter a4;
        MapleQuestStatus a22 = a4.Cb.getPlayer().getQuestNAdd(MapleQuest.getInstance(a22));
        if (a22.getCustomData() != null) {
            a22.setCustomData(String.valueOf(a3));
            a4.zb = true;
        }
    }

    public /* synthetic */ void changeMap(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        MapleMap mapleMap = mapleCharacter.Cb.getChannelServer().getMapFactory().getMap(a2);
        mapleCharacter.changeMap(mapleMap, mapleMap.getPortal(0));
    }

    public /* synthetic */ MapleExtendedSlots getExtendedSlotByIndex(int a2) {
        MapleCharacter a3;
        Iterator<MapleExtendedSlots> iterator;
        int n2 = 0;
        Iterator<MapleExtendedSlots> iterator2 = iterator = a3.Ma.iterator();
        while (iterator2.hasNext()) {
            MapleExtendedSlots mapleExtendedSlots = iterator.next();
            if (n2 == a2) {
                return mapleExtendedSlots;
            }
            ++n2;
            iterator2 = iterator;
        }
        return null;
    }

    public /* synthetic */ void setTitleEffect(int a2) {
        a.hA = a2;
    }

    public /* synthetic */ int getMaxDamage() {
        MapleCharacter a2;
        return (int)a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u52db\u6167\u980c\u509b"), false);
    }

    public final /* synthetic */ int getPetSlotNext() {
        int n2;
        Object object;
        int n3;
        List<MaplePet> list;
        MapleCharacter a2;
        block6: {
            int n4;
            int n5;
            list = a2.getSummonedPets();
            n3 = 0;
            if (list.size() >= 3) {
                MapleCharacter mapleCharacter = a2;
                mapleCharacter.unequipPet(mapleCharacter.getSummonedPet(0), false);
                return n3;
            }
            boolean[] arrbl = new boolean[3];
            arrbl[0] = 0;
            arrbl[1] = false;
            arrbl[2] = false;
            boolean[] arrbl2 = arrbl;
            int n6 = n5 = 0;
            while (n6 < 3) {
                for (MaplePet maplePet : list) {
                    if (maplePet.getSummonedValue() != n5 + 1) continue;
                    arrbl2[n5] = true;
                    break;
                }
                n6 = ++n5;
            }
            object = arrbl2;
            int n7 = arrbl2.length;
            int n8 = n4 = 0;
            while (n8 < n7) {
                if (!object[n4]) {
                    n2 = n3;
                    break block6;
                }
                ++n3;
                n8 = ++n4;
            }
            n2 = n3;
        }
        n3 = Math.min(n2, 2);
        object = list.iterator();
        while (object.hasNext()) {
            MaplePet maplePet = (MaplePet)object.next();
            if (maplePet.getSummonedValue() != n3 + 1) continue;
            a2.unequipPet(maplePet, false);
        }
        return n3;
    }

    public /* synthetic */ void addHP(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        int n2 = mapleCharacter.getAutoHP();
        n2 = Math.abs(a2);
        if (mapleCharacter.GB.setHp(a3.GB.getHp() + a2)) {
            MapleCharacter mapleCharacter2 = a3;
            mapleCharacter2.updateSingleStat(MapleStat.HP, mapleCharacter2.GB.getHp());
        }
    }

    public /* synthetic */ void setCheckSelection(boolean a2) {
        a.b = a2;
    }

    public /* synthetic */ int getAcLogReload(String a2) {
        MapleCharacter a3;
        return a3.getAcLog(a2);
    }

    public /* synthetic */ void StopDpm() {
        MapleCharacter a2;
        if (a2.isTestingDPM()) {
            MapleMonster mapleMonster = MapleLifeFactory.getMonster(9001007);
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.getMap().killMonsterDpm(mapleMonster);
            mapleCharacter.toggleTestingDPM();
            mapleCharacter.dropMessage(5, MapleNodes.ALLATORIxDEMO("\u5dfc\u5070\u6b6c\u755a\u5243\u76a8J|C\u6e00\u8a68\u302e"));
        }
    }

    public /* synthetic */ void setMessenger(MapleMessenger a2) {
        a.hB = a2;
    }

    public /* synthetic */ void silentGiveBuffs(List<PlayerBuffValueHolder> a2) {
        Iterator<PlayerBuffValueHolder> iterator;
        MapleCharacter a3;
        if (a2 == null) {
            if (GameSetConstants.SAVEBUFF) {
                if (AB.containsKey(a3.getId())) {
                    List<MapleBuffStatValueHolder> list = AB.get(a3.getId());
                    for (MapleBuffStatValueHolder mapleBuffStatValueHolder : list) {
                        int n2 = mapleBuffStatValueHolder.effect.getSourceId();
                        ISkill iSkill = SkillFactory.getSkill(n2);
                        if (iSkill == null) {
                            MapleItemInformationProvider.getInstance().getItemEffect(n2).applyTo(a3, mapleBuffStatValueHolder.localDuration, false);
                            continue;
                        }
                        MapleStatEffect mapleStatEffect = iSkill.getEffect(a3.getSkillLevel(n2));
                        if (mapleStatEffect.isGmBuff()) continue;
                        mapleStatEffect.applyTo(a3, mapleBuffStatValueHolder.localDuration, false);
                    }
                    AB.remove(a3.getId());
                }
                return;
            }
            return;
        }
        Iterator<PlayerBuffValueHolder> iterator2 = iterator = a2.iterator();
        while (iterator2.hasNext()) {
            PlayerBuffValueHolder playerBuffValueHolder = iterator.next();
            iterator2 = iterator;
            PlayerBuffValueHolder playerBuffValueHolder2 = playerBuffValueHolder;
            playerBuffValueHolder.effect.silentApplyBuff(a3, playerBuffValueHolder.startTime, playerBuffValueHolder2.localDuration, playerBuffValueHolder2.statup, playerBuffValueHolder.cid);
        }
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ Map<String, Integer> loadCharacterNamesByAccId(int a) {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [2[TRYBLOCK]], but top level block is 6[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ MapleFamilyCharacter getMFC() {
        MapleCharacter a2;
        return a2.JC;
    }

    public /* synthetic */ int getDiseaseSize() {
        MapleCharacter a2;
        return a2.qc.size();
    }

    public /* synthetic */ String getGeoLocation() {
        MapleCharacter a2;
        return IpGeoLocation.getGeoLocation(a2.Cb.getSessionIPAddress());
    }

    public final /* synthetic */ void setClient(MapleClient a2) {
        a.Cb = a2;
    }

    public /* synthetic */ int getCardStackMax() {
        MapleCharacter a2;
        if (MapleJob.\u5e7b\u5f71\u4fe0\u76dc4\u8f49.getId() == a2.getJob()) {
            return 40;
        }
        return 20;
    }

    public /* synthetic */ void setMobVac_LastTime(long a2) {
        a.Ya = a2;
    }

    public /* synthetic */ void updateSingleStat(MapleStat a2, int a3) {
        MapleCharacter a4;
        a4.updateSingleStat(a2, a3, false);
    }

    public /* synthetic */ void addRockMap() {
        MapleCharacter a2;
        if (a2.getRockSize() >= 10) {
            return;
        }
        a2.DB[a2.getRockSize()] = a2.getMapId();
        a2.Qd = true;
    }

    public /* synthetic */ int getChairExp(int a2) {
        MapleCharacter a3;
        return (int)a3.getCharacterSet("\u7d93\u9a57\u6905" + a2, false);
    }

    public /* synthetic */ int getNeededExp() {
        MapleCharacter a2;
        return GameConstants.getExpNeededForLevel(a2.IC);
    }

    /*
     * WARNING - Removed try catching itself - possible behaviour change.
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    public static /* synthetic */ void saveNewCharToDB(MapleCharacter a, LoginInformationProvider.JobType a, short a, int a) {
        a = null;
        var4_10 = null;
        var5_11 = null;
        var6_12 = null;
        v0 = a = DBConPool.getInstance().getDataSource().getConnection();
        a.setTransactionIsolation(1);
        v0.setAutoCommit(false);
        var4_10 = v0.prepareStatement(MapleNodes.ALLATORIxDEMO("Gb]i\\x.e@xA\fmDo^oOzI|_.\u0004bIxIb\u0000.JoAk\u0000._z^\"\fjIv\u0000.@{G\"\fnE`Xn\u0000.Iv\\\"\ff\\\"\fc\\\"\fcMvD~\u0000.AoTc\\\"\f}\\\"\ff_~\u0000.M~\u0000.Kc\u0000._eE`Oa@a^\"\fiI`Hk^\"\fdCl\u0000.DoE|\u0000.JoOk\u0000.Ao\\\"\fcI}C\"\ff\\O\\[_kH\"\f}\\o[`\\aE`X\"\f~M|Xw\u0000.N{HjUMM~MmEzU\"\fcC`_zI|NaCeOaZk^\"\fjCdCQ\\z_\"\fjCdC\\ImC|H\"\f~Iz_\"\f}YlOoXkKa^w\u0000.Ao^|EoKkej\u0000.O{^|I`X|I~\u0000.XaXo@|I~\u0000.\\|IhEv\u0000.MmOaY`XgH\"\f`McI\"\fyC|@j\u0000.zg\\CIjMb\u0000.OoBZMbG\"\fEEb@CCloaY`X.\u0000~Ik\f\"AaY`XgH'\fXmByK\u007f.\u00041\u0000.\u0013\"\f1\u0000.\u0013\"\f1\u0000.\u0013\"\f1\u0000.\u0013\"\f1\u0000.\u0013\"\f1\u0000.\u0013\"\f1\u0000.\u0013\"\f1\u0000.\u0013\"\f1\u0000.\u0013\"\f1\u0000.\u0013\"\f1\u0000.\u0013\"\f1\u0000.\u0013\"\f1\u0000.\u0013\"\f1\u0000.\u0013\"\f1\u0000.\u0013\"\f1\u0000.\u0013\"\f1\u0000.\u0013\"\f1\u0000.\u0013\"\f1\u0000.\u0013\"\f1\u0000.\u0013.\u00001\f\"\u0013.\u00001\u0005"), 1);
        var7_13 = 0;
        v1 = var4_10;
        v2 = var4_10;
        v3 = ++var7_13;
        var4_10.setInt(v3, a.getLevel());
        v4 = ++var7_13;
        v2.setShort(v4, (short)0);
        var8_17 = a.GB;
        v5 = ++var7_13;
        v1.setShort(v5, var8_17.getStr());
        v6 = ++var7_13;
        v2.setShort(v6, var8_17.getDex());
        v7 = ++var7_13;
        v1.setShort(v7, var8_17.getLuk());
        v8 = ++var7_13;
        v1.setShort(v8, var8_17.getInt());
        v9 = ++var7_13;
        v1.setInt(v9, 0);
        v1.setInt(++var7_13, GameSetConstants.DEFAULT_HP > 0 ? GameSetConstants.DEFAULT_HP : var8_17.getHp());
        var4_10.setInt(++var7_13, GameSetConstants.DEFAULT_MP > 0 ? GameSetConstants.DEFAULT_MP : var8_17.getMp());
        var4_10.setInt(++var7_13, GameSetConstants.DEFAULT_HP > 0 ? GameSetConstants.DEFAULT_HP : var8_17.getMaxHp());
        var4_10.setInt(++var7_13, GameSetConstants.DEFAULT_MP > 0 ? GameSetConstants.DEFAULT_MP : var8_17.getMaxMp());
        var9_19 = new StringBuilder();
        v10 = var10_22 = 0;
        while (v10 < a.getRemainingSps().length) {
            var9_19.append(a.getRemainingSps()[var10_22]);
            var9_19.append(FixDropNullItem.ALLATORIxDEMO("j"));
            v10 = ++var10_22;
        }
        v11 = var10_23 = var9_19.toString();
        var4_10.setString(++var7_13, v11.substring(0, v11.length() - 1));
        var9_19 = new StringBuilder();
        v12 = var10_24 = 0;
        while (v12 < a.yb.length) {
            var9_19.append(a.yb[var10_24]);
            var9_19.append(MapleNodes.ALLATORIxDEMO("\u0000"));
            v12 = ++var10_24;
        }
        var10_25 = var9_19.toString();
        v13 = var4_10;
        v14 = ++var7_13;
        v15 = var10_25;
        v13.setString(v14, v15.substring(0, v15.length() - 1));
        v16 = ++var7_13;
        v13.setShort(v16, a.getRemainingAp());
        v17 = ++var7_13;
        v13.setByte(v17, (byte)0);
        v18 = ++var7_13;
        v13.setByte(v18, a.jd);
        v19 = ++var7_13;
        v13.setByte(v19, a.WA);
        v20 = ++var7_13;
        v13.setShort(v20, a.ob);
        v21 = ++var7_13;
        v13.setInt(v21, a.zc);
        v22 = ++var7_13;
        v13.setInt(v22, a.dA);
        v23 = ++var7_13;
        v13.setInt(v23, a.map);
        v24 = ++var7_13;
        v13.setInt(v24, a.vA);
        v25 = ++var7_13;
        v13.setShort(v25, (short)0);
        v26 = ++var7_13;
        v13.setByte(v26, (byte)0);
        v27 = ++var7_13;
        v13.setInt(v27, -1);
        v28 = ++var7_13;
        v13.setByte(v28, a.tB.getCapacity());
        v29 = ++var7_13;
        v13.setInt(v29, 0);
        v30 = ++var7_13;
        v13.setInt(v30, 0);
        v31 = ++var7_13;
        v13.setInt(v31, 0);
        v32 = ++var7_13;
        v13.setString(v32, FixDropNullItem.ALLATORIxDEMO("\u001bw\u001ak\u0007j\u001bw"));
        v33 = ++var7_13;
        v13.setInt(v33, a);
        v34 = ++var7_13;
        v13.setInt(v34, 0);
        v35 = ++var7_13;
        v13.setInt(v35, 0);
        v36 = ++var7_13;
        v13.setInt(v36, 0);
        v37 = ++var7_13;
        v13.setString(v37, a.OB);
        v38 = ++var7_13;
        v13.setInt(v38, a.getAccountID());
        v39 = ++var7_13;
        v13.setString(v39, a.cB);
        v40 = ++var7_13;
        v13.setByte(v40, a.wc);
        v13.setInt(++var7_13, a.Hd != false ? 1 : 0);
        v41 = var4_10;
        v42 = ++var7_13;
        v41.setInt(v42, 1);
        v43 = ++var7_13;
        v41.setInt(v43, 0);
        v44 = ++var7_13;
        v41.setInt(v44, a.HC);
        v41.setInt(++var7_13, a.fA);
        v41.executeUpdate();
        var6_12 = var4_10.getGeneratedKeys();
        if (var6_12.next() == false) throw new DatabaseException(MapleNodes.ALLATORIxDEMO("GB}I|XgBi\fmDo^.JoEbIj\u0002"));
        v45 = var4_10;
        a.XC = var6_12.getInt(1);
        v45.close();
        v46 = a;
        var6_12.close();
        var4_10 = v46.prepareStatement(FixDropNullItem.ALLATORIxDEMO("\u000fx\u0015s\u0014bf\u007f\bb\t\u00167C#E2E2W2C5\u0016nV7C#E2E2W2C5_\"Vj\u0016&U.W4W%B#D/R&\u001afV7C#E2Vj\u0016&E2W2C5Vj\u0016&B/[#Vj\u0016&P)D S/B#R&\u001afV%C5B)[\u0002W2W&\u001ff`\u0007z\u0013s\u0015\u0016nr\u0003p\u0007c\nbj\u0016y\u001af\tj\u0016y\u001af\tj\u0016y\u001af\to"), 1);
        var5_11 = v46.prepareStatement(MapleNodes.ALLATORIxDEMO("e@\u007fK~Z\fGbZc.]{I}X}XoX{_cCl_.zO`[i]\f&hKjOyBx\"\f1\u0000.\u0013\"\f1\u0005"));
        v47 = a;
        var4_10.setInt(1, v47.XC);
        a = v47.XB.values().iterator();
        v48 /* !! */  = a;
        while (v48 /* !! */ .hasNext()) {
            a = (MapleQuestStatus)a.next();
            v49 = var4_10;
            v50 = var4_10;
            var4_10.setInt(2, a.getQuest().getId());
            v50.setInt(3, a.getStatus());
            v50.setInt(4, (int)(a.getCompletionTime() / 1000L));
            v49.setInt(5, a.getForfeited());
            v49.setString(6, a.getCustomData());
            v49.executeUpdate();
            var6_12 = var4_10.getGeneratedKeys();
            var6_12.next();
            if (a.hasMobKills()) {
                v51 = a.getMobKills().keySet().iterator();
                while (v51.hasNext()) {
                    var10_26 = (Integer)var9_19.next();
                    v51 = var9_19;
                    v52 = var5_11;
                    var5_11.setLong(1, var6_12.getLong(1));
                    v52.setInt(2, var10_26);
                    v52.setInt(3, a.getMobKills(var10_26));
                    v52.executeUpdate();
                }
            }
            var6_12.close();
            v48 /* !! */  = a;
        }
        var4_10.close();
        var5_11.close();
        var4_10 = a.prepareStatement(FixDropNullItem.ALLATORIxDEMO("\u000fx\u0015s\u0014bf\u007f\bb\t\u0016/X0S(B)D?E*Y2\u0016nU.W4W%B#D/Rj\u0016&S7C/F&\u001afV3E#Vj\u0016&E#B3F&\u001afV#B%Vj\u0016&U'E.Vo\u0016\u0010w\nc\u0003ef\u001ey\u001af\tj\u0016y\u001af\tj\u0016y\u001af\to"));
        var4_10.setInt(1, a.XC);
        v53 = var4_10;
        if (GameSetConstants.MAX_SLOT) {
            v53.setByte(2, (byte)96);
            v54 = var4_10;
            v55 = v54;
            v56 = var4_10;
            v56.setByte(3, (byte)96);
            v56.setByte(4, (byte)96);
            v54.setByte(5, (byte)96);
            v54.setByte(6, (byte)96);
        } else {
            v53.setByte(2, (byte)32);
            v57 = var4_10;
            v55 = v57;
            v58 = var4_10;
            v58.setByte(3, (byte)32);
            v58.setByte(4, (byte)32);
            v57.setByte(5, (byte)32);
            v57.setByte(6, (byte)60);
        }
        v55.execute();
        var4_10.close();
        v59 = var4_10 = a.prepareStatement(MapleNodes.ALLATORIxDEMO("Gb]i\\x.e@xA\fcC{BzHoXo\f&OfM|MmXk^gH\"\fn`kZk@n\u0000.LKT~L\"\fnjoXgK{In\u0005.zO`[i]\f&\u0013\"\f1\u0000.\u0013\"\f1\u0005"));
        v60 = var4_10;
        v60.setInt(1, a.XC);
        v60.setByte(2, (byte)1);
        v59.setInt(3, 0);
        v59.setByte(4, (byte)0);
        v59.execute();
        var4_10.close();
        if (a.getSkills().size() > 0) {
            var4_10 = a.prepareStatement(FixDropNullItem.ALLATORIxDEMO("\u000fx\u0015s\u0014bf\u007f\bb\t\u00165]/Z*Ef\u001e%^'D'U2S4_\"\u001afE-_*Z/Rj\u00165]/Z*Z#@#Zj\u0016+W5B#D*S0S*\u001afS>F/D'B/Y(\u001ff`\u0007z\u0013s\u0015\u0016n\tj\u0016y\u001af\tj\u0016y\u001af\to"));
            v61 = a;
            var4_10.setInt(1, v61.XC);
            for (Map.Entry a : v61.getSkills().entrySet()) {
                if (!SkillConstants.isApplicableSkill(((ISkill)a.getKey()).getId())) continue;
                var4_10.setInt(2, ((ISkill)a.getKey()).getId());
                var4_10.setInt(3, ((SkillEntry)a.getValue()).skillevel);
                var4_10.setInt(4, ((SkillEntry)a.getValue()).masterlevel);
                var4_10.setLong(5, ((SkillEntry)a.getValue()).expiration);
                var4_10.execute();
            }
        }
        a = new ArrayList<E>();
        a = a.LA;
        var9_20 = a.LA.length;
        v62 = var10_27 = 0;
        while (v62 < var9_20) {
            var11_29 = a[var10_27];
            v63 = var11_29.list().iterator();
            while (v63.hasNext()) {
                var13_32 = var12_31.next();
                v63 = var12_31;
                a.add(new Pair<IItem, MapleInventoryType>(var13_32, var11_29.getType()));
            }
            v62 = ++var10_27;
        }
        if (GameSetConstants.NEW_ITEM_SAVE) {
            ItemLoader.INVENTORY.saveItemsNew((List<Pair<IItem, MapleInventoryType>>)a, (Connection)a, a.XC, a.getAccountID());
        } else {
            v64 = new Integer[1];
            v64[0] = a.XC;
            ItemLoader.INVENTORY.saveItems((List<Pair<IItem, MapleInventoryType>>)a, (Connection)a, v64);
        }
        v65 = new int[37];
        v65[0] = 2;
        v65[1] = 3;
        v65[2] = 4;
        v65[3] = 5;
        v65[4] = 6;
        v65[5] = 7;
        v65[6] = 16;
        v65[7] = 17;
        v65[8] = 18;
        v65[9] = 19;
        v65[10] = 23;
        v65[11] = 25;
        v65[12] = 26;
        v65[13] = 27;
        v65[14] = 29;
        v65[15] = 31;
        v65[16] = 34;
        v65[17] = 35;
        v65[18] = 37;
        v65[19] = 38;
        v65[20] = 40;
        v65[21] = 41;
        v65[22] = 43;
        v65[23] = 44;
        v65[24] = 45;
        v65[25] = 46;
        v65[26] = 48;
        v65[27] = 50;
        v65[28] = 56;
        v65[29] = 57;
        v65[30] = 59;
        v65[31] = 60;
        v65[32] = 61;
        v65[33] = 62;
        v65[34] = 63;
        v65[35] = 64;
        v65[36] = 65;
        a = v65;
        v66 = new int[37];
        v66[0] = 4;
        v66[1] = 4;
        v66[2] = 4;
        v66[3] = 4;
        v66[4] = 4;
        v66[5] = 4;
        v66[6] = 4;
        v66[7] = 4;
        v66[8] = 4;
        v66[9] = 4;
        v66[10] = 4;
        v66[11] = 4;
        v66[12] = 4;
        v66[13] = 4;
        v66[14] = 5;
        v66[15] = 4;
        v66[16] = 4;
        v66[17] = 4;
        v66[18] = 4;
        v66[19] = 4;
        v66[20] = 4;
        v66[21] = 4;
        v66[22] = 4;
        v66[23] = 5;
        v66[24] = 5;
        v66[25] = 4;
        v66[26] = 4;
        v66[27] = 4;
        v66[28] = 5;
        v66[29] = 5;
        v66[30] = 6;
        v66[31] = 6;
        v66[32] = 6;
        v66[33] = 6;
        v66[34] = 6;
        v66[35] = 6;
        v66[36] = 6;
        var9_21 = v66;
        v67 = new int[37];
        v67[0] = 10;
        v67[1] = 12;
        v67[2] = 13;
        v67[3] = 18;
        v67[4] = 24;
        v67[5] = 21;
        v67[6] = 8;
        v67[7] = 5;
        v67[8] = 0;
        v67[9] = 4;
        v67[10] = 1;
        v67[11] = 19;
        v67[12] = 14;
        v67[13] = 15;
        v67[14] = 52;
        v67[15] = 2;
        v67[16] = 17;
        v67[17] = 11;
        v67[18] = 3;
        v67[19] = 20;
        v67[20] = 16;
        v67[21] = 23;
        v67[22] = 9;
        v67[23] = 50;
        v67[24] = 51;
        v67[25] = 6;
        v67[26] = 22;
        v67[27] = 7;
        v67[28] = 53;
        v67[29] = 54;
        v67[30] = 100;
        v67[31] = 101;
        v67[32] = 102;
        v67[33] = 103;
        v67[34] = 104;
        v67[35] = 105;
        v67[36] = 106;
        var10_28 = v67;
        var4_10 = a.prepareStatement(MapleNodes.ALLATORIxDEMO("e@\u007fK~Z\fGbZc.GkUcM~\f&OfM|MmXk^gH\"\fnGkUn\u0000.LzU~In\u0000.LoOzEaBn\u0005.zO`[i]\f&\u0013\"\f1\u0000.\u0013\"\f1\u0005"));
        var4_10.setInt(1, a.XC);
        v68 = var11_30 = 0;
        while (v68 < a.length) {
            v69 = var4_10;
            var4_10.setInt(2, a[var11_30]);
            v69.setInt(3, var9_21[var11_30]);
            v69.setInt(4, var10_28[var11_30++]);
            v69.execute();
            v68 = var11_30;
        }
        var4_10.close();
        a.commit();
        try {
            if (var5_11 != null) {
                var5_11.close();
            }
            if (var4_10 != null) {
                var4_10.close();
            }
            if (var6_12 != null) {
                var6_12.close();
            }
            v70 = a;
            v70.setAutoCommit(true);
            v70.setTransactionIsolation(4);
            if (a == null) return;
            a.close();
            return;
        }
        catch (SQLException var7_14) {
            var7_14.printStackTrace();
            FilePrinter.printError(FixDropNullItem.ALLATORIxDEMO("{'F*S\u0005^'D'U2S4\u00182N2"), var7_14, MapleNodes.ALLATORIxDEMO("w\u89dc\u825e\u5b56\u6ab8S\f\u9321\u8a88\u81e4\u52f9\u8fda\u56f2\u513c\u5b74\u5291\u80d1"));
            return;
        }
        catch (DatabaseException | SQLException var7_15) {
            try {
                var7_15.printStackTrace();
                FilePrinter.printError(FixDropNullItem.ALLATORIxDEMO("{'F*S\u0005^'D'U2S4\u00182N2"), var7_15, MapleNodes.ALLATORIxDEMO("w\u89dc\u825e\u5b56\u6ab8S\f\u513c\u5b74\u89dc\u825e\u8cc9\u65b5\u593f\u657b"));
                try {
                    a.rollback();
                    v71 = var5_11;
                    ** GOTO lbl401
                }
                catch (SQLException var8_18) {
                    var8_18.printStackTrace();
                    FilePrinter.printError(FixDropNullItem.ALLATORIxDEMO("{'F*S\u0005^'D'U2S4\u00182N2"), var8_18, MapleNodes.ALLATORIxDEMO("w\u89dc\u825e\u5b56\u6ab8S\f\u513c\u5b74\u593f\u657b\uff02\u7e50\u7e82\u4f53\u7526\u6687\u5b56\u6ab8\u4e03\u511e\u5b56\u8ceb\u6597\u5e87"));
                    try {
                        v71 = var5_11;
lbl401:
                        // 2 sources

                        if (v71 != null) {
                            var5_11.close();
                        }
                        if (var4_10 != null) {
                            var4_10.close();
                        }
                        if (var6_12 != null) {
                            var6_12.close();
                        }
                        v72 = a;
                        v72.setAutoCommit(true);
                        v72.setTransactionIsolation(4);
                        if (a == null) return;
                        a.close();
                        return;
                    }
                    catch (SQLException var7_16) {
                        var7_16.printStackTrace();
                        FilePrinter.printError(FixDropNullItem.ALLATORIxDEMO("{'F*S\u0005^'D'U2S4\u00182N2"), var7_16, MapleNodes.ALLATORIxDEMO("w\u89dc\u825e\u5b56\u6ab8S\f\u9321\u8a88\u81e4\u52f9\u8fda\u56f2\u513c\u5b74\u5291\u80d1"));
                        return;
                    }
                }
            }
            catch (Throwable var14_33) {
                try {
                    if (var5_11 != null) {
                        var5_11.close();
                    }
                    if (var4_10 != null) {
                        var4_10.close();
                    }
                    if (var6_12 != null) {
                        var6_12.close();
                    }
                    v73 = a;
                    v73.setAutoCommit(true);
                    v73.setTransactionIsolation(4);
                    if (a == null) throw var14_33;
                    a.close();
                    throw var14_33;
                }
                catch (SQLException a) {
                    a.printStackTrace();
                    FilePrinter.printError(FixDropNullItem.ALLATORIxDEMO("{'F*S\u0005^'D'U2S4\u00182N2"), a, MapleNodes.ALLATORIxDEMO("w\u89dc\u825e\u5b56\u6ab8S\f\u9321\u8a88\u81e4\u52f9\u8fda\u56f2\u513c\u5b74\u5291\u80d1"));
                }
                throw var14_33;
            }
        }
    }

    private /* synthetic */ void H() {
        try {
            MapleCharacter a2;
            DruidPooledConnection druidPooledConnection = DBConPool.getInstance().getDataSource().getConnection();
            a2.ALLATORIxDEMO((Connection)druidPooledConnection);
            return;
        }
        catch (SQLException sQLException) {
            sQLException.printStackTrace();
            return;
        }
    }

    public /* synthetic */ boolean hasBlockedInventory() {
        MapleCharacter a2;
        return !a2.isAlive() || a2.getTrade() != null || a2.getConversation() > 0 || a2.getPlayerShop() != null || a2.rC == null || a2.isOperateStorage();
    }

    public final /* synthetic */ boolean canBlood(long a2) {
        MapleCharacter a3;
        return a3.Ad > 0L && a3.Ad + 4000L < a2;
    }

    public static final /* synthetic */ MapleCharacter ReconstructChr(CharacterTransfer a2, MapleClient a3, boolean a422) {
        CharacterTransfer characterTransfer;
        int n2;
        Object object;
        int a422;
        Object object2;
        MapleCharacter mapleCharacter = new MapleCharacter(true);
        mapleCharacter.Cb = a3;
        if (!a422) {
            mapleCharacter.Cb.setChannel(a2.channel);
        }
        CharacterTransfer characterTransfer2 = a2;
        MapleCharacter mapleCharacter2 = mapleCharacter;
        CharacterTransfer characterTransfer3 = a2;
        MapleCharacter mapleCharacter3 = mapleCharacter;
        CharacterTransfer characterTransfer4 = a2;
        MapleCharacter mapleCharacter4 = mapleCharacter;
        CharacterTransfer characterTransfer5 = a2;
        MapleCharacter mapleCharacter5 = mapleCharacter;
        CharacterTransfer characterTransfer6 = a2;
        MapleCharacter mapleCharacter6 = mapleCharacter;
        CharacterTransfer characterTransfer7 = a2;
        MapleCharacter mapleCharacter7 = mapleCharacter;
        CharacterTransfer characterTransfer8 = a2;
        MapleCharacter mapleCharacter8 = mapleCharacter;
        CharacterTransfer characterTransfer9 = a2;
        MapleCharacter mapleCharacter9 = mapleCharacter;
        CharacterTransfer characterTransfer10 = a2;
        MapleCharacter mapleCharacter10 = mapleCharacter;
        CharacterTransfer characterTransfer11 = a2;
        MapleCharacter mapleCharacter11 = mapleCharacter;
        CharacterTransfer characterTransfer12 = a2;
        MapleCharacter mapleCharacter12 = mapleCharacter;
        CharacterTransfer characterTransfer13 = a2;
        MapleCharacter mapleCharacter13 = mapleCharacter;
        CharacterTransfer characterTransfer14 = a2;
        MapleCharacter mapleCharacter14 = mapleCharacter;
        MapleCharacter mapleCharacter15 = mapleCharacter;
        MapleCharacter mapleCharacter16 = mapleCharacter;
        CharacterTransfer characterTransfer15 = a2;
        MapleCharacter mapleCharacter17 = mapleCharacter;
        CharacterTransfer characterTransfer16 = a2;
        MapleCharacter mapleCharacter18 = mapleCharacter;
        CharacterTransfer characterTransfer17 = a2;
        MapleCharacter mapleCharacter19 = mapleCharacter;
        CharacterTransfer characterTransfer18 = a2;
        MapleCharacter mapleCharacter20 = mapleCharacter;
        CharacterTransfer characterTransfer19 = a2;
        MapleCharacter mapleCharacter21 = mapleCharacter;
        CharacterTransfer characterTransfer20 = a2;
        MapleCharacter mapleCharacter22 = mapleCharacter;
        CharacterTransfer characterTransfer21 = a2;
        MapleCharacter mapleCharacter23 = mapleCharacter;
        CharacterTransfer characterTransfer22 = a2;
        MapleCharacter mapleCharacter24 = mapleCharacter;
        CharacterTransfer characterTransfer23 = a2;
        MapleCharacter mapleCharacter25 = mapleCharacter;
        CharacterTransfer characterTransfer24 = a2;
        MapleCharacter mapleCharacter26 = mapleCharacter;
        CharacterTransfer characterTransfer25 = a2;
        MapleCharacter mapleCharacter27 = mapleCharacter;
        CharacterTransfer characterTransfer26 = a2;
        MapleCharacter mapleCharacter28 = mapleCharacter;
        CharacterTransfer characterTransfer27 = a2;
        MapleCharacter mapleCharacter29 = mapleCharacter;
        CharacterTransfer characterTransfer28 = a2;
        MapleCharacter mapleCharacter30 = mapleCharacter;
        CharacterTransfer characterTransfer29 = a2;
        MapleCharacter mapleCharacter31 = mapleCharacter;
        CharacterTransfer characterTransfer30 = a2;
        MapleCharacter mapleCharacter32 = mapleCharacter;
        CharacterTransfer characterTransfer31 = a2;
        MapleCharacter mapleCharacter33 = mapleCharacter;
        CharacterTransfer characterTransfer32 = a2;
        MapleCharacter mapleCharacter34 = mapleCharacter;
        CharacterTransfer characterTransfer33 = a2;
        MapleCharacter mapleCharacter35 = mapleCharacter;
        CharacterTransfer characterTransfer34 = a2;
        MapleCharacter mapleCharacter36 = mapleCharacter;
        mapleCharacter36.I = a2.loggedIn;
        mapleCharacter36.od = a2.soulcount;
        mapleCharacter.q = characterTransfer34.coreAura;
        mapleCharacter35.u = characterTransfer34.innerSkills;
        mapleCharacter35.y = a2.stolenSkills;
        mapleCharacter.S = characterTransfer33.SaveKeyInventory;
        mapleCharacter34.N = characterTransfer33.SaveKeyCs;
        mapleCharacter34.R = a2.SaveKeyStorage;
        mapleCharacter.T = characterTransfer32.SaveKeyB;
        mapleCharacter33.v = characterTransfer32.SaveKeyA;
        mapleCharacter33.n = a2.checkdc;
        mapleCharacter.ca = characterTransfer31.cashEquipHide;
        mapleCharacter32.pC = characterTransfer31.KillCount;
        mapleCharacter32.Ga = a2.petVacTime;
        mapleCharacter.W = characterTransfer30.transfertime;
        mapleCharacter31.Aa = characterTransfer30.peeNumber;
        mapleCharacter31.Ha = a2.rebuy;
        mapleCharacter.Ba = characterTransfer29.fishkingscore;
        mapleCharacter30.Ja = characterTransfer29.FishGameTimes;
        mapleCharacter30.Ea = a2.fishGameHistoryScore;
        mapleCharacter.la = characterTransfer28.killMapMonsterInfo;
        mapleCharacter29.hC = characterTransfer28.onlinesecs;
        mapleCharacter29.VA = a2.charm;
        mapleCharacter.Bd = characterTransfer27.faceMarking;
        mapleCharacter28.Ma = characterTransfer27.extendedSlots;
        mapleCharacter28.Md = a2.pets;
        mapleCharacter.fc = characterTransfer26.GashaponMega;
        mapleCharacter27.ea = characterTransfer26.ShopSellItem;
        mapleCharacter27.Fa = a2.CharacterSetTemp;
        mapleCharacter.ga = characterTransfer25.CharacterSet;
        mapleCharacter26.Ca = characterTransfer25.CharacterSet_Acc;
        mapleCharacter26.La = a2.NiuNiuCard;
        mapleCharacter.ia = characterTransfer24.BlackJackCard;
        mapleCharacter25.ka = characterTransfer24.MonsterPet;
        mapleCharacter25.ua = a2.lastHiredFishingTime;
        mapleCharacter.xC = characterTransfer23.owlCount;
        mapleCharacter24.md = characterTransfer23.lastCheckCopyTime;
        mapleCharacter24.Cd = a2.FaceAlbum;
        mapleCharacter.JB = characterTransfer22.HairAlbum;
        mapleCharacter23.xb = characterTransfer22.ExcludeItem;
        mapleCharacter23.fA = a2.mount_id;
        mapleCharacter.HC = characterTransfer21.pee;
        mapleCharacter22.k = characterTransfer21.LeftSkillTime;
        mapleCharacter22.H = a2.addMove;
        mapleCharacter.Gd = characterTransfer20.savedHairs;
        mapleCharacter21.fb = characterTransfer20.savedFaces;
        mapleCharacter21.B = a2.lastaddmovetime;
        mapleCharacter21.getCheatTracker().lastTime = a2.lastTime;
        mapleCharacter.ec = characterTransfer19.showLogin;
        mapleCharacter20.Yb = characterTransfer19.showRegister;
        mapleCharacter20.Dc = a2.nowmacs;
        mapleCharacter.sd = characterTransfer18.canTalk;
        mapleCharacter19.rb = characterTransfer18.attackdebug;
        mapleCharacter19.NC = a2.DebugMessage;
        mapleCharacter.Rc = characterTransfer17.check_msg_MobVac;
        mapleCharacter18.Hd = characterTransfer17.Vip_Medal;
        mapleCharacter18.wb = a2.check_msg_BuyMerChant;
        mapleCharacter.Jc = characterTransfer16.check_msg_Chat;
        mapleCharacter17.rc = characterTransfer16.smega;
        mapleCharacter17.XC = a2.characterid;
        mapleCharacter.cB = characterTransfer15.name;
        mapleCharacter16.IC = characterTransfer15.level;
        mapleCharacter16.IB = a2.fame;
        MapleCharacter mapleCharacter37 = mapleCharacter;
        mapleCharacter15.Vc = new PlayerRandomStream();
        mapleCharacter37.GB.str = a2.str;
        mapleCharacter15.GB.dex = a2.dex;
        mapleCharacter15.GB.int_ = a2.int_;
        mapleCharacter15.GB.luk = a2.luk;
        mapleCharacter15.GB.maxhp = a2.maxhp;
        mapleCharacter15.GB.maxmp = a2.maxmp;
        CharacterTransfer characterTransfer35 = a2;
        mapleCharacter15.GB.hp = characterTransfer35.hp;
        mapleCharacter15.GB.mp = a2.mp;
        mapleCharacter14.lb = characterTransfer35.chalkboard;
        mapleCharacter14.RC = a2.exp;
        mapleCharacter.qC = characterTransfer14.hpApUsed;
        mapleCharacter13.nc = characterTransfer14.remainingSp;
        mapleCharacter13.yb = a2.remainingHSp;
        mapleCharacter.iA = characterTransfer13.remainingAp;
        mapleCharacter12.Gd = characterTransfer13.savedHairs;
        mapleCharacter12.fb = a2.savedFaces;
        mapleCharacter.VB = characterTransfer12.beans;
        mapleCharacter11.vA = characterTransfer12.meso;
        mapleCharacter11.id = a2.gmLevel;
        mapleCharacter.jd = characterTransfer11.skinColor;
        mapleCharacter10.WA = characterTransfer11.gender;
        mapleCharacter10.ob = a2.job;
        mapleCharacter.zc = characterTransfer10.hair;
        mapleCharacter9.dA = characterTransfer10.face;
        mapleCharacter9.nC = a2.accountid;
        mapleCharacter.Qc = characterTransfer9.mapid;
        mapleCharacter8.uA = characterTransfer9.initialSpawnPoint;
        mapleCharacter8.wc = a2.world;
        mapleCharacter.kB = characterTransfer8.mBookCover;
        mapleCharacter7.lB = characterTransfer8.dojo;
        mapleCharacter7.bB = a2.dojoRecord;
        mapleCharacter.RA = characterTransfer7.guildid;
        mapleCharacter6.aB = characterTransfer7.guildrank;
        mapleCharacter6.jB = a2.alliancerank;
        mapleCharacter.sA = characterTransfer6.points;
        mapleCharacter5.jc = characterTransfer6.vpoints;
        mapleCharacter5.yc = a2.fairyExp;
        mapleCharacter.Jd = characterTransfer5.marriageId;
        mapleCharacter4.sC = characterTransfer5.currentrep;
        mapleCharacter4.cA = a2.totalrep;
        mapleCharacter.SA = characterTransfer4.charmessage;
        mapleCharacter3.xc = characterTransfer4.expression;
        mapleCharacter3.Lc = a2.constellation;
        mapleCharacter.oA = characterTransfer3.blood;
        mapleCharacter2.pB = characterTransfer3.month;
        mapleCharacter2.QA = a2.day;
        mapleCharacter.wB = characterTransfer2.gachexp;
        mapleCharacter.Nb = characterTransfer2.MobCount;
        CharacterTransfer characterTransfer36 = a2;
        mapleCharacter.makeMFC(a2.familyid, characterTransfer36.seniorid, characterTransfer36.junior1, a2.junior2);
        if (mapleCharacter.RA > 0) {
            mapleCharacter.Rb = new MapleGuildCharacter(mapleCharacter);
        }
        MapleCharacter mapleCharacter38 = mapleCharacter;
        CharacterTransfer characterTransfer37 = a2;
        MapleCharacter mapleCharacter39 = mapleCharacter;
        mapleCharacter39.tB = new BuddyList(a2.buddysize);
        mapleCharacter39.zC = a2.subcategory;
        mapleCharacter38.OB = characterTransfer37.prefix;
        mapleCharacter38.Za = characterTransfer37.dpm;
        if (a422) {
            CharacterTransfer characterTransfer38;
            block26: {
                MapleCharacter mapleCharacter40;
                MapleMapFactory a422 = ChannelServer.getInstance(a3.getWorld(), a3.getChannel()).getMapFactory();
                MapleCharacter mapleCharacter41 = mapleCharacter;
                mapleCharacter41.rC = a422.getMap(mapleCharacter41.Qc);
                if (mapleCharacter41.rC == null) {
                    mapleCharacter40 = mapleCharacter;
                    mapleCharacter.rC = a422.getMap(100000000);
                } else {
                    if (mapleCharacter.rC.getForcedReturnId() != 999999999) {
                        mapleCharacter.rC = mapleCharacter.rC.getForcedReturnMap();
                    }
                    mapleCharacter40 = mapleCharacter;
                }
                object2 = mapleCharacter40.rC.getPortal(mapleCharacter.uA);
                if (object2 == null) {
                    object2 = mapleCharacter.rC.getPortal(0);
                    mapleCharacter.uA = 0;
                }
                mapleCharacter.setPosition(object2.getPosition());
                if (GameSetConstants.MAPLE_VERSION >= 147) {
                    try {
                        mapleCharacter.V.loadCards(a3, true);
                        characterTransfer38 = a2;
                        break block26;
                    }
                    catch (SQLException sQLException) {
                        sQLException.printStackTrace();
                    }
                }
                characterTransfer38 = a2;
            }
            int n3 = characterTransfer38.messengerid;
            if (n3 > 0) {
                mapleCharacter.hB = World.Messenger.getMessenger(n3);
            }
        } else {
            mapleCharacter.hB = null;
        }
        if ((a422 = a2.partyid) >= 0 && (object2 = World.Party.getParty(a422)) != null && ((MapleParty)object2).getMemberById(mapleCharacter.XC) != null) {
            mapleCharacter.ed = object2;
        }
        Iterator<Object> iterator = a2.Quest.entrySet().iterator();
        Iterator<Object> iterator2 = iterator;
        while (iterator2.hasNext()) {
            object = iterator.next();
            MapleQuest a422 = MapleQuest.getInstance(object.getKey());
            MapleQuestStatus mapleQuestStatus = (MapleQuestStatus)object.getValue();
            object2 = new MapleQuestStatus(a422, mapleQuestStatus.getStatus());
            MapleQuestStatus mapleQuestStatus2 = mapleQuestStatus;
            Object object3 = object2;
            ((MapleQuestStatus)object3).setForfeited(mapleQuestStatus.getForfeited());
            ((MapleQuestStatus)object3).setCustomData(mapleQuestStatus.getCustomData());
            ((MapleQuestStatus)object2).setCompletionTime(mapleQuestStatus2.getCompletionTime());
            if (mapleQuestStatus2.getMobKills() != null) {
                Iterator<Map.Entry<Integer, Integer>> iterator3 = mapleQuestStatus.getMobKills().entrySet().iterator();
                while (iterator3.hasNext()) {
                    Iterator<Map.Entry<Integer, Integer>> iterator4;
                    Map.Entry<Integer, Integer> entry = iterator4.next();
                    ((MapleQuestStatus)object2).setMobKills(entry.getKey(), entry.getValue());
                    iterator3 = iterator4;
                }
            }
            mapleCharacter.XB.put(a422, (MapleQuestStatus)object2);
            iterator2 = iterator;
        }
        iterator = a2.Skills.entrySet().iterator();
        Iterator<Object> iterator5 = iterator;
        while (iterator5.hasNext()) {
            object = iterator.next();
            mapleCharacter.sB.put(SkillFactory.getSkill(object.getKey()), (SkillEntry)object.getValue());
            iterator5 = iterator;
        }
        iterator = a2.finishedAchievements.iterator();
        Iterator<Object> iterator6 = iterator;
        while (iterator6.hasNext()) {
            object = (Integer)iterator.next();
            iterator6 = iterator;
            mapleCharacter.lc.add((Integer)object);
        }
        iterator = a2.traits.entrySet().iterator();
        Iterator<Object> iterator7 = iterator;
        while (iterator7.hasNext()) {
            object = (Map.Entry)iterator.next();
            mapleCharacter.Ta.get(object.getKey()).setExp((Integer)object.getValue());
            iterator7 = iterator;
        }
        iterator = a2.friendships.entrySet().iterator();
        Iterator<Object> iterator8 = iterator;
        while (iterator8.hasNext()) {
            object = (Map.Entry)iterator.next();
            mapleCharacter.na.get(object.getKey()).setPoints((Integer)object.getValue());
            iterator8 = iterator;
        }
        MapleCharacter mapleCharacter42 = mapleCharacter;
        CharacterTransfer characterTransfer39 = a2;
        mapleCharacter42.lA = characterTransfer39.antiMacro;
        mapleCharacter42.qA = new MonsterBook(a2.mbook);
        mapleCharacter42.LA = (MapleInventory[])characterTransfer39.inventorys;
        mapleCharacter.vB = a2.BlessOfFairy;
        if (GameSetConstants.MAPLE_VERSION >= 134) {
            mapleCharacter.oB = a2.BlessOfEmpress;
        }
        mapleCharacter.rA = (SkillMacro[])a2.skillmacro;
        MapleCharacter mapleCharacter43 = mapleCharacter;
        CharacterTransfer characterTransfer40 = a2;
        MapleCharacter mapleCharacter44 = mapleCharacter;
        CharacterTransfer characterTransfer41 = a2;
        MapleCharacter mapleCharacter45 = mapleCharacter;
        MapleCharacter mapleCharacter46 = mapleCharacter;
        CharacterTransfer characterTransfer42 = a2;
        mapleCharacter46.HB = characterTransfer42.petStore;
        mapleCharacter46.Pd = new MapleKeyLayout(a2.keymap);
        mapleCharacter45.CA = characterTransfer42.InfoQuest;
        mapleCharacter45.Gb = a2.savedlocation;
        mapleCharacter.FC = characterTransfer41.wishlist;
        mapleCharacter44.DB = characterTransfer41.rocks;
        mapleCharacter44.ZC = a2.regrocks;
        mapleCharacter.tB.loadFromTransfer(a2.buddies);
        mapleCharacter.bC = 0L;
        mapleCharacter.eb = characterTransfer40.lastfametime;
        mapleCharacter43.oC = characterTransfer40.famedcharacters;
        mapleCharacter43.gb = (MapleStorage)a2.storage;
        if (GameSetConstants.STORAGE_EXCEED) {
            mapleCharacter.mC = a2.storage_exceed;
        }
        mapleCharacter.nd = (CashShop)a2.cs;
        a3.setAccountName(a2.accountname);
        MapleCharacter mapleCharacter47 = mapleCharacter;
        CharacterTransfer characterTransfer43 = a2;
        mapleCharacter.Ab = a2.MaplePoints;
        mapleCharacter.LC = characterTransfer43.clonez;
        mapleCharacter47.uc = characterTransfer43.imps;
        mapleCharacter47.Cc = a2.fatigue;
        MapleCharacter mapleCharacter48 = mapleCharacter;
        if (GameConstants.isKOC(mapleCharacter48.ob)) {
            n2 = 10001004;
            characterTransfer = a2;
        } else if (GameConstants.isAran(mapleCharacter.ob)) {
            n2 = 20001004;
            characterTransfer = a2;
        } else {
            n2 = 1004;
            characterTransfer = a2;
        }
        CharacterTransfer characterTransfer44 = a2;
        mapleCharacter47.bc = new MapleMount(mapleCharacter48, a2.mount_itemid, n2, characterTransfer.mount_Fatigue, characterTransfer44.mount_level, characterTransfer44.mount_exp);
        MapleCharacter mapleCharacter49 = mapleCharacter;
        int n4 = mapleCharacter49.GB.hp;
        int n5 = mapleCharacter49.GB.mp;
        mapleCharacter49.GB.recalcLocalStats(true);
        mapleCharacter49.GB.hp = n4;
        mapleCharacter49.GB.mp = n5;
        return mapleCharacter49;
    }

    public /* synthetic */ boolean getCanTalk_event() {
        MapleCharacter a2;
        return a2.Ec;
    }

    public /* synthetic */ void addLinePoint(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        long l2 = mapleCharacter.getLinePoint() + (long)a2;
        mapleCharacter.setCharacterSet(MapleNodes.ALLATORIxDEMO("Be@i\u9ed0\u6554"), l2, false);
    }

    public /* synthetic */ MapleMount getMount() {
        MapleCharacter a2;
        return a2.bc;
    }

    public /* synthetic */ void saveGuildStatus() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        MapleCharacter mapleCharacter2 = a2;
        MapleGuild.saveCharacterGuildInfo(mapleCharacter.RA, mapleCharacter.aB, mapleCharacter2.jB, mapleCharacter2.XC);
    }

    public /* synthetic */ void getDiseaseBuff(MapleBuffStat a2, int a32, long a4, int a5, int a6) {
        MapleCharacter a7;
        if (GameSetConstants.MAPLE_VERSION >= 134) {
            a7.giveDebuff(a2, a32, a4, a5, a6);
            return;
        }
        if (a7.isInvincible()) {
            if (a7.isShowInfo()) {
                a7.showInfo(FixDropNullItem.ALLATORIxDEMO("\u7546\u5e7e\u72f6\u610d"), false, "\u7121\u6575\u72c0\u614b\u6d88\u9664\u7570\u5e38\u72c0\u614b - " + a2.name());
            }
            return;
        }
        if (a7.useMagicShield()) {
            return;
        }
        if (a7.getPotential4() > 0L && (long)Randomizer.rand(1, 10000) <= a7.getPotential4()) {
            a7.dropMessage(-1, "\u6dfa\u80fd\u6fc0\u767c\u72c0\u614b\u6d88\u9664\u7570\u5e38\u72c0\u614b - " + a2.name());
            return;
        }
        List<Pair<MapleBuffStat, Integer>> a32 = Collections.singletonList(new Pair<MapleBuffStat, Integer>(a2, a32));
        if (!a7.hasDisease(a2) && a7.qc.size() < 2) {
            if (a2 != MapleBuffStat.SEDUCE && a2 != MapleBuffStat.STUN && a7.isActiveBuffedValue(2321005)) {
                return;
            }
            MapleBuffStat mapleBuffStat = a2;
            MapleBuffStat mapleBuffStat2 = a2;
            a7.qc.put(mapleBuffStat2, new MapleDiseaseValueHolder(mapleBuffStat2, System.currentTimeMillis(), a4));
            MapleCharacter mapleCharacter = a7;
            mapleCharacter.Cb.sendPacket(MaplePacketCreator.giveDebuff(a32, a5, a6, (int)a4));
            MapleCharacter mapleCharacter2 = a7;
            mapleCharacter.rC.broadcastMessage(mapleCharacter2, MaplePacketCreator.giveForeignDebuff(mapleCharacter2.XC, a32, a5, a6, 0), false);
        }
    }

    public /* synthetic */ void autoJob_\u6230\u570b() {
        MapleCharacter a2;
        if (JobConstants.is\u528d\u8c6a(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter1stJobLevel(a2.ob)) {
                a2.changeJob(4100);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                a2.changeJob(4110);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(4111);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter4thJobLevel(a2.ob)) {
                a2.changeJob(4112);
                return;
            }
        } else if (JobConstants.is\u9670\u967d\u5e2b(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter1stJobLevel(a2.ob)) {
                a2.changeJob(4200);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                a2.changeJob(4210);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(4211);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter4thJobLevel(a2.ob)) {
                a2.changeJob(4212);
            }
        }
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ void gainDonate(String a, int a) {
        var3_4 = DBConPool.getInstance().getDataSource().getConnection();
        try {
            v0 = var4_6 = var3_4.prepareStatement(FixDropNullItem.ALLATORIxDEMO("r\u0003z\u0003b\u0003\u0016\u0000d\t{fR)X'B#\u0016\u0011~\u0003d\u0003\u0016'U%Y3X2\u0016{\u0016y\u0016'X\"\u0016\u0016W?u)R#\u0016{\u0016y"));
            v0.setString(1, a.getClient().getAccountName());
            v0.setString(2, a);
            v0.execute();
            var4_6.close();
            var3_4.close();
            a.gainDonatePoint(a, true);
            ** if (var3_4 == null) goto lbl-1000
        }
        catch (Throwable var4_7) {
            if (var3_4 == null) ** GOTO lbl26
            try {
                var3_4.close();
                v1 = var4_7;
                ** GOTO lbl27
            }
            catch (Throwable a) {
                try {
                    var4_7.addSuppressed(a);
lbl26:
                    // 2 sources

                    v1 = var4_7;
lbl27:
                    // 2 sources

                    throw v1;
                }
                catch (SQLException var3_5) {
                    System.out.println("gainDonate error:" + var3_5);
                }
            }
        }
lbl-1000:
        // 1 sources

        {
            var3_4.close();
            return;
        }
lbl-1000:
        // 1 sources

        {
        }
    }

    public /* synthetic */ int getMobVac_X() {
        MapleCharacter a2;
        return a2.QC;
    }

    public /* synthetic */ int getconstellation() {
        MapleCharacter a2;
        return a2.Lc;
    }

    /*
     * Enabled aggressive block sorting
     */
    public static /* synthetic */ boolean isVpn(String a2) {
        int n2;
        block15: {
            if (!GameSetConstants.BANIP) {
                return true;
            }
            String string = a2;
            int n3 = -1;
            switch (string.hashCode()) {
                case -218956429: {
                    if (!string.equals(MapleNodes.ALLATORIxDEMO("\u0003?\u0002=\u0018 \u001d:\u0019 \u001e<\u001c"))) break;
                    n2 = n3 = 0;
                    break block15;
                }
                case -641759509: {
                    if (!string.equals(FixDropNullItem.ALLATORIxDEMO("\u0019s\u000fh\u0007t\u0003h\u0003h\u0003t"))) break;
                    n2 = n3 = 1;
                    break block15;
                }
                case -685134090: {
                    if (!string.equals(MapleNodes.ALLATORIxDEMO("!\u00197\u0002?\u001e8\u00027\u001b \u001d<\u001f"))) break;
                    n2 = n3 = 2;
                    break block15;
                }
                case 645706596: {
                    if (!string.equals(FixDropNullItem.ALLATORIxDEMO("\u0019p\u0006h\u0004s\u0007h\u0001u\u0018w\u0006v"))) break;
                    n2 = n3 = 3;
                    break block15;
                }
                case 1562443102: {
                    if (!string.equals(MapleNodes.ALLATORIxDEMO("\u00038\u001d \u001e?\u0015 \u001e?\u001a \u001d9\u001f"))) break;
                    n2 = n3 = 4;
                    break block15;
                }
                case 1562443103: {
                    if (!string.equals(FixDropNullItem.ALLATORIxDEMO("i\u0000w\u0018t\u0007\u007f\u0018t\u0007p\u0018w\u0001r"))) break;
                    n2 = n3 = 5;
                    break block15;
                }
                case 796693722: {
                    if (!string.equals(MapleNodes.ALLATORIxDEMO("\u00038\u001d \u001e<\u001b \u001e;\u001e \u001d8\u0015"))) break;
                    n2 = n3 = 6;
                    break block15;
                }
                case -1091107193: {
                    if (!string.equals(FixDropNullItem.ALLATORIxDEMO("i\u0000w\u0018t\u0004~\u0018t\u0004~\u0018w\u0004~"))) break;
                    n2 = n3 = 7;
                    break block15;
                }
                case -587737019: {
                    if (!string.equals(MapleNodes.ALLATORIxDEMO("\u0003=\u0019 \u001e>\u001d \u001e<\u0014 \u001d?\u001f"))) break;
                    n3 = 8;
                }
            }
            n2 = n3;
        }
        switch (n2) {
            case 0: 
            case 1: 
            case 2: 
            case 3: 
            case 4: 
            case 5: 
            case 6: 
            case 7: 
            case 8: {
                return true;
            }
        }
        return false;
    }

    public /* synthetic */ void setGashaponMega() {
        MapleCharacter a2;
        if (a2.fc) {
            a2.fc = false;
            a2.dropMessage(5, FixDropNullItem.ALLATORIxDEMO("\u7507\u65fa\u609e\u959a\u95bf\u4ec0\u9859\u797c\u7d96\u8234\u5ed5\u64eb\uff3a\u6206\u4ed3\u60ee\u773d\u4e4b\u89bd\u4ebd\u4f63\u76c2\u7d96\u8234\u5ed5\u64eb\uff3a\u59c4\u67aa\u89c7\u6265\u95cd\u8afd\u6215v\u0001W5^'F)X\u000bS!W\u3044"));
            return;
        }
        a2.fc = true;
        a2.dropMessage(5, MapleNodes.ALLATORIxDEMO("\u76c2\u5243\u5dde\u7d9d\u627f\u9585\u9843\u7934\u7d8c\u827c\u5ecf\u64a3\uff20\u82eb\u89ad\u5183\u6b0d\u95d2\u95a5\u8ac5\u627fNko_fM~C`akKo\u302e"));
    }

    public /* synthetic */ void setKillCount(int a2) {
        a.pC = a2;
    }

    public /* synthetic */ void setMobMove(boolean a2) {
        MapleCharacter a3;
        if (!MapConstants.isVonleonMap(a3.getMapId()) && !MobConstants.isForceRespawn(a3.getMapId())) {
            if (a3.xa == a2) {
                MapleCharacter mapleCharacter = a3;
                ++mapleCharacter.ta;
                if (mapleCharacter.ta > 50) {
                    String string = "(\u5730\u5716: " + a3.getMapId() + " \u983b\u9053: " + a3.getClient().getChannel() + "\u9023\u7e8c\u89f8\u767c\u6b21\u6578:" + a3.ta + ")";
                    a3.getCheatTracker().registerOffense(CheatingOffense.\u63a7\u602a_\u65b0, string);
                    a3.ta = 0;
                    return;
                }
            } else {
                a3.xa = a2;
                a3.ta = 0;
            }
        }
    }

    public /* synthetic */ int getOnlineMins() {
        MapleCharacter a2;
        return (int)a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u4efc\u65a3\u571e\u7d9c\u5230\u945e"), false);
    }

    public /* synthetic */ void setLottoryStatus(boolean a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u62a3\u6cae\u72f6\u610d"), a2, false);
    }

    public /* synthetic */ void setexpression(int a2) {
        a.xc = a2;
    }

    public /* synthetic */ void setBeansStage(int a2) {
        a.Sc = a2;
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ int getBossLog(int a, String a) {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [1[TRYBLOCK], 3[TRYBLOCK]], but top level block is 5[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ long getQuestPoint(int a22) {
        MapleCharacter a3;
        long l2 = 0L;
        MapleQuestStatus a22 = a3.getQuestNAdd(MapleQuest.getInstance(a22));
        if (a22 != null && a22.getCustomData() != null) {
            l2 = Long.parseLong(a22.getCustomData());
        }
        return l2;
    }

    public final /* synthetic */ int getCombo() {
        MapleCharacter a2;
        return a2.AC;
    }

    public /* synthetic */ List<LifeMovementFragment> getLastRes() {
        MapleCharacter a2;
        return a2.Tb;
    }

    public /* synthetic */ void addCharacterSet(String a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.setCharacterSet(a2, mapleCharacter.getCharacterSet(a2) + 1L);
    }

    public /* synthetic */ int getAccountID() {
        MapleCharacter a2;
        return a2.nC;
    }

    public /* synthetic */ List<MapleDoor> getDoors() {
        MapleCharacter a2;
        return new ArrayList<MapleDoor>(a2.Sb);
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ void onAttack(MapleMonster a2, long a3, int a42, AttackInfo a5, int a6, int a7, int a8) {
        ISkill iSkill;
        MapleCharacter mapleCharacter;
        MapleCharacter a9;
        block42: {
            MapleCharacter mapleCharacter2;
            int[] arrn;
            int n2;
            Object object;
            block41: {
                int n3;
                MapleStatEffect mapleStatEffect;
                MapleCharacter mapleCharacter3;
                Object object2;
                MapleCharacter mapleCharacter4;
                double d2;
                block44: {
                    block43: {
                        MapleQuestStatus mapleQuestStatus;
                        int n4;
                        if (a9.GB.hpRecoverProp > 0 && Randomizer.nextInt(100) <= a9.GB.hpRecoverProp) {
                            MapleCharacter mapleCharacter5 = a9;
                            mapleCharacter5.healHP(mapleCharacter5.GB.hpRecover);
                            if (mapleCharacter5.GB.hpRecoverPercent > 0 && (n4 = (int)((double)a8 * (double)a9.GB.hpRecoverPercent / 100.0)) > 0) {
                                a9.addHP(n4);
                            }
                        }
                        if (a9.GB.mpRecoverProp > 0 && !JobConstants.is\u4e0d\u4f7f\u7528MP\u8077\u696d(a9.getJob()) && Randomizer.nextInt(100) <= a9.GB.mpRecoverProp) {
                            MapleCharacter mapleCharacter6 = a9;
                            mapleCharacter6.healMP(mapleCharacter6.GB.mpRecover);
                        }
                        if (MapleJob.is\u51f1\u6492(a9.ob) && (mapleQuestStatus = a9.getQuest(MapleQuest.getInstance(25723))) != null && mapleQuestStatus.getStatus() == 1) {
                            if (a2.getId() == 2400000 && a6 == 61001101) {
                                MapleQuestStatus mapleQuestStatus2 = mapleQuestStatus;
                                mapleQuestStatus2.setForfeited(mapleQuestStatus2.getForfeited() + 1);
                                a9.dropMessage("\u60a8\u9084\u9700\u8981\u7df4\u7fd2 " + (10 - mapleQuestStatus.getForfeited()) + " \u6b21\u706b\u7130\u885d\u64ca\u5373\u53ef\u81ea\u52d5\u5b8c\u6210\u4efb\u52d9!");
                            }
                            if (mapleQuestStatus.getForfeited() >= 10) {
                                MapleQuest.getInstance(25723).complete(a9, 0);
                            }
                        }
                        if (GameSetConstants.MAPLE_VERSION >= 147 && a6 == 13111006 && !a2.getStats().isBoss()) {
                            n4 = a9.getSkillLevel(a6) - 1;
                            int n5 = n4 + 10;
                            int n6 = a8 * n5 / 100;
                            if (n6 > a9.getMaxHp() / 2) {
                                n6 = a9.getMaxHp() / 2;
                            }
                            if ((long)n6 > a2.getStats().getHp()) {
                                n6 = (int)a2.getStats().getHp();
                            }
                            a9.addHP(n6);
                        }
                        if (a9.getBuffedValue(MapleBuffStat.COMBO_DRAIN) == null) break block43;
                        MapleCharacter mapleCharacter7 = a9;
                        MapleStatEffect mapleStatEffect2 = mapleCharacter7.getStatForBuff(MapleBuffStat.COMBO_DRAIN);
                        switch (mapleCharacter7.getBuffSource(MapleBuffStat.COMBO_DRAIN)) {
                            case 32101004: {
                                long l2 = Math.min((long)a8, a2.getMobMaxHp());
                                d2 = (double)l2 * ((double)mapleStatEffect2.getX() / 100.0);
                                MapleCharacter mapleCharacter8 = a9;
                                mapleCharacter4 = mapleCharacter8;
                                mapleCharacter8.addHP((int)d2);
                                break block44;
                            }
                            case 31121002: {
                                long l3 = Math.min((long)a8, a2.getMobMaxHp());
                                d2 = (double)l3 * ((double)mapleStatEffect2.getX() / 100.0);
                                if (a9.getParty() != null) {
                                    object2 = a9.getParty().getOnlineMembers().iterator();
                                    break;
                                }
                                MapleCharacter mapleCharacter9 = a9;
                                mapleCharacter4 = mapleCharacter9;
                                mapleCharacter9.addHP((int)d2);
                                break block44;
                            }
                            default: {
                                a9.addHP((int)Math.min(a2.getMobMaxHp(), (long)Math.min((int)((double)a8 * (double)mapleStatEffect2.getX() / 100.0), a9.GB.getMaxHp() / 2)));
                                break block43;
                            }
                        }
                        while (object2.hasNext()) {
                            MaplePartyCharacter maplePartyCharacter = object2.next();
                            object = a9.getMap().getCharacterById(maplePartyCharacter.getId());
                            if (object == null || !((MapleCharacter)object).isAlive()) continue;
                            if (d2 >= (double)((MapleCharacter)object).getStat().getCurrentMaxHp() * 0.03) {
                                MapleCharacter mapleCharacter10 = object;
                                mapleCharacter10.addHP((int)((double)mapleCharacter10.getStat().getCurrentMaxHp() * 0.03));
                                continue;
                            }
                            ((MapleCharacter)object).addHP((int)d2);
                        }
                    }
                    mapleCharacter4 = a9;
                }
                if (mapleCharacter4.getBuffSource(MapleBuffStat.COMBO_DRAIN) == 23101003) {
                    MapleCharacter mapleCharacter11 = a9;
                    mapleCharacter11.addMP(Math.min(a42, Math.min((int)((double)a8 * (double)a9.getStatForBuff(MapleBuffStat.COMBO_DRAIN).getX() / 100.0), mapleCharacter11.GB.getMaxMp() / 2)));
                }
                MapleCharacter mapleCharacter12 = a9;
                if (a9.getBuffedValue(MapleBuffStat.ABSORB_DAMAGE_HP) != null) {
                    MapleStatEffect mapleStatEffect3 = mapleCharacter12.getStatForBuff(MapleBuffStat.ABSORB_DAMAGE_HP);
                    long l4 = Math.min((long)a8, a2.getMobMaxHp());
                    d2 = (double)l4 * ((double)mapleStatEffect3.getZ() / 100.0);
                    MapleCharacter mapleCharacter13 = a9;
                    mapleCharacter3 = mapleCharacter13;
                    mapleCharacter13.addHP((int)d2);
                } else {
                    if (mapleCharacter12.getBuffedValue(MapleBuffStat.FINAL_JUDGMENT_DRAW) != null) {
                        long l5 = Math.min((long)a8, a2.getMobMaxHp());
                        double d3 = (double)l5 * 0.03;
                        a9.addHP((int)d3);
                    }
                    mapleCharacter3 = a9;
                }
                if (mapleCharacter3.getBuffedValue(MapleBuffStat.REAPER) != null && a9.getBuffedValue(MapleBuffStat.SUMMON) == null && a9.getSummonsSize() < 4 && a9.canSummon() && (mapleStatEffect = a9.getStatForBuff(MapleBuffStat.REAPER)).makeChanceResult()) {
                    MapleCharacter mapleCharacter14 = a9;
                    mapleStatEffect.applyTo(mapleCharacter14, mapleCharacter14, false, null, mapleStatEffect.getDuration());
                }
                if (a9.getJob() == 212 || a9.getJob() == 222 || a9.getJob() == 232) {
                    int n7;
                    int[] arrn2 = new int[3];
                    arrn2[0] = 2120010;
                    arrn2[1] = 2220010;
                    arrn2[2] = 2320011;
                    int[] arrn3 = arrn2;
                    int[] arrn4 = arrn2;
                    int n8 = arrn4.length;
                    int n9 = n7 = 0;
                    while (n9 < n8) {
                        n2 = arrn4[n7];
                        object2 = SkillFactory.getSkill(n2);
                        if (a9.getTotalSkillLevel((ISkill)object2) > 0) {
                            Object object3 = object2;
                            MapleStatEffect mapleStatEffect4 = object3.getEffect(a9.getTotalSkillLevel((ISkill)object3));
                            if (!mapleStatEffect4.makeChanceResult() || a9.getAllLinkMid().size() >= mapleStatEffect4.getY()) break;
                            MapleCharacter mapleCharacter15 = a9;
                            mapleCharacter15.setLinkMid(a7, mapleStatEffect4.getX());
                            mapleStatEffect4.applyTo(mapleCharacter15);
                            break;
                        }
                        n9 = ++n7;
                    }
                }
                int[] arrn5 = new int[7];
                arrn5[0] = 4110011;
                arrn5[1] = 4120005;
                arrn5[2] = 4210010;
                arrn5[3] = 4220005;
                arrn5[4] = 4320005;
                arrn5[5] = 4340001;
                arrn5[6] = 14110004;
                int[] arrn6 = arrn5;
                arrn = arrn5;
                int n10 = arrn.length;
                int n11 = n3 = 0;
                while (n11 < n10) {
                    int n12;
                    block47: {
                        block46: {
                            block45: {
                                n2 = arrn[n3];
                                if (n2 != 4110011) break block45;
                                if (a9.getTotalSkillLevel(4120011) <= 0) break block46;
                                n12 = n2 = 4120011;
                                break block47;
                            }
                            if (n2 == 4210010 && a9.getTotalSkillLevel(4220011) > 0) {
                                n2 = 4220011;
                            }
                        }
                        n12 = n2;
                    }
                    object2 = SkillFactory.getSkill(n12);
                    if (a9.getTotalSkillLevel((ISkill)object2) > 0) {
                        Object object4 = object2;
                        MapleStatEffect mapleStatEffect5 = object4.getEffect(a9.getTotalSkillLevel((ISkill)object4));
                        object = a9.rC.getMonsterByOid(a7);
                        if (object == null || mapleStatEffect5 == null || !mapleStatEffect5.makeChanceResult() || a2 == null) break;
                        MapleCharacter mapleCharacter16 = a9;
                        mapleCharacter2 = mapleCharacter16;
                        MapleCharacter mapleCharacter17 = a9;
                        ((MapleMonster)object).applyStatus(mapleCharacter16, new MonsterStatusEffect(MonsterStatus.POISON, 1, n2, null, false), true, mapleStatEffect5.getDuration(), true, mapleStatEffect5);
                        break block41;
                    }
                    n11 = ++n3;
                }
                mapleCharacter2 = a9;
            }
            if (mapleCharacter2.getJob() == 212 || a9.getJob() == 222 || a9.getJob() == 232) {
                int n13;
                int[] arrn7 = new int[3];
                arrn7[0] = 2120010;
                arrn7[1] = 2220010;
                arrn7[2] = 2320011;
                arrn = arrn7;
                int[] arrn8 = arrn7;
                int[] arrn9 = arrn;
                n2 = arrn.length;
                int n14 = n13 = 0;
                while (n14 < n2) {
                    int n15 = arrn9[n13];
                    object = SkillFactory.getSkill(n15);
                    if (a9.getTotalSkillLevel((ISkill)object) > 0) {
                        Object object5 = object;
                        MapleStatEffect a42 = object5.getEffect(a9.getTotalSkillLevel((ISkill)object5));
                        MapleCharacter mapleCharacter18 = a9;
                        MapleMonster mapleMonster = a2;
                        a9.setSkillTemp(n15, mapleMonster.getObjectId());
                        mapleCharacter18.addLinkMid(mapleMonster.getObjectId(), a5.hits);
                        if (mapleCharacter18.getLinkMid(a2.getObjectId()) > 3 && a42.makeChanceResult()) {
                            if (a9.getArcanceDamage() < a42.getY() * a42.getX()) {
                                a9.addArcanceDamage(a42.getX());
                            }
                            a42.applyTo(a9);
                            mapleCharacter = a9;
                            break block42;
                        }
                    }
                    n14 = ++n13;
                }
            }
            mapleCharacter = a9;
        }
        if (mapleCharacter.getBuffedValue(MapleBuffStat.DAMAGE_ABSORBED) != null) {
            int n16;
            int n17 = (int)Math.abs((double)a8 * 0.01);
            if (n17 > (n16 = a9.GB.getCurrentMaxHp() - a9.GB.getHp())) {
                n17 = n16;
            }
            a9.addHP(n17);
        }
        if (a6 <= 0) return;
        ISkill iSkill2 = iSkill = SkillFactory.getSkill(a6);
        MapleStatEffect mapleStatEffect = iSkill2.getEffect(a9.getTotalSkillLevel(iSkill2));
        switch (a6) {
            case 1078: 
            case 11078: 
            case 3111008: 
            case 4101005: 
            case 5111004: 
            case 14101006: 
            case 15111001: 
            case 31111003: 
            case 33111006: {
                a9.addHP((int)Math.min(a3, (long)Math.min((int)((double)a8 * (double)mapleStatEffect.getX() / 100.0), a9.GB.getMaxHp() / 2)));
                return;
            }
            case 5211006: 
            case 5220011: 
            case 5221015: 
            case 5721003: 
            case 22151002: {
                a9.setLinkMid(a7, mapleStatEffect.getX());
                return;
            }
            case 33101007: {
                a9.clearLinkMid();
                return;
            }
            case 30010112: {
                if (mapleStatEffect == null || !a2.getStats().isBoss()) return;
                a9.addMP(mapleStatEffect.getX());
                return;
            }
        }
    }

    public /* synthetic */ void setNpcNow(int a2) {
        a.sb = a2;
    }

    public /* synthetic */ void playerDiedCPQ(String a2, int a3, int a4) {
        MapleCharacter a5;
        a5.Cb.sendPacket(MonsterCarnivalPacket.playerDiedMessage(a2, a3, a4));
    }

    public /* synthetic */ void addMPHP(int a2, int a3) {
        int n2;
        MapleCharacter a4;
        ArrayList<Pair<MapleStat, Integer>> arrayList = new ArrayList<Pair<MapleStat, Integer>>();
        if (a2 < 0 && a4.getPotential7() > 0L) {
            n2 = (int)((double)((long)a2 * a4.getPotential7()) * 1.0E-4);
            a2 -= n2;
        }
        if (!((GameSetConstants.isClickGameMap(a4.getMap().getId()) || a4.getMap().isClickGameMap() || FieldLimitType.PotionUse.check(a4.getMap().getFieldLimit())) && a4.getMapId() != 610030600 && a4.getMapId() != 105100300 || a4.getAllDiseases().size() != 0)) {
            n2 = a4.getAutoHP();
            int n3 = Math.abs(a2);
            if (n2 != 0 && MapleItemInformationProvider.getInstance().itemExists(n2) && (n3 >= a4.getHp() || a4.getHp() * 100 / a4.getMaxHp() < a4.getAutoHPPercent()) && a4.haveItem(n2) && MapleItemInformationProvider.getInstance().getItemEffect(n2).applyTo(a4) && !GameSetConstants.isNoConsumeItem(n2)) {
                MapleInventoryManipulator.removeById(a4.Cb, GameConstants.getInventoryType(n2), n2, true ? 1 : 0, true, false);
            }
            n2 = a4.getAutoMP();
            n3 = Math.abs(a3);
            if (n2 != 0 && MapleItemInformationProvider.getInstance().itemExists(n2) && (n3 >= a4.getMp() || a4.getMp() * 100 / a4.getMaxMp() < a4.getAutoMPPercent()) && a4.haveItem(n2) && MapleItemInformationProvider.getInstance().getItemEffect(n2).applyTo(a4) && !GameSetConstants.isNoConsumeItem(n2)) {
                MapleInventoryManipulator.removeById(a4.Cb, GameConstants.getInventoryType(n2), n2, true ? 1 : 0, true, false);
            }
        }
        MapleCharacter mapleCharacter = a4;
        if (mapleCharacter.GB.setHp(mapleCharacter.GB.getHp() + a2)) {
            arrayList.add(new Pair<MapleStat, Integer>(MapleStat.HP, a4.GB.getHp()));
        }
        MapleCharacter mapleCharacter2 = a4;
        if (mapleCharacter2.GB.setMp(mapleCharacter2.GB.getMp() + a3)) {
            arrayList.add(new Pair<MapleStat, Integer>(MapleStat.MP, a4.GB.getMp()));
        }
        if (arrayList.size() > 0) {
            a4.Cb.sendPacket(MaplePacketCreator.updatePlayerStats(arrayList, a4));
        }
    }

    public /* synthetic */ int getHonourExp() {
        MapleCharacter a2;
        return a2.U;
    }

    public /* synthetic */ void modifyAchievementCSPoints(int a2, int a3) {
        MapleCharacter a4;
        a4.modifyCSPoints(a2, a3);
    }

    public /* synthetic */ void addMagicBulletCount() {
        MapleCharacter a2;
        if (GameSetConstants.MAPLE_VERSION >= 147 && a2.getBuffedValue(MapleBuffStat.ENHANCED_WATK) != null) {
            MapleStatEffect mapleStatEffect = null;
            long l2 = -1L;
            int n2 = 0;
            MapleCharacter mapleCharacter = a2;
            MapleBuffStatValueHolder mapleBuffStatValueHolder = mapleCharacter.getBuffStatValueHolder(MapleBuffStat.ENHANCED_WATK, 5211009);
            mapleStatEffect = mapleBuffStatValueHolder.effect;
            n2 = mapleBuffStatValueHolder.effect.getX();
            l2 = mapleBuffStatValueHolder.startTime;
            mapleCharacter.addSkillTemp(5211009);
            if (mapleCharacter.getSkillTemp(5211009) > (long)n2) {
                MapleCharacter mapleCharacter2 = a2;
                mapleCharacter2.setSkillTemp(5211009, 0);
                mapleCharacter2.cancelEffect(mapleStatEffect, false, l2);
            }
        }
    }

    public /* synthetic */ void addMobVac2_Count() {
        MapleCharacter a2;
        ++a2.Na;
    }

    public /* synthetic */ void startLieDetector(boolean a2) {
        MapleCharacter a3;
        if (!(a3.getMapId() >= 910000000 && a3.getMapId() <= 910000022 || a3.getMapId() == 800040410 || MapConstants.isFishingMap(a3.getMapId()) || a3.getMap().getReturnMapId() == a3.getMapId())) {
            if (a3.getAntiMacro().isPassed()) {
                a3.getAntiMacro().setPassed(false);
            }
            if (!a3.getAntiMacro().inProgress()) {
                a3.getAntiMacro().startLieDetector(a3.getName(), a2, false);
            }
        }
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ int getMonsterPetLevel(int a) {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [3[TRYBLOCK], 1[TRYBLOCK]], but top level block is 5[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ void showNote() {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [3[TRYBLOCK]], but top level block is 6[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ void setLottoryNumber2(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6a44\u9039\u7b6a\u4eba\u504d\u8669\u78fa"), a2, false);
    }

    public /* synthetic */ int getFlyChairId() {
        MapleCharacter a2;
        return a2.KA;
    }

    public /* synthetic */ int getDirection() {
        MapleCharacter a2;
        return a2.Ob;
    }

    public /* synthetic */ MapleSidekick getSidekick() {
        MapleCharacter a2;
        return a2.Ia;
    }

    public /* synthetic */ void removeAll(int a2, boolean a3, boolean a42) {
        MapleCharacter a5;
        MapleInventoryType a42 = GameConstants.getInventoryType(a2);
        int n2 = a5.getInventory(a42).countById(a2);
        if (n2 > 0) {
            MapleInventoryManipulator.removeById(a5.getClient(), a42, a2, n2, true, false);
            if (a3) {
                a5.getClient().sendPacket(MaplePacketCreator.getShowItemGain(a2, (short)(-n2), true));
            }
        }
    }

    public /* synthetic */ Collection<MapleMapObject> getAndWriteLockVisibleMapObjects() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.AA.writeLock().lock();
        return mapleCharacter.MB;
    }

    public /* synthetic */ void setSkillTemp(int a2, int a3) {
        MapleCharacter a4;
        a4.setCharacterSetTemp(Integer.toString(a2), a3);
    }

    public /* synthetic */ int getVipFromMeso() {
        MapleCharacter a2;
        return (int)a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u695d\u5e4f\u63d5zG|"), false);
    }

    public /* synthetic */ String getChrInfo(String a2) {
        MapleCharacter a3;
        return "\r\n" + FileoutputUtil.NowTime() + "\u89d2\u8272" + a3.getName() + "(\u7de8\u865f: " + a3.getId() + ")\u7b49\u7d1a:" + a3.getLevel() + "\u983b\u9053: " + a3.Cb.getChannel() + "\u52d5\u4f5c:" + a2;
    }

    public /* synthetic */ String getVipName() {
        MapleCharacter a2;
        String string = "";
        long l2 = a2.getClient().getTotalDonate();
        if (GameSetConstants.VIPSYSTEM) {
            if (a2.getVip() > 0) {
                string = ServerConfig.getVipMedalName(a2.getVip());
                return string;
            }
        } else {
            if (l2 >= 20000L) {
                string = ServerConfig.getVipMedalName(5);
                return string;
            }
            if (l2 >= 10000L) {
                string = ServerConfig.getVipMedalName(4);
                return string;
            }
            if (l2 >= 5000L) {
                string = ServerConfig.getVipMedalName(3);
                return string;
            }
            if (l2 >= 2000L) {
                string = ServerConfig.getVipMedalName(2);
                return string;
            }
            if (l2 >= 1000L) {
                string = ServerConfig.getVipMedalName(1);
            }
        }
        return string;
    }

    public /* synthetic */ void gainFishReward(int a23, boolean a2222) {
        MapleCharacter a3;
        int n2 = a23 == 2300001 || a23 == 2300003 ? 1 : 0;
        a23 = FishingRewardFactory.getInstance().getNextRewardType();
        n2 = Randomizer.rand(0, n2 != 0 ? 10 : 20);
        if (a2222 && n2 == 1) {
            n2 = 0;
        }
        switch (a23) {
            case 0: {
                MapleCharacter mapleCharacter;
                int n3;
                while (false) {
                }
                if (a3.getcheck_FishingVip()) {
                    n3 = 15;
                    mapleCharacter = a3;
                } else {
                    n3 = 10;
                    mapleCharacter = a3;
                }
                a23 = Randomizer.rand(n3, mapleCharacter.getcheck_FishingVip() ? 300 : 150);
                if (a3.Cb.getPlayer().getMeso() >= a3.Cb.getPlayer().getMeso() + a23) {
                    MapleCharacter mapleCharacter2 = a3;
                    mapleCharacter2.Cb.sendPacket(MaplePacketCreator.getErrorNotice(MapleNodes.ALLATORIxDEMO("\u751d\u65b2\u8e87\u4e04\u76a8\u695d\u5e4f\u8d8b\u51d6\u757e\u5e14\uff02\u8ae7\u5146\u6558\u7408\u5fa0\u5183\u95a7\u59c5\u91cf\u9b54\uff2d")));
                    mapleCharacter2.cancelFishingTask();
                    return;
                }
                MapleCharacter mapleCharacter3 = a3;
                mapleCharacter3.gainMeso(a23, true);
                mapleCharacter3.Cb.sendPacket(UIPacket.fishingUpdate((byte)1, a23));
                return;
            }
            case 1: {
                a23 = 800;
                if (GameSetConstants.SERVER_NAME.equals(FixDropNullItem.ALLATORIxDEMO("\u6915\u4e7d\u7593"))) {
                    a23 = 6500;
                }
                if (GameSetConstants.SERVER_NAME.equals(MapleNodes.ALLATORIxDEMO("\u569a\u56b8\u8c1b"))) {
                    a23 = 400;
                }
                if (GameSetConstants.SERVER_NAME.equals(FixDropNullItem.ALLATORIxDEMO("\u868d\u7ce3\u8c71"))) {
                    a23 = 8000;
                }
                MapleCharacter mapleCharacter = a3;
                a23 = Randomizer.nextInt(Math.abs(GameConstants.getExpNeededForLevel(mapleCharacter.IC) / a23) + 1);
                mapleCharacter.gainExp(mapleCharacter.getcheck_FishingVip() ? a23 * 3 / 2 : a23, true, false, true);
                a3.Cb.sendPacket(UIPacket.fishingUpdate((byte)2, a23));
                return;
            }
        }
        FishingRewardFactory.FishingReward a23 = FishingRewardFactory.getInstance().getNextRewardItemId();
        if (a23 != null) {
            int n4;
            block18: {
                if (!MapleInventoryManipulator.checkSpace(a3.Cb, a23.getItemId(), 1, a3.getName())) {
                    MapleCharacter mapleCharacter = a3;
                    mapleCharacter.Cb.sendPacket(MaplePacketCreator.getErrorNotice(MapleNodes.ALLATORIxDEMO("\u4f4c\u768a\u80e0\u530b\u5dde\u7d9d\u6ed3\u4e88\uff2d")));
                    mapleCharacter.cancelFishingTask();
                    return;
                }
                if (!a2222) {
                    MapleInventoryManipulator.addById(a3.Cb, a23.getItemId(), (short)1, ItemConstants.isChair(a23.getItemId()) ? a3.getName() : null, null, a23.getExpiration());
                    a3.Cb.sendPacket(UIPacket.fishingUpdate((byte)0, a23.getItemId()));
                    a3.dropMessage(5, "[\u91e3\u9b5a\u7cfb\u7d71] \u7372\u5f97\u4e86\u9053\u5177 - " + MapleItemInformationProvider.getInstance().getName(a23.getItemId()));
                    return;
                }
                if (a3.getPlayerFishing() == null) {
                    a3.cancelHiredFishingTask();
                    return;
                }
                MapleItemInformationProvider a2222 = MapleItemInformationProvider.getInstance();
                int a2222 = 50;
                a2222 = 0;
                for (MaplePlayerShopItem maplePlayerShopItem : a3.getPlayerFishing().getItems()) {
                    if (GameConstants.getInventoryType(a23.getItemId()) == MapleInventoryType.EQUIP || a23.getItemId() != maplePlayerShopItem.item.getItemId()) continue;
                    MaplePlayerShopItem maplePlayerShopItem2 = maplePlayerShopItem;
                    maplePlayerShopItem2.item.setQuantity((short)(maplePlayerShopItem2.item.getQuantity() + 1));
                    n4 = a2222 = 1;
                    break block18;
                }
                n4 = a2222;
            }
            if (n4 == 0) {
                IItem iItem = GameConstants.getInventoryType(a23.getItemId()) == MapleInventoryType.EQUIP ? MapleItemInformationProvider.getInstance().getEquipById(a23.getItemId()) : new Item(a23.getItemId(), 0, 1, 0);
                iItem.setGMLog("\u91e3\u9b5a\u7372\u5f97" + a23.getItemId() + ", \u6642\u9593:" + FileoutputUtil.CurrentReadable_Date());
                a3.getPlayerFishing().addItem(new MaplePlayerShopItem(iItem, 1, 0));
                return;
            }
        }
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ void resetStatsByJob(boolean a2) {
        MapleCharacter mapleCharacter;
        MapleCharacter a3;
        a2 = a2 ? a3.ob % 1000 : a3.ob % 1000 / 100 * 100;
        boolean bl = a3.getQuestNoAdd(MapleQuest.getInstance(111111)) != null;
        switch (a2 ? 1 : 0) {
            case 100: {
                a3.resetStats(bl ? 4 : 25, 4, 4, 4);
                mapleCharacter = a3;
                break;
            }
            case 200: {
                MapleCharacter mapleCharacter2 = a3;
                mapleCharacter = mapleCharacter2;
                mapleCharacter2.resetStats(4, 4, 20, 4);
                break;
            }
            case 300: 
            case 400: {
                MapleCharacter mapleCharacter3 = a3;
                mapleCharacter = mapleCharacter3;
                mapleCharacter3.resetStats(4, 25, 4, 4);
                break;
            }
            case 500: {
                MapleCharacter mapleCharacter4 = a3;
                mapleCharacter = mapleCharacter4;
                mapleCharacter4.resetStats(4, 20, 4, 4);
                break;
            }
            case 508: {
                MapleCharacter mapleCharacter5 = a3;
                mapleCharacter = mapleCharacter5;
                mapleCharacter5.resetStats(4, 4, 4, 4);
                break;
            }
            default: {
                mapleCharacter = a3;
            }
        }
        switch (mapleCharacter.ob) {
            case 6100: {
                a3.resetStats(35, 4, 4, 4);
                return;
            }
            case 2700: {
                a3.resetStats(4, 4, 35, 4);
                return;
            }
        }
    }

    public /* synthetic */ int getPartyMapMembers() {
        MapleCharacter a2;
        if (a2.getParty() == null) {
            return 0;
        }
        int n2 = 1;
        for (MaplePartyCharacter maplePartyCharacter : a2.getParty().getMembers()) {
            if (a2.Cb.getChannel() != maplePartyCharacter.getChannel() || a2.getMapId() != maplePartyCharacter.getMapid() || maplePartyCharacter.getId() == a2.getId()) continue;
            ++n2;
        }
        return n2;
    }

    public /* synthetic */ void cancelPlayerBuffs(List<MapleBuffStat> a2, boolean a32) {
        MapleCharacter a4;
        if (a4.Cb.getChannelServer() != null) {
            MapleCharacter mapleCharacter;
            boolean bl;
            boolean bl2 = bl = a4.Cb.getChannelServer().getPlayerStorage().getCharacterById(a4.getId()) != null;
            if (a32) {
                ArrayList<MapleBuffStat> a32 = new ArrayList<MapleBuffStat>();
                for (MapleBuffStat mapleBuffStat : a2) {
                    if (!mapleBuffStat.canStack()) continue;
                    a32.add(mapleBuffStat);
                }
                if (a32.size() <= 0) {
                    return;
                }
                a2 = a32;
                mapleCharacter = a4;
            } else {
                if (a2.contains(MapleBuffStat.HOMING_BEACON)) {
                    if (bl) {
                        a4.Cb.sendPacket(MaplePacketCreator.cancelHoming());
                    }
                    return;
                }
                if (bl) {
                    a4.GB.recalcLocalStats();
                }
                mapleCharacter = a4;
            }
            mapleCharacter.Cb.sendPacket(MaplePacketCreator.cancelBuff(a2));
            MapleCharacter mapleCharacter2 = a4;
            a4.rC.broadcastMessage(mapleCharacter2, MaplePacketCreator.cancelForeignBuff(mapleCharacter2.getId(), a2), false);
        }
        if (a2.contains(MapleBuffStat.MONSTER_RIDING) && JobConstants.isEvan(a4.ob) && a4.ob >= 2200) {
            MapleCharacter mapleCharacter = a4;
            mapleCharacter.makeDragon();
            mapleCharacter.rC.broadcastMessage(MaplePacketCreator.spawnDragon(a4.PB));
        }
    }

    public /* synthetic */ void giftMedal(int a2) {
        MapleCharacter a3;
        if (!a3.getInventory(MapleInventoryType.EQUIP).isFull() && a3.getInventory(MapleInventoryType.EQUIP).countById(a2) == 0 && a3.getInventory(MapleInventoryType.EQUIPPED).countById(a2) == 0) {
            MapleCharacter mapleCharacter = a3;
            MapleInventoryManipulator.addById(mapleCharacter.Cb, a2, (short)1);
            World.Broadcast.broadcastMessage(MaplePacketCreator.getItemNotice("[\u606d\u559c]" + mapleCharacter.getName() + "\u525b\u624d\u5f97\u5230\u4e86 " + MapleItemInformationProvider.getInstance().getName(a2) + "\uff01"));
            return;
        }
        if (a3.getInventory(MapleInventoryType.EQUIP).countById(a2) == 0 && a3.getInventory(MapleInventoryType.EQUIPPED).countById(a2) == 0) {
            MapleCharacter mapleCharacter = a3;
            MapleInventoryManipulator.drop(a3.Cb, MapleInventoryType.EQUIP, (short)1, (short)1);
            MapleInventoryManipulator.addById(mapleCharacter.Cb, a2, (short)1);
            World.Broadcast.broadcastMessage(MaplePacketCreator.getItemNotice("[\u606d\u559c]" + mapleCharacter.getName() + "\u525b\u624d\u5f97\u5230\u4e86 " + MapleItemInformationProvider.getInstance().getName(a2) + "\uff01"));
        }
    }

    public /* synthetic */ void setPee(int a2) {
        MapleCharacter mapleCharacter;
        MapleCharacter a3;
        a3.HC = a2;
        if (GameSetConstants.PEETOPOO) {
            MapleCharacter mapleCharacter2 = a3;
            mapleCharacter = mapleCharacter2;
            mapleCharacter2.pooEffects();
        } else {
            MapleCharacter mapleCharacter3 = a3;
            mapleCharacter = mapleCharacter3;
            mapleCharacter3.peeEffects();
        }
        if (mapleCharacter.Aa == 0) {
            a3.Aa = Randomizer.rand(1000, 9999);
        }
    }

    @Override
    public /* synthetic */ void setObjectId(int a2) {
        throw new UnsupportedOperationException();
    }

    public /* synthetic */ long getCooldownLimit(int a2) {
        MapleCharacter a3;
        for (MapleCoolDownValueHolder mapleCoolDownValueHolder : a3.getAllCooldowns()) {
            if (mapleCoolDownValueHolder.skillId != a2) continue;
            return System.currentTimeMillis() - mapleCoolDownValueHolder.startTime;
        }
        return 0L;
    }

    public /* synthetic */ void removeCooldown(int a2) {
        MapleCharacter a3;
        if (a3.kA.containsKey(a2)) {
            a3.kA.remove(a2);
        }
    }

    public /* synthetic */ int getBeansStage() {
        MapleCharacter a2;
        return a2.Sc;
    }

    public /* synthetic */ void addEarnGash(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        long l2 = mapleCharacter.getEarnGash() + (long)a2;
        mapleCharacter.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u4ec4\u65c9\u737c\u5fbbIM}D"), l2, false);
    }

    public /* synthetic */ void startHiredFishingTask() {
        MapleCharacter a2;
        a2.cancelHiredFishingTask();
        a2.ua = System.currentTimeMillis();
    }

    public /* synthetic */ void changeMap(MapleMap a2, Point a3) {
        MapleCharacter a4;
        MapleMap mapleMap = a2;
        a4.ALLATORIxDEMO(mapleMap, a3, MaplePacketCreator.getWarpToMap(mapleMap, 129, a4), null);
    }

    public /* synthetic */ void setPotential3(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u6a51\u73ab\u712f\u89ba\u50b9\u5b9f"), a2, false);
    }

    public /* synthetic */ int getAutoHPPercent() {
        MapleCharacter a2;
        int n2 = (int)a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u81dc\u5293\u88ea\u8806\u6be2\u4fcd"), false);
        if (n2 > 100) {
            n2 = 100;
            return 100;
        }
        if (n2 == 0) {
            n2 = 50;
        }
        return n2;
    }

    public final /* synthetic */ void setFriendShipToAdd(int a2) {
        a.z = a2;
    }

    public /* synthetic */ long getCharacterSetToday(String a2, boolean a3) {
        MapleCharacter a4;
        a2 = "\u65e5\u8a08" + (String)a2 + FileoutputUtil.NowDay();
        return a4.getCharacterSet((String)a2, a3);
    }

    public /* synthetic */ void setLapidification(boolean a2) {
        a.Q = a2;
    }

    public /* synthetic */ void addKillHpAdd(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u6bb4\u6006\u52ae\u886c"), mapleCharacter.getKillHpAdd() + (long)a2, false);
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public final /* synthetic */ void gainOfflineItem(int a, int a) {
        block9: {
            if (!MapleItemInformationProvider.getInstance().itemExists(a)) break block9;
            var3_4 = DBConPool.getInstance().getDataSource().getConnection();
            try {
                v0 = var4_6 = var3_4.prepareStatement(MapleNodes.ALLATORIxDEMO("E`_k^z\fgBzC.ChJbE`IgXkA.\u0004oOmC{BzEj\u0000.EzIcEj\u0000.OaY`X'\fxMbYk_.\u00041\u0000.\u0013\"\f1\u0005"));
                var4_6.setInt(1, a.nC);
                v0.setInt(2, a);
                var4_6.setInt(3, a);
                v0.execute();
                var4_6.close();
                ** if (var3_4 == null) goto lbl-1000
            }
            catch (Throwable var4_7) {
                if (var3_4 == null) ** GOTO lbl26
                try {
                    var3_4.close();
                    v1 = var4_7;
                    ** GOTO lbl27
                }
                catch (Throwable a) {
                    try {
                        var4_7.addSuppressed(a);
lbl26:
                        // 2 sources

                        v1 = var4_7;
lbl27:
                        // 2 sources

                        throw v1;
                    }
                    catch (SQLException var3_5) {
                        System.err.println(var3_5);
                    }
                }
            }
lbl-1000:
            // 1 sources

            {
                var3_4.close();
                return;
            }
lbl-1000:
            // 1 sources

            {
            }
        }
    }

    public /* synthetic */ void setBattleshipHP(int a2) {
        a.FB = a2;
    }

    public /* synthetic */ void clearMechDoors() {
        MapleCharacter a2;
        a2.Dd.clear();
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    public /* synthetic */ void changeSkillLevel(ISkill a2, int a3, int a4, long a5) {
        ISkill iSkill;
        MapleCharacter a6;
        MapleCharacter mapleCharacter = a6;
        if (!MapleCharacter.handleSkill(mapleCharacter, a2.getId(), mapleCharacter.ob) || a2 == null || !GameConstants.isApplicableSkill(a2.getId()) && !GameConstants.isApplicableSkill_(a2.getId())) {
            return;
        }
        a6.Cb.sendPacket(MaplePacketCreator.updateSkill(a2.getId(), a3, a4, a5));
        if (a3 == 0 && a4 == 0) {
            if (!a6.sB.containsKey(a2)) return;
            ISkill iSkill2 = a2;
            iSkill = iSkill2;
            a6.sB.remove(iSkill2);
            a6.zA = true;
        } else {
            if (a2.getId() == 1214 && a6.q == null) {
                MapleCharacter mapleCharacter2 = a6;
                MapleCharacter mapleCharacter3 = a6;
                mapleCharacter2.q = MapleCoreAura.createCoreAura(mapleCharacter2.XC, mapleCharacter3.IC);
                mapleCharacter3.updataCoreAura();
                mapleCharacter2.GB.recalcLocalStats();
            }
            a6.sB.put(a2, new SkillEntry(a3, a4, a5));
            a6.zA = true;
            iSkill = a2;
        }
        if (SkillConstants.isRecoveryIncSkill(iSkill.getId())) {
            a6.GB.relocHeal();
            return;
        }
        if (!GameConstants.isElementAmpSkill(a2.getId())) return;
        a6.GB.recalcLocalStats();
    }

    public /* synthetic */ String getSaveKeyCs() {
        MapleCharacter a2;
        return a2.N;
    }

    public /* synthetic */ boolean inBossMap() {
        MapleCharacter a2;
        return MapConstants.isBossMap(a2.getMapId());
    }

    public /* synthetic */ void baseSkills() {
        int n2;
        Object object;
        Object object2;
        MapleCharacter a2;
        if (GameConstants.getJobNumber(a2.ob) >= 3 && (object2 = SkillFactory.getSkillsByJob(a2.ob)) != null) {
            object = object2.iterator();
            while (object.hasNext()) {
                int n3 = (Integer)object.next();
                ISkill iSkill = SkillFactory.getSkill(n3);
                if (iSkill == null || iSkill.isInvisible() || !iSkill.isSkillNeedMasterLevel() || a2.getSkillLevel(iSkill) > 0 || a2.getMasterLevel(iSkill) > 0 || iSkill.getMasterLevel() <= 0) continue;
                ISkill iSkill2 = iSkill;
                a2.changeSkillLevel(iSkill2, 0, (int)((byte)iSkill2.getMasterLevel()));
            }
        }
        if (GameConstants.isMercedes(a2.ob)) {
            int n4;
            int[] arrn = new int[4];
            arrn[0] = 20020109;
            arrn[1] = 20021110;
            arrn[2] = 20020111;
            arrn[3] = 20020112;
            object = arrn;
            int[] arrn2 = arrn;
            int n5 = arrn2.length;
            int n6 = n4 = 0;
            while (n6 < n5) {
                n2 = arrn2[n4];
                object2 = SkillFactory.getSkill(n2);
                if (object2 != null && a2.getSkillLevel((ISkill)object2) <= 0) {
                    a2.changeSkillLevel((ISkill)object2, 1, 1);
                }
                n6 = ++n4;
            }
        }
        object = new HashMap();
        if (a2.isAran() && a2.getLevel() >= 10) {
            int n7;
            int[] arrn = new int[5];
            arrn[0] = 20000014;
            arrn[1] = 20000015;
            arrn[2] = 20000016;
            arrn[3] = 20000017;
            arrn[4] = 20000018;
            int[] arrn3 = arrn;
            int[] arrn4 = arrn;
            int[] arrn5 = arrn3;
            n2 = arrn3.length;
            int n8 = n7 = 0;
            while (n8 < n2) {
                int n9 = arrn5[n7];
                if (SkillFactory.getSkill(n9) != null) {
                    object.put(n9, new SkillEntry(-1, 0, -1L));
                }
                n8 = ++n7;
            }
        }
        if (!object.isEmpty()) {
            Iterator iterator;
            Iterator iterator2 = iterator = object.entrySet().iterator();
            while (iterator2.hasNext()) {
                Map.Entry entry = iterator.next();
                a2.changeSkillLevel((Integer)entry.getKey(), 0, (byte)((SkillEntry)entry.getValue()).masterlevel, -1);
                iterator2 = iterator;
            }
        }
    }

    public /* synthetic */ void changedExtended() {
        a.Lb = true;
    }

    public /* synthetic */ boolean getBeanResult() {
        MapleCharacter a2;
        return a2.BA;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    public /* synthetic */ void changeJob(int a) {
        try {
            block57: {
                block59: {
                    block58: {
                        if (a.ob == a) {
                            a.dropMessage(MapleNodes.ALLATORIxDEMO("\u60a6\u89ad\u8f47\u76a8\u8079\u6941\u8209\u73d2\u5726\u76d4\u5402\r"));
                            return;
                        }
                        var2_3 = GameSetConstants.MAPLE_VERSION >= 134 ? 99999 : 30000;
                        var3_5 = 1;
                        switch (a.getLevel()) {
                            case 8: 
                            case 10: 
                            case 30: 
                            case 70: 
                            case 120: {
                                var3_5 = 0;
                                break;
                            }
                        }
                        if (var3_5 != 0) {
                            a.dropMessage(FixDropNullItem.ALLATORIxDEMO("\u7507\u65fa\u609e\u76c2\u8f7f\u8031\u7b7f\u7d5c\u9768\u6628\u902c\u8f0f\u8041\u7b0f\u7d2c\uff4a\u62b6\u80bb\u9ee8\u7536\u5e0e\u5fca\u67aa\u81ac\u8c96\u3044"));
                        }
                        a.cancelEffectFromBuffStat(MapleBuffStat.SHADOWPARTNER);
                        a.ob = (short)a;
                        if (JobConstants.isBeginnerJob(a) || MapleJob.is\u795e\u4e4b\u5b50(a) || MapleJob.is\u5e7b\u7378\u5e2b(a)) break block57;
                        if (GameSetConstants.MAPLE_VERSION >= 145) {
                            a.addJobSkills();
                        }
                        if (GameConstants.isEvan(a) || GameConstants.isResist(a) || GameConstants.isMercedes(a)) {
                            v0 = var3_5 = a == 2200 || a == 2210 || a == 2211 || a == 2213 ? 3 : 5;
                            if (GameConstants.isResist(a.ob) && a != 3100 && a != 3200 && a != 3300 && a != 3500) {
                                var3_5 = 3;
                            }
                            v1 = a;
                            v2 = GameConstants.getSkillBook(a);
                            v1.nc[v2] = v1.nc[v2] + var3_5;
                            v1.Cb.sendPacket(UIPacket.getSPMsg((byte)var3_5, (short)a));
                            v3 = a;
                        } else {
                            if (a != 0 && a != 1000 && a != 2000 && a != 2001) {
                                v4 = a;
                                v5 = a.nc;
                                v6 = GameConstants.getSkillBook(v4);
                                v5[v6] = v5[v6] + 1;
                                if (v4 % 10 >= 2) {
                                    v7 = GameConstants.getSkillBook(a);
                                    a.nc[v7] = a.nc[v7] + 2;
                                }
                            }
                            v3 = a;
                        }
                        if (v3 <= 0) ** GOTO lbl118
                        if (GameSetConstants.RESET_STATS) {
                            a.resetStatsByJob(true);
                        }
                        if (GameConstants.isEvan(a)) break block58;
                        if (a.getLevel() <= (a == 200 ? 8 : 10) || a % 100 != 0 || a % 1000 / 100 <= 0) ** GOTO lbl118
                        v8 = GameConstants.getSkillBook(a);
                        v9 = a.nc[v8];
                        if (a.getLevel() >= 30) {
                            v10 = 30;
                            v11 = a;
                        } else {
                            v10 = a.getLevel();
                            v11 = a;
                        }
                        a.nc[v8] = v9 + 3 * (v10 - (v11 == 200 ? 8 : 10));
                        v12 = a;
                        break block59;
                    }
                    if (a == MapleJob.\u9f8d\u9b54\u5c0e\u58eb1\u8f49.getId()) {
                        MapleQuest.getInstance(22100).forceStart(a, 0, null);
                        v13 = a;
                        v12 = v13;
                        v14 = a;
                        v15 = a;
                        v16 = a;
                        v16.expandInventory((byte)1, 4);
                        v16.expandInventory((byte)2, 4);
                        v15.expandInventory((byte)3, 4);
                        v15.expandInventory((byte)4, 4);
                        v15.Cb.sendPacket(MaplePacketCreator.getEvanTutorial(MapleNodes.ALLATORIxDEMO("yG\u0003zYzC|Eo@!IxM`\u0003?\u0018!\u001c")));
                        v14.dropMessage(5, FixDropNullItem.ALLATORIxDEMO("\u9074\u5153\u5b33\u5320\u6759\u76b2\u868d\u5b43\u51bc\u4eb0\u5c49\u9fbb\u3044"));
                        v14.dropMessage(5, MapleNodes.ALLATORIxDEMO("\u737c\u5fbb\u53e1\u63fc\u5349\u9fa1\u768a\u62ac\u80f3\u9ef2\u6576\u001f\u9ed0\u302e"));
                        v13.dropMessage(5, FixDropNullItem.ALLATORIxDEMO("\u9065\u5131\u6b32\u76c2\u6b32\u4f0b\u58a8\u52e6\u4eb0\u3044"));
                        v13.dropMessage(5, MapleNodes.ALLATORIxDEMO("\u5c01\u9fa1\u5973\u50e3\u6707\u8a5d\u898f\u8a86\uff02\u9ef2\u9076\u5c23\u9f83\u54a0\u726e\u5c21\u8a7f\uff2d"));
                    } else if (a == MapleJob.\u9f8d\u9b54\u5c0e\u58eb2\u8f49.getId()) {
                        MapleQuest.getInstance(22524).forceStart(a, 1012111, null);
                        MapleQuest.getInstance(22101).forceStart(a, 0, null);
                        MapleQuest.getInstance(22101).forceComplete(a, 0);
                        v17 = a;
                        v12 = v17;
                        v17.dropMessage(5, FixDropNullItem.ALLATORIxDEMO("\u5db4\u708c\u60ee\u81dc\u5293\u6393\u5390\u4ecd\u529f\f\u7918\u79ee\u76c2\u5a35\u5a45"));
                    } else if (a == MapleJob.\u9f8d\u9b54\u5c0e\u58eb3\u8f49.getId()) {
                        MapleQuest.getInstance(22102).forceStart(a, 0, null);
                        MapleQuest.getInstance(22102).forceComplete(a, 0);
                        v12 = a;
                    } else if (a == MapleJob.\u9f8d\u9b54\u5c0e\u58eb4\u8f49.getId()) {
                        MapleQuest.getInstance(22103).forceStart(a, 0, null);
                        MapleQuest.getInstance(22103).forceComplete(a, 0);
                        v12 = a;
                    } else if (a == MapleJob.\u9f8d\u9b54\u5c0e\u58eb5\u8f49.getId()) {
                        MapleQuest.getInstance(22104).forceStart(a, 0, null);
                        MapleQuest.getInstance(22104).forceComplete(a, 0);
                        v12 = a;
                    } else if (a == MapleJob.\u9f8d\u9b54\u5c0e\u58eb6\u8f49.getId()) {
                        MapleQuest.getInstance(22105).forceStart(a, 0, null);
                        MapleQuest.getInstance(22105).forceComplete(a, 0);
                        v12 = a;
                    } else if (a == MapleJob.\u9f8d\u9b54\u5c0e\u58eb7\u8f49.getId()) {
                        MapleQuest.getInstance(22106).forceStart(a, 0, null);
                        MapleQuest.getInstance(22106).forceComplete(a, 0);
                        v12 = a;
                    } else if (a == MapleJob.\u9f8d\u9b54\u5c0e\u58eb8\u8f49.getId()) {
                        MapleQuest.getInstance(22107).forceStart(a, 0, null);
                        MapleQuest.getInstance(22107).forceComplete(a, 0);
                        v12 = a;
                    } else if (a == MapleJob.\u9f8d\u9b54\u5c0e\u58eb9\u8f49.getId()) {
                        MapleQuest.getInstance(22108).forceStart(a, 0, null);
                        MapleQuest.getInstance(22108).forceComplete(a, 0);
                        v12 = a;
                    } else {
                        if (a == MapleJob.\u9f8d\u9b54\u5c0e\u58eb10\u8f49.getId()) {
                            MapleQuest.getInstance(22109).forceStart(a, 0, null);
                            MapleQuest.getInstance(22109).forceComplete(a, 0);
                        }
lbl118:
                        // 5 sources

                        v12 = a;
                    }
                }
                v12.updateSingleStat(MapleStat.JOB, a);
                if (!a.isGM()) {
                    a.Cb.sendPacket(MaplePacketCreator.updateSp(a, false));
                }
            }
            v18 = a;
            var3_5 = v18.GB.getMaxHp();
            var4_6 = v18.GB.getMaxMp();
            switch (v18.ob) {
                case 100: 
                case 1100: 
                case 2100: 
                case 3200: {
                    v19 = var3_5 = var3_5 + Randomizer.rand(200, 250);
                    break;
                }
                case 200: 
                case 2200: 
                case 2210: {
                    var4_6 += Randomizer.rand(100, 150);
                    v19 = var3_5;
                    break;
                }
                case 300: 
                case 400: 
                case 500: {
                    var4_6 += Randomizer.rand(25, 50);
                    v19 = var3_5 += Randomizer.rand(100, 150);
                    break;
                }
                case 110: {
                    v19 = var3_5 = var3_5 + Randomizer.rand(300, 350);
                    break;
                }
                case 120: 
                case 130: 
                case 510: 
                case 512: 
                case 1110: 
                case 2110: {
                    v19 = var3_5 = var3_5 + Randomizer.rand(300, 350);
                    break;
                }
                case 210: 
                case 220: 
                case 230: {
                    var4_6 += Randomizer.rand(400, 450);
                    v19 = var3_5;
                    break;
                }
                case 310: 
                case 312: 
                case 320: 
                case 322: 
                case 410: 
                case 412: 
                case 420: 
                case 422: 
                case 430: 
                case 520: 
                case 522: 
                case 1310: 
                case 1410: {
                    v19 = var3_5 = (var3_5 += Randomizer.rand(300, 350)) + Randomizer.rand(150, 200);
                    break;
                }
                case 800: 
                case 900: {
                    var3_5 += var2_3;
                    var3_5 += var2_3;
                }
                default: {
                    v19 = var3_5;
                }
            }
            if (v19 >= var2_3) {
                var3_5 = var2_3;
            }
            if (var4_6 >= var2_3) {
                var4_6 = var2_3;
            }
            if (JobConstants.is\u60e1\u9b54\u6bba\u624b(a.ob)) {
                var4_6 = GameConstants.getMaxMPByJob(a);
            }
            v20 = a;
            v20.GB.setMaxHp(var3_5);
            v20.GB.setMaxMp(var4_6);
            v20.GB.setHp(var3_5);
            a.GB.setMp(var4_6);
            var5_7 = new ArrayList<Pair<MapleStat, Integer>>(4);
            var5_7.add(new Pair<MapleStat, Integer>(MapleStat.MAXHP, var3_5));
            var5_7.add(new Pair<MapleStat, Integer>(MapleStat.MAXMP, var4_6));
            var5_7.add(new Pair<MapleStat, Integer>(MapleStat.HP, var3_5));
            var5_7.add(new Pair<MapleStat, Integer>(MapleStat.MP, var4_6));
            var5_7.add(new Pair<MapleStat, Integer>(MapleStat.AVAILABLEAP, Integer.valueOf(a.iA)));
            if (GameSetConstants.MAPLE_VERSION >= 147) {
                a.V.recalcLocalStats(a);
            }
            v21 = a;
            v21.GB.recalcLocalStats();
            v22 = a;
            v21.Cb.sendPacket(MaplePacketCreator.updatePlayerStats(var5_7, v22));
            v23 = a;
            v22.rC.broadcastMessage(v23, MaplePacketCreator.showForeignEffect(v23.getId(), SpecialEffect.CHANGE_JOB.getValue()), false);
            v21.silentPartyUpdate();
            v21.guildUpdate();
            v21.familyUpdate();
            v21.sidekickUpdate();
            v21.baseSkills();
            if (v21.PB != null) {
                a.rC.broadcastMessage(MaplePacketCreator.removeDragon(a.XC));
                a.PB = null;
            }
            if (a >= 2200 && a <= 2218) {
                if (a.getBuffedValue(MapleBuffStat.MONSTER_RIDING) != null) {
                    v24 = new MapleBuffStat[1];
                    v24[0] = MapleBuffStat.MONSTER_RIDING;
                    a.cancelBuffStats(v24);
                }
                a.makeDragon();
            }
            if (a == 400 && (a = MapleQuest.getInstance(2351)) != null && a.getQuest(a) != null) {
                v25 = a;
                a.Cb.sendPacket(MaplePacketCreator.getShowQuestCompletion(2351));
                a.complete(v25, 0);
                v25.dropMessage(5, "[\u5f71\u6b66\u8005]\u5df2\u81ea\u52d5\u5b8c\u6210\u5fc5\u9808\u4efb\u52d9: " + a.getName() + " \u3002");
            }
            if (JobConstants.is\u5e7b\u5f71\u4fe0\u76dc(a.ob) && a.ob != 2003) {
                v26 = a;
                v26.Cb.sendPacket(JobPacket.PhantomPacket.updateCardStack(0));
                v26.resetRunningStack();
            }
            a.checkForceShield();
            return;
        }
        catch (Exception var2_4) {
            FilePrinter.printError(MapleNodes.ALLATORIxDEMO("CM~@kofM|MmXk^ XvX"), var2_4);
            return;
        }
    }

    public /* synthetic */ void setDex(int a2) {
        MapleCharacter a3;
        a3.GB.dex = (short)a2;
        a3.GB.recalcLocalStats(false);
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     * Lifted jumps to return sites
     */
    public /* synthetic */ void saveofflinelocations() {
        var1_1 = 0;
        if (a.rC == null) return;
        v0 = new int[24];
        v0[0] = 105100300;
        v0[1] = 105100301;
        v0[2] = 541020800;
        v0[3] = 220080001;
        v0[4] = 220080000;
        v0[5] = 551030200;
        v0[6] = 551030100;
        v0[7] = 280030000;
        v0[8] = 211042200;
        v0[9] = 240060200;
        v0[10] = 0xE4EE0E0;
        v0[11] = 802000210;
        v0[12] = 802000211;
        v0[13] = 802000410;
        v0[14] = 802000411;
        v0[15] = 802000710;
        v0[16] = 802000711;
        v0[17] = 802000610;
        v0[18] = 802000611;
        v0[19] = 802000110;
        v0[20] = 802000111;
        v0[21] = 240060100;
        v0[22] = 270050100;
        v0[23] = 240060000;
        var2_3 = v0;
        v1 = var3_4 = 0;
        while (v1 < var2_3.length) {
            if (a.rC.getId() == var2_3[var3_4]) {
                var1_1 = 1;
            }
            v1 = ++var3_4;
        }
        if (var1_1 == 0) return;
        try {
            var3_5 = DBConPool.getInstance().getDataSource().getConnection();
            try {
                var4_7 = null;
                v2 = a;
                v2.D((Connection)var3_5, MapleNodes.ALLATORIxDEMO("JiBiZi.j\\cC\faJh@gBk@aOoXgC`_.{Fi\\i.OfM|MmXk^gH.\u0011.\u0013"));
                var4_7 = var3_5.prepareStatement(FixDropNullItem.ALLATORIxDEMO("\u007f\be\u0003d\u0012\u0016\u000fx\u0012yfY P*_(S*Y%W2_)X5\u0016nU.W4W%B#D/Rf\u001af['Ff\u001a%^'X(S*\u001ff`\u0007z\u0013s\u0015\u0016n\tj\u0016y\u001af\to"));
                var4_7.setInt(1, a.XC);
                var1_1 = v2.Qc;
                if (v2.rC == null) ** GOTO lbl53
                if (a.rC.getId() != 999999999) {
                    v3 = var4_7;
                    var1_1 = a.rC.getId();
                } else {
                    var1_1 = a.GB.getHp() < 1 ? a.rC.getReturnMapId() : a.rC.getId();
lbl53:
                    // 2 sources

                    v3 = var4_7;
                }
                v3.setInt(2, var1_1);
                v4 = var4_7;
                v4.setInt(3, a.Cb.getChannel());
                v4.execute();
                v4.close();
                if (var3_5 == null) return;
            }
            catch (Throwable var4_8) {
                if (var3_5 != null) {
                    try {
                        var3_5.close();
                        v5 = var4_8;
                        throw v5;
                    }
                    catch (Throwable var1_2) {
                        var4_8.addSuppressed(var1_2);
                    }
                }
                v5 = var4_8;
                throw v5;
            }
            var3_5.close();
            return;
        }
        catch (SQLException var3_6) {
            FilePrinter.printError(MapleNodes.ALLATORIxDEMO("}MxIaJh@gBk@aOoXgC`_ XvX"), var3_6);
        }
    }

    public /* synthetic */ int getPVPStage() {
        MapleCharacter a2;
        if (a2.Uc != null && a2.Uc.getName().startsWith(FixDropNullItem.ALLATORIxDEMO("\u0016`\u0016"))) {
            return Integer.parseInt(a2.Uc.getProperty(MapleNodes.ALLATORIxDEMO("@x@")));
        }
        return 0;
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ void honourLevelUp() {
        MapleCharacter mapleCharacter;
        MapleCharacter a2;
        MapleCharacter mapleCharacter2 = a2;
        mapleCharacter2.setHonorLevel(a2.getHonorLevel() + 1);
        mapleCharacter2.Cb.sendPacket(MaplePacketCreator.updateAzwanFame(a2.getHonorLevel(), a2.getHonourExp(), true));
        InnerSkillValueHolder innerSkillValueHolder = null;
        byte by = 0;
        switch (mapleCharacter2.getHonorLevel()) {
            case 2: {
                by = 1;
                mapleCharacter = a2;
                break;
            }
            case 30: {
                by = 2;
                mapleCharacter = a2;
                break;
            }
            case 70: {
                by = 3;
            }
            default: {
                mapleCharacter = a2;
            }
        }
        if (mapleCharacter.getHonorLevel() == 2 || a2.getHonorLevel() == 30 || a2.getHonorLevel() == 70 && by >= 1 && by <= 3) {
            innerSkillValueHolder = new InnerSkillValueHolder(70000015, 1, 1, (byte)(false ? 1 : 0), false);
            a2.u.add(innerSkillValueHolder);
            MapleCharacter mapleCharacter3 = a2;
            mapleCharacter3.UA = true;
            mapleCharacter3.changeSkillLevel(innerSkillValueHolder.getSkillId(), (int)innerSkillValueHolder.getSkillLevel(), innerSkillValueHolder.getSkillLevel());
            mapleCharacter3.Cb.sendPacket(MaplePacketCreator.updateInnerPotential(by, innerSkillValueHolder.getSkillId(), innerSkillValueHolder.getSkillLevel(), innerSkillValueHolder.getRank()));
        }
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ String getBossLogTime(String a, int a) {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Started 2 blocks at once
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.getStartingBlocks(Op04StructuredStatement.java:406)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:481)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ void setMp(int a2) {
        MapleCharacter a3;
        a3.getStat().setMp(a2);
    }

    public /* synthetic */ int getFollowId() {
        MapleCharacter a2;
        return a2.pc;
    }

    public /* synthetic */ void setScrolledPosition(short a2) {
        a.jA = a2;
    }

    /*
     * Enabled aggressive block sorting
     */
    private /* synthetic */ void D() {
        MapleCharacter a2;
        if (!GameConstants.isEvan(a2.ob)) return;
        switch (a2.IC) {
            case 9: {
                a2.Cb.sendPacket(MaplePacketCreator.startMapEffect(MapleNodes.ALLATORIxDEMO("\u8ae7\u78b4\u4ff1\u60a6\u9078\u523e\u001d>\u7d36\u4e45\u5261\u5b82\u623c\u624e\u6725\u4ef5\u52f5\uff02\u540a\u5249\u4f4c\u5c09\u710d\u6cdb\u8f65\u8079\u0002"), 5120000, true));
                return;
            }
            case 10: 
            case 20: 
            case 30: 
            case 40: 
            case 50: 
            case 60: 
            case 80: 
            case 100: 
            case 120: 
            case 160: {
                if (a2.ob >= 2218) return;
                MapleCharacter mapleCharacter = a2;
                mapleCharacter.changeJob(mapleCharacter.ob == 2001 ? 2200 : (a2.ob == 2200 ? 2210 : a2.ob + 1));
                a2.dropMessage(5, FixDropNullItem.ALLATORIxDEMO("\u602b\u55aa\u60ee\u76b2\u9fcb\u9b62\u5c48\u58dd\u660f\u5371\u4e46\u503d\u96c8\u6b83g"));
                return;
            }
        }
    }

    public final /* synthetic */ void spawnSavedPets() {
        MapleCharacter a2;
        int n2;
        int n3 = n2 = 0;
        while (n3 < a2.HB.length) {
            if (a2.HB[n2] > -1) {
                MapleCharacter mapleCharacter = a2;
                mapleCharacter.spawnPet(mapleCharacter.HB[n2], false, true);
            }
            n3 = ++n2;
        }
        if (GameSetConstants.MAPLE_VERSION < 123) {
            a2.Cb.sendPacket(PetPacket.petStatUpdate(a2));
        }
        byte[] arrby = new byte[3];
        arrby[0] = -1;
        arrby[1] = -1;
        arrby[2] = -1;
        a2.HB = arrby;
    }

    public /* synthetic */ boolean hasBuffedValue(MapleBuffStat a2) {
        MapleCharacter a3;
        return a3.getBuffedValue(a2) != null;
    }

    public /* synthetic */ int getCurrentBattleshipHP() {
        MapleCharacter a2;
        return a2.FB;
    }

    public /* synthetic */ void setJob(short a2) {
        a.ob = a2;
    }

    public /* synthetic */ void addBeansLight() {
        MapleCharacter a2;
        ++a2.Nd;
    }

    public /* synthetic */ void addActivity(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        long l2 = mapleCharacter.getActivity() + (long)a2;
        mapleCharacter.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6d7d\u8ebb\u5ee0"), l2, false);
    }

    public final /* synthetic */ List<MaplePet> getSummonedPets() {
        int n2;
        ArrayList<MaplePet> arrayList = new ArrayList<MaplePet>();
        int n3 = n2 = 0;
        while (n3 < 3) {
            arrayList.add(null);
            n3 = ++n2;
        }
        int n4 = n2 = 0;
        while (n4 < 3) {
            MapleCharacter a2;
            if (a2.Md != null) {
                for (MaplePet maplePet : a2.Md) {
                    int n5;
                    if (maplePet == null || !maplePet.getSummoned() || (n5 = maplePet.getSummonedValue() - 1) != n2) continue;
                    arrayList.remove(n5);
                    arrayList.add(n5, maplePet);
                    break;
                }
            }
            n4 = ++n2;
        }
        ArrayList<Object> arrayList2 = new ArrayList<Object>();
        ArrayList<MaplePet> arrayList3 = arrayList;
        arrayList2.add(null);
        arrayList3.removeAll(arrayList2);
        return arrayList3;
    }

    public /* synthetic */ void resetMinute() {
        MapleCharacter a2;
        a2.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u4ec4\u65c9\u5726\u7df6\u5208\u9434"), 0L, false);
    }

    public /* synthetic */ void DeleteHairAlbum(int a2) {
        MapleCharacter a3;
        if (a3.EA.size() > a3.JB.length) {
            return;
        }
        int n2 = 0;
        int n3 = a3.EA.size();
        int n4 = n2;
        while (n4 < n3) {
            if (a3.EA.get(n2) == 0 || a3.EA.get(n2) == a2) {
                --n3;
                a3.EA.remove(n2);
                --n2;
            }
            n4 = ++n2;
        }
        n2 = a3.JB.length - a3.EA.size();
        int n5 = n3 = 0;
        while (n5 < n2) {
            a3.EA.add(0);
            n5 = ++n3;
        }
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.setHairAlbum(mapleCharacter.EA.stream().mapToInt(Integer::intValue).toArray());
    }

    public /* synthetic */ void cancelMorphs() {
        MapleCharacter a2;
        for (MapleBuffStatValueHolder mapleBuffStatValueHolder : new LinkedList<MapleBuffStatValueHolder>(a2.kb.values())) {
            switch (mapleBuffStatValueHolder.effect.getSourceId()) {
                case 5101007: 
                case 5111005: 
                case 5121003: 
                case 13111005: 
                case 15111002: 
                case 61111008: 
                case 61120008: 
                case 61121053: {
                    return;
                }
            }
            if (!mapleBuffStatValueHolder.effect.isMorph()) continue;
            a2.cancelEffect(mapleBuffStatValueHolder.effect, false, mapleBuffStatValueHolder.startTime);
        }
    }

    public /* synthetic */ void clearAllCooldowns() {
        MapleCharacter a2;
        Iterator<MapleCoolDownValueHolder> iterator;
        Iterator<MapleCoolDownValueHolder> iterator2 = iterator = a2.getCooldowns().iterator();
        while (iterator2.hasNext()) {
            int n2 = iterator.next().skillId;
            iterator2 = iterator;
            a2.removeCooldown(n2);
        }
    }

    public /* synthetic */ long getLastAddMoveTime() {
        MapleCharacter a2;
        return a2.B;
    }

    public /* synthetic */ void gainChairExp(int a2, int a3) {
        MapleCharacter a4;
        MapleCharacter mapleCharacter = a4;
        long l2 = mapleCharacter.getChairExp(a2);
        long l3 = l2 + (long)a3;
        mapleCharacter.setCharacterSet("\u7d93\u9a57\u6905" + a2, l2 + (long)a3, false);
    }

    public /* synthetic */ int getMonsterBookCover() {
        MapleCharacter a2;
        return a2.kB;
    }

    public final /* synthetic */ Integer getBuffedSkill_Y(MapleBuffStat a2) {
        MapleCharacter a3;
        if ((a2 = a3.kb.get(a2)) == null) {
            return null;
        }
        return ((MapleBuffStatValueHolder)a2).effect.getY();
    }

    public /* synthetic */ void setReactor(MapleReactor a2) {
        a.hb = a2;
    }

    public /* synthetic */ long getLastCheckCopyTime() {
        MapleCharacter a2;
        return a2.md;
    }

    public final /* synthetic */ String getQuestInfo(int a2) {
        MapleCharacter a3;
        return a3.getQuestNAdd(MapleQuest.getInstance(a2)).getCustomData();
    }

    public /* synthetic */ void addHpWash() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        long l2 = mapleCharacter.getHpWash() + 1L;
        mapleCharacter.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6d21\u8806\u6255\u8806\u6b17\u653e"), l2, false);
    }

    public /* synthetic */ FameStatus canGiveFame(MapleCharacter a2) {
        MapleCharacter a3;
        if (a3.eb >= System.currentTimeMillis() - 86400000L) {
            return FameStatus.NOT_TODAY;
        }
        if ((a2 == null || a3.oC == null || a3.oC.contains(a2.getId())) && !GameSetConstants.SERVER_NAME.equals(FixDropNullItem.ALLATORIxDEMO("\u6c65\u571e\u4fc0"))) {
            return FameStatus.NOT_THIS_MONTH;
        }
        return FameStatus.OK;
    }

    public /* synthetic */ void addEmptyStorageMsg(String a2) {
        MapleCharacter a3;
        a3.uB = a3.uB + a2;
    }

    public final /* synthetic */ MapleCarnivalChallenge getNextCarnivalRequest() {
        MapleCharacter a2;
        return a2.Kb.pollLast();
    }

    public /* synthetic */ Map<String, Long> getCharacterSetTemp() {
        MapleCharacter a2;
        return new HashMap<String, Long>(a2.Fa);
    }

    public /* synthetic */ void setCardStack(byte a2) {
        a.s = a2;
    }

    public /* synthetic */ int getMasterLevel(ISkill a2) {
        MapleCharacter a3;
        if ((a2 = a3.sB.get(a2)) == null) {
            return 0;
        }
        return ((SkillEntry)a2).masterlevel;
    }

    public /* synthetic */ void updateUsingMoveSkill_sp(int a2, boolean a3) {
        a.g = a3 ? System.currentTimeMillis() + (long)a2 : 0L;
    }

    public /* synthetic */ void dropGMMessage(String a2) {
        MapleCharacter a3;
        if (a3.isGM()) {
            a3.dropMessage(a2);
        }
    }

    public /* synthetic */ void setMap(MapleMap a2) {
        a.rC = a2;
    }

    public /* synthetic */ void resetArcanceDamage() {
        MapleCharacter a2;
        a2.setSkillTemp(2120000, 0);
    }

    public final /* synthetic */ void maxSkillsByJob2() {
        MapleCharacter a2;
        HashMap<ISkill, SkillEntry> hashMap = new HashMap<ISkill, SkillEntry>();
        for (ISkill iSkill : SkillFactory.getAllSkills()) {
            if (!iSkill.canBeLearnedBy(a2.ob) || iSkill.isZeroSkill(a2.ob)) continue;
            ISkill iSkill2 = iSkill;
            ISkill iSkill3 = iSkill;
            hashMap.put(iSkill3, new SkillEntry(iSkill3.getMaxLevel(), iSkill.getMaxLevel(), -1L));
            if (GameSetConstants.MAPLE_VERSION > 113) continue;
            ISkill iSkill4 = iSkill;
            a2.changeSkillLevel(iSkill4, (int)iSkill.getMaxLevel(), (int)iSkill4.getMaxLevel());
        }
        if (GameSetConstants.MAPLE_VERSION > 113) {
            a2.changeSkillLevel(hashMap);
        }
    }

    public /* synthetic */ void setLevel(short a2) {
        a.IC = a2;
    }

    public /* synthetic */ void setSkinColor(byte a2) {
        a.jd = a2;
    }

    public /* synthetic */ boolean useMagicShield() {
        MapleCharacter a2;
        MapleStatEffect mapleStatEffect = a2.getStatForBuff(MapleBuffStat.ABNORMAL_BUFF_RESISTANCES);
        if (mapleStatEffect == null) {
            return false;
        }
        int n2 = a2.getBuffedValue(MapleBuffStat.ABNORMAL_BUFF_RESISTANCES);
        if (n2 <= 0) {
            a2.cancelEffectFromBuffStat(MapleBuffStat.ABNORMAL_BUFF_RESISTANCES);
            if (mapleStatEffect.getSourceId() == 27111004) {
                MapleCharacter mapleCharacter = a2;
                mapleCharacter.Cb.sendPacket(MaplePacketCreator.skillCooldown(mapleStatEffect.getSourceId(), mapleStatEffect.getCooldown(a2)));
                mapleCharacter.addCooldown(mapleStatEffect.getSourceId(), System.currentTimeMillis(), mapleStatEffect.getCooldown(a2) * 1000);
            }
            return false;
        }
        MapleCharacter mapleCharacter = a2;
        if (--n2 > 0) {
            mapleCharacter.setBuffedValue(MapleBuffStat.ABNORMAL_BUFF_RESISTANCES, n2);
            List<Pair<MapleBuffStat, Integer>> list = Collections.singletonList(new Pair<MapleBuffStat, Integer>(MapleBuffStat.ABNORMAL_BUFF_RESISTANCES, n2));
            a2.Cb.sendPacket(MaplePacketCreator.giveBuff(mapleStatEffect.getSourceId(), 0, list, mapleStatEffect, a2));
        } else {
            mapleCharacter.cancelEffectFromBuffStat(MapleBuffStat.ABNORMAL_BUFF_RESISTANCES);
            if (mapleStatEffect.getSourceId() == 27111004) {
                MapleCharacter mapleCharacter2 = a2;
                mapleCharacter2.Cb.sendPacket(MaplePacketCreator.skillCooldown(mapleStatEffect.getSourceId(), mapleStatEffect.getCooldown(a2)));
                mapleCharacter2.addCooldown(mapleStatEffect.getSourceId(), System.currentTimeMillis(), mapleStatEffect.getCooldown(a2) * 1000);
            }
        }
        return true;
    }

    public /* synthetic */ void addMSG() {
        MapleCharacter a2;
        ++a2.uC;
    }

    public /* synthetic */ void setChairExp(int a2, int a3) {
        MapleCharacter a4;
        a4.setCharacterSet("\u7d93\u9a57\u6905" + a2, a3, false);
    }

    public /* synthetic */ int addAntiMacroFailureTimes() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        int n2 = mapleCharacter.getAntiMacroFailureTimes();
        mapleCharacter.setAntiMacroFailureTimes(++n2);
        return n2;
    }

    public /* synthetic */ boolean getCharacterSetBool(String a2, boolean a3) {
        long l2;
        block2: {
            boolean bl;
            MapleCharacter a4;
            block4: {
                block3: {
                    l2 = 0L;
                    if (a4.Ca == null || a4.ga == null) break block2;
                    if (!a3) break block3;
                    if (!a4.Ca.containsKey(a2)) break block2;
                    bl = a3;
                    break block4;
                }
                if (!a4.ga.containsKey(a2)) break block2;
                bl = a3;
            }
            l2 = bl ? a4.Ca.get(a2) : a4.ga.get(a2);
        }
        return l2 > 0L;
    }

    public final /* synthetic */ void disposeClones() {
        MapleCharacter a2;
        int n2;
        a2.LC = 0;
        int n3 = n2 = 0;
        while (n3 < a2.qb.length) {
            if (a2.qb[n2].get() != null) {
                MapleCharacter mapleCharacter = a2;
                mapleCharacter.rC.removePlayer((MapleCharacter)mapleCharacter.qb[n2].get());
                ((MapleCharacter)a2.qb[n2].get()).getClient().disconnect();
                MapleCharacter mapleCharacter2 = a2;
                mapleCharacter2.qb[n2] = new WeakReference<Object>(null);
                mapleCharacter2.LC = (byte)(mapleCharacter2.LC + 1);
            }
            n3 = ++n2;
        }
    }

    public /* synthetic */ int getRemainingSp() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        if (mapleCharacter.nc[GameConstants.getSkillBook(mapleCharacter.ob)] > 300) {
            MapleCharacter mapleCharacter2 = a2;
            mapleCharacter2.nc[GameConstants.getSkillBook((int)mapleCharacter2.ob)] = 300;
        }
        MapleCharacter mapleCharacter3 = a2;
        return mapleCharacter3.nc[GameConstants.getSkillBook(mapleCharacter3.ob)];
    }

    public /* synthetic */ String getAllMobKillInfo() {
        String string;
        int n2;
        Map.Entry<String, Long> entry;
        MapleCharacter a2;
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(FixDropNullItem.ALLATORIxDEMO("eRk\u001bk\u001bk\u001bk\u001bk\u001bk\u001bk\u001b\u4e8c\u65d3\u648c\u6b8c\u606c\u725f\u59c4\u4e3dk\u001bk\u001bk\u001bk\u001bk\u001bk\u001bk\u001bk;L"));
        Iterator<Map.Entry<String, Long>> iterator = a2.ga.entrySet().iterator();
        while (iterator.hasNext()) {
            entry = iterator.next();
            if (!entry.getKey().contains(MapleNodes.ALLATORIxDEMO("\u6bc1\u65c9\u64c4\u6b96\u6024\u7245"))) continue;
            n2 = StringTool.getIntFromString(entry.getKey());
            string = MapleMonsterInformationProvider.getInstance().getMobName(n2);
            stringBuilder.append("#b\u602a\u7269: #r" + StringTool.FormatString(12, string) + " #b\u64ca\u6bba\u6578\u91cf:#r" + entry.getValue() + "\r\n");
        }
        stringBuilder.append(FixDropNullItem.ALLATORIxDEMO("eRk\u001bk\u001bk\u001bk\u001bk\u001bk\u001bk\u001b\u648c\u6b8c\u7e7b\u601c\u722f\u654e\u59c4\u4e3dk\u001bk\u001bk\u001bk\u001bk\u001bk\u001bk\u001bk;L"));
        iterator = a2.ga.entrySet().iterator();
        while (iterator.hasNext()) {
            entry = iterator.next();
            if (!entry.getKey().contains(MapleNodes.ALLATORIxDEMO("\u64e6\u6bb4\u7e11\u6024\u7245"))) continue;
            n2 = StringTool.getIntFromString(entry.getKey());
            string = MapleMonsterInformationProvider.getInstance().getMobName(n2);
            stringBuilder.append("#b\u602a\u7269: #r" + StringTool.FormatString(12, string) + " #b\u64ca\u6bba\u6578\u91cf:#r" + entry.getValue() + "\r\n");
        }
        return stringBuilder.toString();
    }

    public /* synthetic */ void setDebugMessage(boolean a2) {
        a.NC = a2;
    }

    public /* synthetic */ boolean canCheckBuff() {
        MapleCharacter a2;
        boolean bl = false;
        if (a2.qa == 0L || System.currentTimeMillis() - a2.qa > 3000L) {
            a2.qa = System.currentTimeMillis();
            bl = true;
        }
        return bl;
    }

    public /* synthetic */ boolean canLottory() {
        MapleCharacter a2;
        boolean bl = a2.getLottoryDate() == (long)FileoutputUtil.YesturdayTimeNumber();
        return bl;
    }

    public /* synthetic */ void resetRunningDarks() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        MapleCharacter mapleCharacter2 = a2;
        mapleCharacter2.f = 0;
        mapleCharacter2.h = 0;
        mapleCharacter.m = 0;
        mapleCharacter.A = 0;
    }

    public final /* synthetic */ MapleQuestStatus getQuestRemove(MapleQuest a2) {
        MapleCharacter a3;
        a3.zb = true;
        return a3.XB.remove(a2);
    }

    public /* synthetic */ void applyItemCooldowns() {
        MapleCharacter a2;
        ArrayList<String> arrayList = new ArrayList<String>();
        for (Map.Entry<String, Long> entry : a2.Fa.entrySet()) {
            String string = entry.getKey();
            if (!string.startsWith(MapleNodes.ALLATORIxDEMO("OaCbs"))) continue;
            String string2 = string;
            int n2 = Integer.valueOf(string2.substring(5, string2.length()));
            long l2 = (Long)entry.getValue();
            if (l2 > System.currentTimeMillis()) {
                MapleCharacter mapleCharacter = a2;
                mapleCharacter.getClient().sendPacket(MaplePacketCreator.itemCooldown(false, n2, 0L));
                mapleCharacter.getClient().sendPacket(MaplePacketCreator.updateItemCoolTime(n2, l2 - System.currentTimeMillis()));
                continue;
            }
            arrayList.add(string);
        }
        Iterator<Map.Entry<String, Long>> iterator = arrayList.iterator();
        Iterator<Object> iterator2 = iterator;
        while (iterator2.hasNext()) {
            Map.Entry<String, Long> entry;
            entry = (String)((Object)iterator.next());
            iterator2 = iterator;
            a2.setCharacterSetTemp((String)((Object)entry), 0L);
        }
    }

    public static /* synthetic */ void deletefunctionCharacterid(Connection a2, String a32, int a4, String a5) {
        try {
            Object object = a32 = a2.prepareStatement((String)a32);
            object.setInt(1, a4);
            a32.setString(2, a5);
            object.executeUpdate();
            a32.close();
            return;
        }
        catch (Exception a32) {
            FilePrinter.printError(FixDropNullItem.ALLATORIxDEMO("\"S*S2S C(U2_)X\u0005^'D'U2S4_\"\u00182N2"), a32, MapleNodes.ALLATORIxDEMO("wjIbIzIhY`OzEaBMDo^oOzI|Ejq"));
            return;
        }
    }

    public /* synthetic */ void setMarriageItemId(int a2) {
        a.db = a2;
    }

    public final /* synthetic */ boolean canRecover(long a2) {
        MapleCharacter a3;
        return a3.Jb > 0L && a3.Jb + 5000L < a2;
    }

    public /* synthetic */ void addOnlineMins(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        long l2 = mapleCharacter.getOnlineMins() + a2;
        mapleCharacter.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u4ec4\u65c9\u5726\u7df6\u5208\u9434"), l2, false);
        mapleCharacter.addOnlineTotalMins(a2);
        mapleCharacter.dropDebugMessage("[GM\u63d0\u793a] \u5df2\u589e\u52a0\u639b\u6a5f\u5206\u9418\u6578, \u76ee\u524d\u5206\u9418\u6578: " + mapleCharacter.getOnlineMins());
    }

    public /* synthetic */ int getEquipExpRate() {
        MapleCharacter a2;
        return a2.GB.EquipExp;
    }

    public /* synthetic */ void addUseCube(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        long l2 = mapleCharacter.getUseCube() + (long)a2;
        mapleCharacter.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u4f49\u756e\u5971\u5e3d\u658f\u580c"), l2, false);
    }

    public /* synthetic */ int getShadowKillCount() {
        MapleCharacter a2;
        return (int)a2.getSkillTemp(4221013);
    }

    public /* synthetic */ long getPotentialTotal() {
        MapleCharacter a2;
        long l2 = 0L;
        l2 = a2.getPotentialAll() + a2.getExtraPotential();
        return l2;
    }

    public final /* synthetic */ void updateInfoQuest(int a2, String a3) {
        MapleCharacter a4;
        if (a3 == null) {
            a3 = "";
        }
        a4.CA.put(a2, a3);
        a4.Cb.sendPacket(MaplePacketCreator.updateInfoQuest(a2, a3));
        a4.xB = true;
    }

    public /* synthetic */ int getRechargeAdd(MapleStatEffect a2) {
        MapleCharacter a3;
        int n2 = a2.getActive();
        if (n2 == 0) {
            return -1;
        }
        n2 += a3.getStat().reChargeChance;
        if (a2.getSourceId() == 65111100 && a3.getSkillLevel(65120045) > 0) {
            n2 += SkillFactory.getSkill(65120045).getEffect(a3.getSkillLevel(65120045)).getActive();
        }
        a2 = null;
        if (a3.getKillMob_Temp_using() && a3.getTotalSkillLevel(65100005) > 0) {
            a2 = SkillFactory.getSkill(65100005).getEffect(a3.getTotalSkillLevel(65100005));
            n2 = a2.getY();
            a3.setKillMob_Temp_using(false);
        }
        if (a3.getReChargeFalse() >= 2 && a3.getTotalSkillLevel(65110006) > 0) {
            a2 = SkillFactory.getSkill(65110006).getEffect(a3.getTotalSkillLevel(65110006));
            n2 += a2.getX();
            a3.resetReChargeFalse();
        }
        if (a3.getReChargeFalse_2() >= 1 && a3.getTotalSkillLevel(65120006) > 0) {
            a2 = SkillFactory.getSkill(65120006).getEffect(a3.getTotalSkillLevel(65120006));
            a3.resetReChargeFalse();
        }
        if (a3.getBuffedValue(MapleBuffStat.SOUL_EXALT) != null) {
            n2 += 100;
        }
        return n2;
    }

    public /* synthetic */ int getItemQuestId() {
        MapleCharacter a2;
        return a2.Yc;
    }

    public /* synthetic */ void setFame_Force(int a2) {
        MapleCharacter a3;
        if (World.Find.findChannel(a3.cB) <= 0) {
            a3.UpdateCharacter(MapleNodes.ALLATORIxDEMO("hMcI"), a2);
            return;
        }
        a2 = a3.IB;
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ boolean hasMonsterPet(int a) {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [3[TRYBLOCK]], but top level block is 6[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ MapleReactor getReactor() {
        MapleCharacter a2;
        return a2.hb;
    }

    public /* synthetic */ int[] GetFaceAlbum() {
        MapleCharacter a2;
        return a2.Cd;
    }

    public /* synthetic */ int getBossLogReload(String a2) {
        MapleCharacter a3;
        return a3.getBossLog(a2);
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ void clearofflinelocations() {
        var1_1 = DBConPool.getInstance().getDataSource().getConnection();
        try {
            a.D((Connection)var1_1, FixDropNullItem.ALLATORIxDEMO("r\u0003z\u0003b\u0003\u0016\u0000d\t{fY P*_(S*Y%W2_)X5\u0016\u0011~\u0003d\u0003\u0016%^'D'U2S4_\"\u0016{\u0016y"));
            ** if (var1_1 == null) goto lbl-1000
        }
        catch (Throwable var2_3) {
            if (var1_1 == null) ** GOTO lbl19
            try {
                var1_1.close();
                v0 = var2_3;
                ** GOTO lbl20
            }
            catch (Throwable var3_4) {
                try {
                    var2_3.addSuppressed(var3_4);
lbl19:
                    // 2 sources

                    v0 = var2_3;
lbl20:
                    // 2 sources

                    throw v0;
                }
                catch (SQLException var1_2) {
                    FilePrinter.printError(MapleNodes.ALLATORIxDEMO("}MxIaJh@gBk@aOoXgC`_ XvX"), var1_2);
                }
            }
        }
lbl-1000:
        // 1 sources

        {
            var1_1.close();
            return;
        }
lbl-1000:
        // 1 sources

        {
        }
    }

    public /* synthetic */ long getKillHp() {
        MapleCharacter a2;
        return a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u6024\u7245\u64c4\u6b96\u63d5\u886c"), false);
    }

    public /* synthetic */ void setNextConsume(long a2) {
        a.ac = a2;
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ int teachSkill(int a, int a) {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [3[TRYBLOCK]], but top level block is 6[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ int getPeeNumber() {
        MapleCharacter a2;
        return a2.Aa;
    }

    public /* synthetic */ void setDojoRecord(boolean a2) {
        MapleCharacter a3;
        if (a2) {
            MapleCharacter mapleCharacter = a3;
            mapleCharacter.lB = 0;
            mapleCharacter.bB = 0;
            return;
        }
        a3.bB = (byte)(a3.bB + 1);
    }

    public final /* synthetic */ void maxSkillsByJob3() {
        MapleCharacter a2;
        HashMap<ISkill, SkillEntry> hashMap = new HashMap<ISkill, SkillEntry>();
        for (ISkill iSkill : SkillFactory.getAllSkills()) {
            if (!iSkill.canBeLearnedBy(a2.ob) || iSkill.isZeroSkill(a2.ob) || iSkill.isSkillNeedMasterLevel()) continue;
            ISkill iSkill2 = iSkill;
            ISkill iSkill3 = iSkill;
            hashMap.put(iSkill3, new SkillEntry(iSkill3.getMaxLevel(), iSkill.getMaxLevel(), -1L));
            if (GameSetConstants.MAPLE_VERSION > 113) continue;
            MapleCharacter mapleCharacter = a2;
            int n2 = mapleCharacter.XC / 10000;
            mapleCharacter.changeSkillLevel(iSkill, (int)iSkill.getMaxLevel(), (int)iSkill.getMaxLevel());
        }
        if (GameSetConstants.MAPLE_VERSION > 113) {
            a2.changeSkillLevel(hashMap);
        }
    }

    public /* synthetic */ boolean isCheckSelection() {
        MapleCharacter a2;
        return a2.b;
    }

    public /* synthetic */ void setMaxHp_Force(int a2) {
        MapleCharacter a3;
        if (World.Find.findChannel(a3.cB) <= 0) {
            a3.UpdateCharacter(FixDropNullItem.ALLATORIxDEMO("+W>^6"), a2);
            return;
        }
        a3.getStat().setMaxHp((short)a2);
    }

    public /* synthetic */ void changeKeybinding(int a2, byte a3, int a4) {
        MapleCharacter a5;
        if (SkillConstants.isBanKeyMapSkill(a4)) {
            return;
        }
        if (a3 != 0) {
            a5.Pd.Layout().put(a2, new Pair<Byte, Integer>(a3, a4));
            return;
        }
        a5.Pd.Layout().remove(a2);
    }

    public /* synthetic */ long getLTC() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\nb\u0005"), false);
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ boolean addProfessionExp(int a2, int a3) {
        MapleCharacter a4;
        int n2 = a4.getProfessionLevel(a2);
        if (n2 <= 0) return false;
        if (n2 >= 10) {
            return false;
        }
        a3 = a4.getProfessionExp(a2) + a3;
        if (a3 < GameConstants.getProfessionEXP(n2)) {
            a4.changeProfessionLevelExp(a2, n2, a3);
            return false;
        }
        a4.changeProfessionLevelExp(a2, n2 + 1, a3 - GameConstants.getProfessionEXP(n2));
        int n3 = (int)Math.pow(2.0, n2 + 1);
        switch (a2) {
            case 92000000: {
                a4.Ta.get((Object)MapleTrait.MapleTraitType.\u611f\u6027).addExp(n3, a4);
                return true;
            }
            case 92010000: {
                a4.Ta.get((Object)MapleTrait.MapleTraitType.\u610f\u5fd7).addExp(n3, a4);
                return true;
            }
            case 92020000: 
            case 92030000: 
            case 92040000: {
                a4.Ta.get((Object)MapleTrait.MapleTraitType.\u624b\u85dd).addExp(n3, a4);
                return true;
            }
        }
        return true;
    }

    public /* synthetic */ void setLottoryNumber4(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6a44\u9039\u7b6a\u56ed\u504d\u8669\u78fa"), a2, false);
    }

    public /* synthetic */ void silentEnforceMaxHpMp() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.GB.setMp(mapleCharacter.GB.getMp());
        MapleCharacter mapleCharacter2 = a2;
        mapleCharacter2.GB.setHp(mapleCharacter2.GB.getHp(), true);
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ boolean UpdateCharacter(String a, int a) {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [3[TRYBLOCK]], but top level block is 5[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    private /* synthetic */ MapleCharacter(boolean a2) {
        int n2;
        Enum enum_;
        int n3;
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        MapleCharacter mapleCharacter2 = a3;
        MapleCharacter mapleCharacter3 = a3;
        MapleCharacter mapleCharacter4 = a3;
        MapleCharacter mapleCharacter5 = a3;
        MapleCharacter mapleCharacter6 = a3;
        MapleCharacter mapleCharacter7 = a3;
        MapleCharacter mapleCharacter8 = a3;
        MapleCharacter mapleCharacter9 = a3;
        MapleCharacter mapleCharacter10 = a3;
        MapleCharacter mapleCharacter11 = a3;
        MapleCharacter mapleCharacter12 = a3;
        MapleCharacter mapleCharacter13 = a3;
        MapleCharacter mapleCharacter14 = a3;
        MapleCharacter mapleCharacter15 = a3;
        MapleCharacter mapleCharacter16 = a3;
        MapleCharacter mapleCharacter17 = a3;
        MapleCharacter mapleCharacter18 = a3;
        MapleCharacter mapleCharacter19 = a3;
        MapleCharacter mapleCharacter20 = a3;
        MapleCharacter mapleCharacter21 = a3;
        MapleCharacter mapleCharacter22 = a3;
        MapleCharacter mapleCharacter23 = a3;
        MapleCharacter mapleCharacter24 = a3;
        MapleCharacter mapleCharacter25 = a3;
        MapleCharacter mapleCharacter26 = a3;
        MapleCharacter mapleCharacter27 = a3;
        MapleCharacter mapleCharacter28 = a3;
        MapleCharacter mapleCharacter29 = a3;
        MapleCharacter mapleCharacter30 = a3;
        MapleCharacter mapleCharacter31 = a3;
        MapleCharacter mapleCharacter32 = a3;
        MapleCharacter mapleCharacter33 = a3;
        MapleCharacter mapleCharacter34 = a3;
        MapleCharacter mapleCharacter35 = a3;
        MapleCharacter mapleCharacter36 = a3;
        MapleCharacter mapleCharacter37 = a3;
        MapleCharacter mapleCharacter38 = a3;
        mapleCharacter38.tb = "";
        mapleCharacter38.Dc = "";
        mapleCharacter37.ac = 0L;
        mapleCharacter37.ic = 0L;
        mapleCharacter36.md = 0L;
        mapleCharacter36.aB = (byte)5;
        mapleCharacter35.jB = (byte)5;
        mapleCharacter35.yc = (byte)10;
        mapleCharacter34.iC = 1;
        mapleCharacter34.KA = 0;
        mapleCharacter33.hd = 0;
        mapleCharacter33.RA = 0;
        mapleCharacter32.HA = 0;
        mapleCharacter32.Tc = 1;
        mapleCharacter31.Qb = 0;
        mapleCharacter31.wA = 1;
        mapleCharacter30.ld = 0;
        mapleCharacter30.db = -1;
        mapleCharacter29.fd = 0;
        mapleCharacter29.dB = 0;
        mapleCharacter28.pc = 0;
        mapleCharacter28.FB = 0;
        mapleCharacter27.xC = 0;
        mapleCharacter27.uC = 0;
        mapleCharacter26.MC = 0;
        mapleCharacter26.QC = 0;
        mapleCharacter25.VB = 0;
        mapleCharacter25.Sc = 0;
        mapleCharacter24.PA = 0;
        mapleCharacter24.Bd = 0;
        mapleCharacter23.KC = 0;
        mapleCharacter23.Cc = 0;
        mapleCharacter22.Yc = 0;
        mapleCharacter22.fB = 0;
        MapleCharacter mapleCharacter39 = a3;
        mapleCharacter22.cC = new Point(0, 0);
        mapleCharacter21.ab = 0;
        mapleCharacter21.BA = false;
        mapleCharacter20.rc = true;
        mapleCharacter20.fc = true;
        mapleCharacter19.Od = false;
        mapleCharacter19.vC = false;
        mapleCharacter18.Hd = true;
        mapleCharacter18.TB = false;
        mapleCharacter17.NC = false;
        mapleCharacter17.EB = false;
        mapleCharacter16.Yb = false;
        mapleCharacter16.ec = false;
        mapleCharacter15.ub = false;
        mapleCharacter15.bA = false;
        mapleCharacter14.rB = false;
        mapleCharacter14.aA = false;
        mapleCharacter13.wb = false;
        mapleCharacter13.Jc = false;
        mapleCharacter12.Rc = false;
        mapleCharacter12.OA = false;
        mapleCharacter11.cc = false;
        mapleCharacter11.Xb = false;
        mapleCharacter10.rb = false;
        mapleCharacter10.gd = false;
        mapleCharacter9.nc = new int[10];
        mapleCharacter9.Gd = new int[3];
        mapleCharacter8.fb = new int[3];
        mapleCharacter7.yb = new int[3];
        mapleCharacter8.oC = new LinkedList<Integer>();
        mapleCharacter7.sB = new LinkedHashMap<ISkill, SkillEntry>();
        mapleCharacter7.kb = new ConcurrentEnumMap<MapleBuffStat, MapleBuffStatValueHolder>(MapleBuffStat.class);
        mapleCharacter7.kA = new LinkedHashMap<Integer, MapleCoolDownValueHolder>();
        mapleCharacter6.qc = new ConcurrentEnumMap<MapleBuffStat, MapleDiseaseValueHolder>(MapleBuffStat.class);
        mapleCharacter6.lc = new ArrayList<Integer>();
        mapleCharacter6.Pb = false;
        mapleCharacter5.sd = true;
        mapleCharacter5.Hc = false;
        mapleCharacter4.IA = false;
        mapleCharacter4.Pc = false;
        mapleCharacter3.Ec = true;
        mapleCharacter3.Ub = true;
        mapleCharacter2.qB = true;
        mapleCharacter2.WB = false;
        mapleCharacter.pd = "";
        mapleCharacter.rA = new SkillMacro[5];
        MapleCharacter mapleCharacter40 = a3;
        MapleCharacter mapleCharacter41 = a3;
        MapleCharacter mapleCharacter42 = a3;
        MapleCharacter mapleCharacter43 = a3;
        MapleCharacter mapleCharacter44 = a3;
        MapleCharacter mapleCharacter45 = a3;
        MapleCharacter mapleCharacter46 = a3;
        MapleCharacter mapleCharacter47 = a3;
        MapleCharacter mapleCharacter48 = a3;
        MapleCharacter mapleCharacter49 = a3;
        MapleCharacter mapleCharacter50 = a3;
        MapleCharacter mapleCharacter51 = a3;
        MapleCharacter mapleCharacter52 = a3;
        MapleCharacter mapleCharacter53 = a3;
        MapleCharacter mapleCharacter54 = a3;
        MapleCharacter mapleCharacter55 = a3;
        MapleCharacter mapleCharacter56 = a3;
        MapleCharacter mapleCharacter57 = a3;
        MapleCharacter mapleCharacter58 = a3;
        MapleCharacter mapleCharacter59 = a3;
        MapleCharacter mapleCharacter60 = a3;
        MapleCharacter mapleCharacter61 = a3;
        MapleCharacter mapleCharacter62 = a3;
        MapleCharacter mapleCharacter63 = a3;
        MapleCharacter mapleCharacter64 = a3;
        MapleCharacter mapleCharacter65 = a3;
        MapleCharacter mapleCharacter66 = a3;
        MapleCharacter mapleCharacter67 = a3;
        MapleCharacter mapleCharacter68 = a3;
        MapleCharacter mapleCharacter69 = a3;
        MapleCharacter mapleCharacter70 = a3;
        MapleCharacter mapleCharacter71 = a3;
        MapleCharacter mapleCharacter72 = a3;
        MapleCharacter mapleCharacter73 = a3;
        MapleCharacter mapleCharacter74 = a3;
        MapleCharacter mapleCharacter75 = a3;
        MapleCharacter mapleCharacter76 = a3;
        MapleCharacter mapleCharacter77 = a3;
        MapleCharacter mapleCharacter78 = a3;
        MapleCharacter mapleCharacter79 = a3;
        MapleCharacter mapleCharacter80 = a3;
        MapleCharacter mapleCharacter81 = a3;
        MapleCharacter mapleCharacter82 = a3;
        MapleCharacter mapleCharacter83 = a3;
        MapleCharacter mapleCharacter84 = a3;
        MapleCharacter mapleCharacter85 = a3;
        MapleCharacter mapleCharacter86 = a3;
        MapleCharacter mapleCharacter87 = a3;
        MapleCharacter mapleCharacter88 = a3;
        MapleCharacter mapleCharacter89 = a3;
        MapleCharacter mapleCharacter90 = a3;
        MapleCharacter mapleCharacter91 = a3;
        MapleCharacter mapleCharacter92 = a3;
        MapleCharacter mapleCharacter93 = a3;
        MapleCharacter mapleCharacter94 = a3;
        MapleCharacter mapleCharacter95 = a3;
        MapleCharacter mapleCharacter96 = a3;
        MapleCharacter mapleCharacter97 = a3;
        MapleCharacter mapleCharacter98 = a3;
        MapleCharacter mapleCharacter99 = a3;
        MapleCharacter mapleCharacter100 = a3;
        MapleCharacter mapleCharacter101 = a3;
        MapleCharacter mapleCharacter102 = a3;
        MapleCharacter mapleCharacter103 = a3;
        MapleCharacter mapleCharacter104 = a3;
        mapleCharacter104.Fb = null;
        mapleCharacter104.jb = null;
        mapleCharacter103.yA = null;
        mapleCharacter103.Kd = new HashMap<Integer, Integer>();
        mapleCharacter103.Fd = false;
        mapleCharacter102.vc = false;
        mapleCharacter102.yC = false;
        mapleCharacter101.sb = false ? 1 : 0;
        mapleCharacter101.mc = 0;
        mapleCharacter100.Nc = 0;
        mapleCharacter100.hb = null;
        mapleCharacter99.Ob = 0;
        mapleCharacter99.Ld = 0;
        mapleCharacter98.JB = new int[20];
        mapleCharacter98.Cd = new int[20];
        mapleCharacter97.xb = new int[20];
        mapleCharacter97.hC = 0;
        mapleCharacter96.JA = 0;
        mapleCharacter96.BB = false;
        mapleCharacter95.tC = "";
        mapleCharacter95.uB = "";
        mapleCharacter94.rd = false;
        mapleCharacter94.YB = true;
        mapleCharacter93.Ic = true;
        mapleCharacter93.Ac = true;
        mapleCharacter92.Qd = true;
        mapleCharacter92.oc = true;
        mapleCharacter91.lC = true;
        mapleCharacter91.DA = true;
        mapleCharacter90.dd = true;
        mapleCharacter90.KB = true;
        mapleCharacter89.gC = false;
        mapleCharacter89.Rd = true;
        mapleCharacter88.kc = true;
        mapleCharacter88.xB = true;
        mapleCharacter87.zb = true;
        mapleCharacter87.tA = true;
        mapleCharacter86.zA = true;
        mapleCharacter86.UA = true;
        mapleCharacter85.nB = true;
        mapleCharacter85.Lb = true;
        mapleCharacter84.ZA = 0;
        mapleCharacter84.pC = 0;
        mapleCharacter83.Ib = 0;
        mapleCharacter83.VC = true;
        mapleCharacter82.TC = false;
        mapleCharacter82.UC = "";
        mapleCharacter81.ya = "";
        mapleCharacter81.Oa = "";
        mapleCharacter80.oa = false;
        mapleCharacter80.Ra = false;
        mapleCharacter79.za = false;
        mapleCharacter79.Pa = 0L;
        mapleCharacter78.ra = 0L;
        mapleCharacter78.sa = 0L;
        mapleCharacter77.Va = 0;
        mapleCharacter77.Sa = 0;
        mapleCharacter76.ta = 0;
        mapleCharacter76.Na = 0;
        mapleCharacter75.Xa = 0;
        mapleCharacter75.Ya = 0L;
        mapleCharacter74.Ua = 0L;
        mapleCharacter74.Wa = 0L;
        mapleCharacter73.wa = 0L;
        mapleCharacter73.qa = 0L;
        mapleCharacter72.xa = false;
        mapleCharacter72.ua = 0L;
        mapleCharacter71.pa = 0L;
        mapleCharacter71.Ga = 0L;
        mapleCharacter70.aa = 0L;
        mapleCharacter70.ka = null;
        mapleCharacter69.La = null;
        mapleCharacter68.ia = null;
        mapleCharacter69.ga = new HashMap<String, Long>();
        mapleCharacter68.Fa = new HashMap<String, Long>();
        mapleCharacter67.Ca = new HashMap<String, Long>();
        mapleCharacter67.ea = new ArrayList<IItem>();
        mapleCharacter67.Ia = null;
        mapleCharacter66.ma = "";
        mapleCharacter66.Ba = 0;
        mapleCharacter65.Ja = 0;
        mapleCharacter65.Ea = 0;
        mapleCharacter64.Aa = 0;
        mapleCharacter64.la = new HashMap<Integer, Integer>();
        mapleCharacter64.da = false;
        mapleCharacter63.fa = false;
        mapleCharacter63.ha = false;
        mapleCharacter62.ca = false;
        mapleCharacter62.Ha = null;
        mapleCharacter61.y = new ArrayList<Pair<Integer, Boolean>>();
        mapleCharacter61.W = -1L;
        mapleCharacter60.V = new MapleCharacterCards();
        mapleCharacter60.u = new LinkedList<InnerSkillValueHolder>();
        mapleCharacter60.U = 0;
        mapleCharacter59.x = 0;
        mapleCharacter59.z = 0;
        mapleCharacter58.Y = 0;
        mapleCharacter58.s = 0;
        mapleCharacter57.n = -1L;
        mapleCharacter57.v = "";
        mapleCharacter56.T = "";
        mapleCharacter56.R = "";
        mapleCharacter55.N = "";
        mapleCharacter55.S = "";
        mapleCharacter54.r = false;
        mapleCharacter54.Q = false;
        mapleCharacter53.o = false;
        mapleCharacter53.Z = -1L;
        mapleCharacter52.t = -1L;
        mapleCharacter52.P = -1L;
        mapleCharacter51.w = -1L;
        mapleCharacter51.G = new LinkedList<Integer>();
        mapleCharacter51.b = false;
        mapleCharacter50.c = -1;
        mapleCharacter50.l = -1;
        mapleCharacter49.m = 0;
        mapleCharacter49.A = 0;
        mapleCharacter48.f = 0;
        mapleCharacter48.h = 0;
        mapleCharacter47.D = 0;
        mapleCharacter47.L = 0;
        mapleCharacter46.j = 0;
        mapleCharacter46.i = 0;
        mapleCharacter45.J = 0;
        mapleCharacter45.M = "";
        mapleCharacter44.I = false;
        mapleCharacter44.F = false;
        mapleCharacter43.C = new ArrayList<Point>();
        mapleCharacter43.e = 0L;
        mapleCharacter42.E = 0L;
        mapleCharacter42.g = 0L;
        mapleCharacter41.k = new HashMap();
        mapleCharacter41.K = 0L;
        mapleCharacter40.a = 0L;
        mapleCharacter40.d = false;
        a3.ALLATORIxDEMO = (byte)(false ? 1 : 0);
        a3.setStance(0);
        a3.setPosition(new Point(0, 0));
        a3.LA = new MapleInventory[MapleInventoryType.values().length];
        Enum[] arrenum = MapleInventoryType.values();
        int n4 = arrenum.length;
        int n5 = n3 = 0;
        while (n5 < n4) {
            enum_ = arrenum[n3];
            a3.LA[enum_.ordinal()] = new MapleInventory((MapleInventoryType)enum_);
            n5 = ++n3;
        }
        a3.Ta = new EnumMap(MapleTrait.MapleTraitType.class);
        arrenum = MapleTrait.MapleTraitType.values();
        n4 = arrenum.length;
        int n6 = n3 = 0;
        while (n6 < n4) {
            Enum enum_2 = enum_ = arrenum[n3];
            a3.Ta.put((MapleTrait.MapleTraitType)enum_2, new MapleTrait((MapleTrait.MapleTraitType)enum_2));
            n6 = ++n3;
        }
        a3.na = new EnumMap(MapleFriendship.MapleFriendshipType.class);
        arrenum = MapleFriendship.MapleFriendshipType.values();
        n4 = arrenum.length;
        int n7 = n3 = 0;
        while (n7 < n4) {
            Enum enum_3 = enum_ = arrenum[n3];
            a3.na.put((MapleFriendship.MapleFriendshipType)enum_3, new MapleFriendship((MapleFriendship.MapleFriendshipType)enum_3));
            n7 = ++n3;
        }
        MapleCharacter mapleCharacter105 = a3;
        mapleCharacter105.XB = new LinkedHashMap<MapleQuest, MapleQuestStatus>();
        mapleCharacter105.GB = new PlayerStats(a3);
        int n8 = n2 = 0;
        while (n8 < a3.nc.length) {
            a3.nc[n2++] = 0;
            n8 = n2;
        }
        int n9 = n2 = 0;
        while (n9 < a3.yb.length) {
            a3.yb[n2++] = 0;
            n9 = n2;
        }
        if (a2) {
            MapleCharacter mapleCharacter106 = a3;
            MapleCharacter mapleCharacter107 = a3;
            MapleCharacter mapleCharacter108 = a3;
            MapleCharacter mapleCharacter109 = a3;
            MapleCharacter mapleCharacter110 = a3;
            MapleCharacter mapleCharacter111 = a3;
            MapleCharacter mapleCharacter112 = a3;
            mapleCharacter112.VA = -1;
            mapleCharacter112.wC = 0L;
            mapleCharacter111.gc = 0;
            mapleCharacter111.AC = 0;
            mapleCharacter110.bd = 0L;
            mapleCharacter110.bC = 0L;
            mapleCharacter109.Id = 0L;
            mapleCharacter109.eB = 0L;
            mapleCharacter108.iB = 0L;
            mapleCharacter108.yB = 0L;
            mapleCharacter107.Ad = 0L;
            mapleCharacter107.Jb = 0L;
            mapleCharacter106.tc = 0L;
            mapleCharacter106.HB = new byte[3];
            int n10 = n2 = 0;
            while (n10 < a3.HB.length) {
                a3.HB[n2++] = -1;
                n10 = n2;
            }
            MapleCharacter mapleCharacter113 = a3;
            MapleCharacter mapleCharacter114 = a3;
            mapleCharacter114.FC = new int[10];
            mapleCharacter114.DB = new int[10];
            mapleCharacter113.ZC = new int[5];
            mapleCharacter113.RB = new int[13];
            a3.uc = new MapleImp[3];
            MapleCharacter mapleCharacter115 = a3;
            mapleCharacter115.X = new int[5];
            mapleCharacter115.Ma = new ArrayList<MapleExtendedSlots>();
            mapleCharacter115.qb = new WeakReference[25];
            int n11 = n2 = 0;
            while (n11 < a3.qb.length) {
                a3.qb[n2++] = new WeakReference<Object>(null);
                n11 = n2;
            }
            MapleCharacter mapleCharacter116 = a3;
            MapleCharacter mapleCharacter117 = a3;
            a3.cb = new AtomicInteger();
            a3.cb.set(0);
            a3.Pd = new MapleKeyLayout();
            a3.Sb = new ArrayList<MapleDoor>();
            a3.Dd = new ArrayList<MechDoor>();
            a3.CC = new LinkedHashSet<MapleMonster>();
            a3.Hb = new LinkedList<MapleSummon>();
            mapleCharacter117.Zb = new ReentrantReadWriteLock();
            mapleCharacter117.Qa = 0L;
            mapleCharacter116.ja = new LinkedHashMap<Integer, MonsterFamiliar>();
            mapleCharacter116.Ha = new ArrayList<MapleShopItem>();
            mapleCharacter116.MB = new LinkedHashSet<MapleMapObject>();
            mapleCharacter116.AA = new ReentrantReadWriteLock();
            mapleCharacter116.Kb = new LinkedList<MapleCarnivalChallenge>();
            mapleCharacter116.p = new ArrayList<SpecialBuffInfo>();
            mapleCharacter116.Gb = new int[SavedLocationType.values().length];
            int n12 = n2 = 0;
            while (n12 < SavedLocationType.values().length) {
                a3.Gb[n2++] = -1;
                n12 = n2;
            }
            MapleCharacter mapleCharacter118 = a3;
            MapleCharacter mapleCharacter119 = a3;
            MapleCharacter mapleCharacter120 = a3;
            MapleCharacter mapleCharacter121 = a3;
            MapleCharacter mapleCharacter122 = a3;
            MapleCharacter mapleCharacter123 = a3;
            MapleCharacter mapleCharacter124 = a3;
            MapleCharacter mapleCharacter125 = a3;
            mapleCharacter125.mC = new LinkedHashMap<MapleStorageType, MapleStorage>();
            mapleCharacter125.CA = new LinkedHashMap<Integer, String>();
            a3.LB = new CheatTracker(a3);
            mapleCharacter125.Md = new ArrayList<MaplePet>();
            mapleCharacter125.Ka = new HashMap<Integer, Integer>();
            mapleCharacter124.zA = false;
            mapleCharacter124.lC = false;
            mapleCharacter123.Ac = false;
            mapleCharacter123.Qd = false;
            mapleCharacter122.oc = false;
            mapleCharacter122.kc = false;
            mapleCharacter121.tA = false;
            mapleCharacter121.xB = false;
            mapleCharacter120.nB = false;
            mapleCharacter120.Rd = false;
            mapleCharacter119.DA = false;
            mapleCharacter119.zb = false;
            mapleCharacter118.Lb = false;
            mapleCharacter118.da = false;
            a3.UA = false;
        }
    }

    public /* synthetic */ boolean checkPartyLevel(int a2, int a3) {
        MapleCharacter a4;
        boolean bl = false;
        if (a4.getParty() != null) {
            for (MaplePartyCharacter maplePartyCharacter : a4.getParty().getMembers()) {
                if (maplePartyCharacter.getLevel() < a2 || maplePartyCharacter.getLevel() > a3) continue;
                bl = true;
            }
            if (a4.IC < a3) {
                bl = false;
            }
        }
        return bl;
    }

    public final /* synthetic */ Map<MapleQuest, MapleQuestStatus> getQuest_Map() {
        MapleCharacter a2;
        return a2.XB;
    }

    public /* synthetic */ String resetFaction() {
        MapleCharacter a2;
        if (a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u90a4\u6d12"), false) == 1L) {
            a2.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u909c\u6d78"), 0L, false);
        } else if (a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u6b6d\u6d12"), false) == 1L) {
            a2.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6b55\u6d78"), 0L, false);
        }
        return MapleNodes.ALLATORIxDEMO("\u5dde\u70b4\u6084\u5213\u59e7\u5318\u95ac\u6d30\r");
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ int getofflinemap() {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [3[TRYBLOCK]], but top level block is 5[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ void gainHonor(int a2, boolean a3) {
        MapleCharacter a4;
        a4.addHonorExp(a2, false);
        if (a3) {
            a4.Cb.sendPacket(MaplePacketCreator.showInfo("\u4f60\u7372\u5f97\u4e86" + a2 + " \u8072\u671b\u3002"));
        }
    }

    public /* synthetic */ void setCharacterSet(String a2, boolean a3, boolean a4) {
        MapleCharacter mapleCharacter;
        MapleCharacter a5;
        long l2;
        long l3 = l2 = a3 ? 1L : 0L;
        if (a4) {
            MapleCharacter mapleCharacter2 = a5;
            a5.Ca.remove(a2);
            mapleCharacter = mapleCharacter2;
            mapleCharacter2.Ca.put(a2, l2);
        } else {
            MapleCharacter mapleCharacter3 = a5;
            mapleCharacter = mapleCharacter3;
            mapleCharacter3.ga.remove(a2);
            a5.ga.put(a2, l2);
        }
        mapleCharacter.DA = true;
    }

    public /* synthetic */ void getDiseaseBuff(MapleBuffStat a2, MobSkill a3) {
        MapleCharacter a4;
        a4.getDiseaseBuff(a2, a3.getX(), a3.getDuration(), a3.getSkillId(), a3.getSkillLevel());
    }

    public /* synthetic */ void setVip(int a2) {
        MapleCharacter a3;
        a3.getClient().setVip(a2);
    }

    public /* synthetic */ void addPet(MaplePet a2) {
        MapleCharacter a3;
        if (a3.Md.contains(a2)) {
            a3.Md.remove(a2);
        }
        a3.Md.add(a2);
    }

    public /* synthetic */ void cancelMapTimeLimitTask() {
        MapleCharacter a2;
        if (a2.UB != null) {
            a2.UB.cancel(false);
        }
    }

    public /* synthetic */ boolean isAlive() {
        MapleCharacter a2;
        return a2.GB.getHp() > 0;
    }

    public /* synthetic */ void changeProfessionLevelExp(int a2, int a3, int a4) {
        MapleCharacter a5;
        a5.changeSkillLevel(SkillFactory.getSkill(a2), ((a3 & 0xFF) << 24) + (a4 & 0xFFFF), 10);
    }

    public /* synthetic */ void setSpendGash(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u4ec4\u65c9\u82bf\u8c97IM}D"), a2, false);
    }

    public /* synthetic */ void setHairAlbum(int[] a2) {
        MapleCharacter a3;
        if (a2.length != a3.JB.length || Arrays.equals(a2, a3.JB)) {
            return;
        }
        a3.JB = (int[])a2.clone();
    }

    public /* synthetic */ int getCoconutTeam() {
        MapleCharacter a2;
        return a2.dB;
    }

    public /* synthetic */ void equip(int a2) {
        MapleCharacter a3;
        a3.equip(a2, false);
    }

    public /* synthetic */ int getReChargeFalse_2() {
        MapleCharacter a2;
        return a2.J;
    }

    public /* synthetic */ void checkMonsterAggro(MapleMonster a2) {
        MapleCharacter a3;
        if (a3.Hc || a2 == null) {
            return;
        }
        if (a2.getController() == a3) {
            a2.setControllerHasAggro(true);
            return;
        }
        a2.switchController(a3, true);
    }

    public /* synthetic */ Map<Integer, Integer> getMoveMobs() {
        MapleCharacter a2;
        return a2.Kd;
    }

    public /* synthetic */ void HonorUnlock() {
        MapleCharacter a2;
        InnerSkillValueHolder innerSkillValueHolder = null;
        boolean bl = false;
        innerSkillValueHolder = new InnerSkillValueHolder(70000015, (byte)(true ? 1 : 0), (byte)(true ? 1 : 0), (byte)(true ? 1 : 0), true);
        a2.u.add(innerSkillValueHolder);
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.UA = true;
        mapleCharacter.changeSkillLevel(innerSkillValueHolder.getSkillId(), (int)innerSkillValueHolder.getSkillLevel(), innerSkillValueHolder.getSkillLevel());
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.updateInnerPotential((byte)0, innerSkillValueHolder.getSkillId(), innerSkillValueHolder.getSkillLevel(), innerSkillValueHolder.getRank()));
    }

    /*
     * WARNING - Removed back jump from a try to a catch block - possible behaviour change.
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public static /* synthetic */ int getCharacterIdByName(String a2) {
        ResultSet resultSet;
        PreparedStatement preparedStatement;
        int n2 = -1;
        MapleCharacter mapleCharacter = MapleCharacter.getOnlineCharacterByName(a2);
        if (mapleCharacter != null) {
            return mapleCharacter.getId();
        }
        try {
            mapleCharacter = DBConPool.getInstance().getDataSource().getConnection();
            try {
                preparedStatement = null;
                MapleCharacter mapleCharacter2 = mapleCharacter;
                Statement statement = mapleCharacter2.createStatement();
                preparedStatement = mapleCharacter2.prepareStatement(FixDropNullItem.ALLATORIxDEMO("E#Z#U2\u0016/RfP4Y+\u0016%^'D'U2S4EfA.S4SfX'[#\u0016{\u0016y"));
                preparedStatement.setString(1, a2);
                ResultSet resultSet2 = resultSet = preparedStatement.executeQuery();
                while (resultSet2.next()) {
                    ResultSet resultSet3 = resultSet;
                    resultSet2 = resultSet3;
                    n2 = resultSet3.getInt(MapleNodes.ALLATORIxDEMO("gH"));
                }
            }
            catch (Throwable throwable) {
                Throwable throwable2;
                if (mapleCharacter != null) {
                    try {
                        mapleCharacter.close();
                        throwable2 = throwable;
                        throw throwable2;
                    }
                    catch (Throwable throwable3) {
                        throwable.addSuppressed(throwable3);
                    }
                }
                throwable2 = throwable;
                throw throwable2;
            }
        }
        catch (Exception exception) {
            // empty catch block
            return n2;
        }
        {
            preparedStatement.close();
            resultSet.close();
            if (mapleCharacter == null) return n2;
        }
        mapleCharacter.close();
        return n2;
    }

    public /* synthetic */ void handleBlackBlessLost(int a22) {
        MapleCharacter a3;
        ISkill iSkill = SkillFactory.getSkill(27100003);
        if (a3.getSkillLevel(iSkill) <= 0) {
            a3.cancelEffectFromBuffStat(MapleBuffStat.BLACK_BLESSING);
            return;
        }
        MapleStatEffect mapleStatEffect = a3.getStatForBuff(MapleBuffStat.BLACK_BLESSING);
        if (mapleStatEffect == null) {
            return;
        }
        a3.P = System.currentTimeMillis();
        int n2 = a3.getBuffedValue(MapleBuffStat.BLACK_BLESSING);
        if ((n2 -= a22) <= 0) {
            a3.cancelEffectFromBuffStat(MapleBuffStat.BLACK_BLESSING);
            return;
        }
        List<Pair<MapleBuffStat, Integer>> a22 = Collections.singletonList(new Pair<MapleBuffStat, Integer>(MapleBuffStat.BLACK_BLESSING, n2));
        MapleCharacter mapleCharacter = a3;
        MapleCharacter mapleCharacter2 = a3;
        mapleCharacter2.setBuffedValue(MapleBuffStat.BLACK_BLESSING, n2);
        mapleCharacter2.Cb.sendPacket(MaplePacketCreator.showOwnSpecailSkillEffect(iSkill.getId()));
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.giveBuff(iSkill.getId(), 0, a22, mapleStatEffect, a3));
        mapleCharacter.registerEffect(mapleStatEffect, System.currentTimeMillis(), a22, Integer.MAX_VALUE, a3.getId());
        if (!mapleCharacter.isHidden()) {
            MapleCharacter mapleCharacter3 = a3;
            a3.getMap().broadcastMessage(mapleCharacter3, MaplePacketCreator.giveForeignBuff(mapleCharacter3, a22, mapleStatEffect), false);
        }
    }

    public /* synthetic */ void setDojo(int a2) {
        a.lB = a2;
    }

    public final /* synthetic */ void clearInfoQuest(int a2) {
        MapleCharacter a3;
        if (a3.CA.containsKey(a2)) {
            MapleCharacter mapleCharacter = a3;
            mapleCharacter.updateInfoQuest(a2, null);
            mapleCharacter.CA.remove(a2);
            a3.xB = true;
        }
    }

    public /* synthetic */ boolean hasFaceMarking() {
        MapleCharacter a2;
        return MapleJob.is\u60e1\u9b54(a2.getJob()) || MapleJob.is\u5091\u8afe(a2.getJob()) || MapleJob.is\u5e7b\u7378\u5e2b(a2.getJob());
    }

    public /* synthetic */ int getHp() {
        MapleCharacter a2;
        return a2.getStat().getHp();
    }

    public /* synthetic */ List<MapleCoolDownValueHolder> getAllCooldowns() {
        MapleCharacter a2;
        Iterator<MapleCoolDownValueHolder> iterator;
        ArrayList<MapleCoolDownValueHolder> arrayList = new ArrayList<MapleCoolDownValueHolder>();
        Iterator<MapleCoolDownValueHolder> iterator2 = iterator = a2.kA.values().iterator();
        while (iterator2.hasNext()) {
            MapleCoolDownValueHolder mapleCoolDownValueHolder = iterator.next();
            iterator2 = iterator;
            MapleCoolDownValueHolder mapleCoolDownValueHolder2 = mapleCoolDownValueHolder;
            arrayList.add(new MapleCoolDownValueHolder(mapleCoolDownValueHolder2.skillId, mapleCoolDownValueHolder2.startTime, mapleCoolDownValueHolder.length));
        }
        return arrayList;
    }

    public /* synthetic */ HiredMerchant getHiredMerchant() {
        Iterator<ChannelServer> iterator = ChannelServer.getAllChannelInstances().iterator();
        while (iterator.hasNext()) {
            MapleCharacter a2;
            HiredMerchant hiredMerchant = iterator.next().getMerchant(a2);
            if (hiredMerchant == null) continue;
            return hiredMerchant;
        }
        return null;
    }

    public /* synthetic */ int getSeniorId() {
        MapleCharacter a2;
        if (a2.JC == null) {
            return 0;
        }
        return a2.JC.getSeniorId();
    }

    public final /* synthetic */ boolean canStorage() {
        MapleCharacter a2;
        if (a2.bd + 300L > System.currentTimeMillis()) {
            return false;
        }
        a2.bd = System.currentTimeMillis();
        return true;
    }

    public /* synthetic */ boolean isPlayer() {
        MapleCharacter a2;
        return a2.id == 0;
    }

    public /* synthetic */ boolean canHiredFish(long a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        int n2 = GameConstants.getFishingTime(a3.getcheck_FishingVip(), mapleCharacter.isGM());
        return mapleCharacter.ua > 0L && a3.ua + (long)n2 < a2;
    }

    /*
     * Exception decompiling
     */
    public static /* synthetic */ MapleCharacter getDefault(MapleClient a, int a) {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [3[TRYBLOCK]], but top level block is 6[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    private /* synthetic */ double ALLATORIxDEMO(MapleMap a2, double a3) {
        MapleCharacter a4;
        if (GameSetConstants.MARRY_DROP_BONUS > 1.0) {
            a2 = ((MapleMap)a2).getCharactersThreadsafe().iterator();
            while (a2.hasNext()) {
                if (((MapleCharacter)a2.next()).getId() != a4.getMarriageId()) continue;
                a3 *= GameSetConstants.MARRY_DROP_BONUS;
            }
        }
        if (a4.getExtraDrop() > 10000L) {
            a3 *= (double)(a4.getExtraDrop() / 10000L);
        }
        return a3;
    }

    public /* synthetic */ void setMSG(int a2) {
        a.uC = a2;
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ int CountAranCombo(int a2) {
        int n2 = 0;
        if (GameSetConstants.MAPLE_VERSION >= 134) {
            switch (a2) {
                case 21000004: {
                    return 15;
                }
                case 21100005: {
                    return 30;
                }
                case 21100007: {
                    return 50;
                }
                case 21110011: {
                    return 100;
                }
                case 21120006: {
                    MapleCharacter a3;
                    n2 = 200;
                    if (GameSetConstants.MAPLE_VERSION < 152) return n2;
                    if (a3.getSkillLevel(21120051) <= 0) return n2;
                    return 100;
                }
                case 21120007: {
                    return 150;
                }
            }
            return n2;
        }
        switch (a2) {
            case 21100004: 
            case 21100005: {
                return 30;
            }
            case 21110004: {
                return 100;
            }
            case 21120006: 
            case 21120007: {
                return 200;
            }
        }
        return n2;
    }

    public final /* synthetic */ boolean canBerserk() {
        MapleCharacter a2;
        return a2.ob == 132 && a2.yB + 10000L < System.currentTimeMillis();
    }

    public /* synthetic */ boolean isDressingUp() {
        MapleCharacter a2;
        return a2.TC;
    }

    public /* synthetic */ void setMobVac2_LastTime(long a2) {
        a.Ua = a2;
    }

    public /* synthetic */ int[] getWishlist() {
        MapleCharacter a2;
        return a2.FC;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ boolean setMonsterPetLevel(int a) {
        var2_3 = DBConPool.getInstance().getDataSource().getConnection();
        try {
            var3_5 = null;
            v0 = var3_5 = var2_3.prepareStatement(MapleNodes.ALLATORIxDEMO("[|JmZi.AaB}Xk^~Iz\f]iZ\fcC`_zI|@kZk@.\u0011.\u0013.{Fi\\i.OfM|MmXk^gH.\u0011.\u0013.M`H.AaB}Xk^gH.\u0011.\u0013"));
            var3_5.setInt(1, a);
            v0.setInt(2, a.XC);
            var3_5.setInt(3, a.getMonsterPet(1));
            v0.execute();
            var3_5.close();
            ** if (var2_3 == null) goto lbl-1000
        }
        catch (Throwable var3_6) {
            if (var2_3 == null) ** GOTO lbl25
            try {
                var2_3.close();
                v1 = var3_6;
                ** GOTO lbl26
            }
            catch (Throwable a) {
                try {
                    var3_6.addSuppressed(a);
lbl25:
                    // 2 sources

                    v1 = var3_6;
lbl26:
                    // 2 sources

                    throw v1;
                }
                catch (Exception var2_4) {
                    FilePrinter.printError(FixDropNullItem.ALLATORIxDEMO("5S2{)X5B#D\u0016S2\u00182N2"), var2_4);
                    return false;
                }
            }
        }
lbl-1000:
        // 1 sources

        {
            var2_3.close();
        }
lbl-1000:
        // 2 sources

        {
        }
        return true;
    }

    public /* synthetic */ boolean hasBuff(int a2) {
        MapleCharacter a3;
        boolean bl = false;
        for (MapleBuffStatValueHolder object : a3.kb.values()) {
            if (a2 != object.effect.getSourceId()) continue;
            bl = true;
        }
        for (SpecialBuffInfo specialBuffInfo : a3.p) {
            if (specialBuffInfo.getSkillId() != a2) continue;
            bl = true;
        }
        return bl;
    }

    public /* synthetic */ void handleOrbConsume(int a22, int a32) {
        MapleCharacter a4;
        ISkill iSkill = SkillFactory.getSkill(a22);
        ISkill iSkill2 = null;
        MapleStatEffect mapleStatEffect = null;
        if (a32 > 0) {
            iSkill2 = SkillFactory.getSkill(a32);
            mapleStatEffect = iSkill2.getEffect(a4.getTotalSkillLevel(a32));
        }
        if (a4.getSkillLevel(iSkill) <= 0) {
            return;
        }
        MapleStatEffect a32 = a4.getStatForBuff(MapleBuffStat.COMBO);
        if (a32 == null || a4.getBuffedValue(MapleBuffStat.COMBO) == null) {
            MapleCharacter mapleCharacter = a4;
            mapleCharacter.getClient().sendPacket(MaplePacketCreator.enableActions());
            mapleCharacter.getCheatTracker().registerOffense(CheatingOffense.\u7121\u9b25\u6c23\u4f7f\u7528\u9b25\u6c23\u6280\u80fd, "\u672a\u65bd\u653e\u9b25\u6c23\u4f7f\u7528\u6280\u80fd" + SkillFactory.getSkillName(a22) + "(" + a22 + ")");
            return;
        }
        int n2 = a4.getBuffedValue(MapleBuffStat.COMBO) - 1;
        if (mapleStatEffect != null && GameSetConstants.MAPLE_VERSION >= 138) {
            n2 = mapleStatEffect.getY();
        }
        if (a4.getBuffedValue(MapleBuffStat.COMBO) - n2 <= 0) {
            MapleCharacter mapleCharacter = a4;
            mapleCharacter.getClient().sendPacket(MaplePacketCreator.enableActions());
            mapleCharacter.getCheatTracker().registerOffense(CheatingOffense.\u7121\u9b25\u6c23\u4f7f\u7528\u9b25\u6c23\u6280\u80fd, "\u9b25\u6c23\u4e0d\u8db3\u4f7f\u7528\u653b\u64ca\u6280\u80fd" + SkillFactory.getSkillName(a22) + "(" + a22 + ") \u76ee\u524d\u9b25\u6c23\u6578\u91cf: " + (a4.getBuffedValue(MapleBuffStat.COMBO) - n2));
            return;
        }
        List<Pair<MapleBuffStat, Integer>> a22 = Collections.singletonList(new Pair<MapleBuffStat, Integer>(MapleBuffStat.COMBO, a4.getBuffedValue(MapleBuffStat.COMBO) - n2));
        MapleCharacter mapleCharacter = a4;
        mapleCharacter.setBuffedValue(MapleBuffStat.COMBO, a4.getBuffedValue(MapleBuffStat.COMBO) - n2);
        n2 = a32.getDuration();
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.giveBuff(iSkill.getId(), n2 += (int)(a4.getBuffedStarttime(MapleBuffStat.COMBO) - System.currentTimeMillis()), a22, a32, a4));
        MapleCharacter mapleCharacter2 = a4;
        mapleCharacter.rC.broadcastMessage(mapleCharacter2, MaplePacketCreator.giveForeignBuff(mapleCharacter2, a22, a32), false);
    }

    private /* synthetic */ void ALLATORIxDEMO(Connection a2, String a3, String a4) throws SQLException {
        MapleCharacter a5;
        MapleCharacter.deletefunctionCharacterid(a2, a3, a5.XC, a4);
    }

    public /* synthetic */ short getRemainingAp() {
        MapleCharacter a2;
        return a2.iA;
    }

    public /* synthetic */ boolean isBowman() {
        MapleCharacter a2;
        return a2.ob >= 300 && a2.ob <= 322 || a2.ob >= 1300 && a2.ob <= 1312;
    }

    /*
     * WARNING - Removed try catching itself - possible behaviour change.
     */
    public /* synthetic */ void removeExtraSummon() {
        MapleCharacter a2;
        ArrayList<MapleSummon> arrayList = new ArrayList<MapleSummon>();
        if (a2.Hb.isEmpty()) {
            return;
        }
        try {
            MapleCharacter mapleCharacter = a2;
            mapleCharacter.AA.writeLock().lock();
            long l2 = System.currentTimeMillis();
            Iterator<MapleSummon> iterator = mapleCharacter.Hb.iterator();
            block6: while (true) {
                Iterator<MapleSummon> iterator2 = iterator;
                while (iterator2.hasNext()) {
                    MapleSummon mapleSummon = iterator.next();
                    if (mapleSummon.getRemoveTime() == -1L) continue block6;
                    if (mapleSummon.getRemoveTime() > l2) {
                        iterator2 = iterator;
                        continue;
                    }
                    if (mapleSummon.getSkill() != 32111006 && !SkillConstants.isNeedExtraRemoveSummon(mapleSummon.getSkill())) {
                        iterator2 = iterator;
                        continue;
                    }
                    MapleCharacter mapleCharacter2 = a2;
                    mapleCharacter2.rC.broadcastMessage(MaplePacketCreator.removeSummon(mapleSummon, true));
                    mapleCharacter2.rC.removeMapObject(mapleSummon);
                    mapleCharacter2.MB.remove(mapleSummon);
                    arrayList.add(mapleSummon);
                    continue block6;
                }
                break;
            }
            a2.Hb.removeAll(arrayList);
            return;
        }
        catch (Exception exception) {
            System.out.println("\u79fb\u9664\u53ec\u559a\u7378\u767c\u751f\u554f\u984c, \u73a9\u5bb6: " + a2.cB);
            FileoutputUtil.printError(FixDropNullItem.ALLATORIxDEMO("{'F*S\u0005^'D'U2S4\u00182N2"), exception, "\u73a9\u5bb6: " + a2.cB);
            return;
        }
        finally {
            a2.AA.writeLock().unlock();
        }
    }

    public /* synthetic */ BlackJack.BlackJackResultInfo getBlackJackCard() {
        MapleCharacter a2;
        return a2.ia;
    }

    public /* synthetic */ void cancelBuffStats(MapleBuffStat ... a2) {
        MapleCharacter a3;
        a2 = Arrays.asList(a2);
        a3.ALLATORIxDEMO((List<MapleBuffStat>)a2);
        a3.ALLATORIxDEMO((List<MapleBuffStat>)a2);
    }

    public /* synthetic */ int getRank() {
        MapleCharacter a2;
        return a2.Tc;
    }

    public /* synthetic */ Pair<Integer, Integer> handleMaxHp_afterBigBang(int a2, int a3) {
        MapleCharacter a4;
        if (a4.ob == 3001 || a4.ob == 10000) {
            a2 += Randomizer.rand(52, 56);
            a3 = 30;
        } else if (MapleJob.isBeginner(a4.ob)) {
            a2 += Randomizer.rand(12, 16);
            a3 += Randomizer.rand(10, 12);
        } else if (MapleJob.is\u528d\u58eb(a4.ob) && (MapleJob.is\u5192\u96aa\u5bb6(a4.ob) || MapleJob.is\u7687\u5bb6\u9a0e\u58eb\u5718(a4.ob))) {
            a2 += Randomizer.rand(48, 52);
            a3 += Randomizer.rand(4, 6);
        } else if (MapleJob.is\u72c2\u72fc\u52c7\u58eb(a4.ob)) {
            a2 += Randomizer.rand(50, 52);
            a3 += Randomizer.rand(4, 6);
        } else if (MapleJob.is\u60e1\u9b54\u6bba\u624b(a4.ob)) {
            a2 += Randomizer.rand(48, 52);
        } else if (MapleJob.is\u60e1\u9b54\u5fa9\u4ec7\u8005(a4.ob)) {
            a2 += Randomizer.rand(70, 105);
        } else if (MapleJob.is\u7c73\u54c8\u9038(a4.ob)) {
            a2 += Randomizer.rand(48, 52);
            a3 += Randomizer.rand(4, 6);
        } else if (MapleJob.is\u528d\u8c6a(a4.ob)) {
            a2 += Randomizer.rand(48, 52);
            a3 += Randomizer.rand(4, 6);
        } else if (MapleJob.is\u51f1\u6492(a4.ob)) {
            a2 += Randomizer.rand(70, 105);
            a3 += Randomizer.rand(10, 20);
        } else if (MapleJob.is\u795e\u4e4b\u5b50(a4.ob)) {
            a2 += Randomizer.rand(70, 105);
        } else if (MapleJob.is\u76ae\u5361\u557e(a4.ob)) {
            a2 += Randomizer.rand(48, 52);
            a3 += Randomizer.rand(4, 6);
        } else if (MapleJob.is\u6cd5\u5e2b(a4.ob) && (MapleJob.is\u5192\u96aa\u5bb6(a4.ob) || MapleJob.is\u7687\u5bb6\u9a0e\u58eb\u5718(a4.ob))) {
            a2 += Randomizer.rand(10, 14);
            a3 += Randomizer.rand(48, 52);
        } else if (MapleJob.is\u9f8d\u9b54\u5c0e\u58eb(a4.ob)) {
            a2 += Randomizer.rand(12, 16);
            a3 += Randomizer.rand(50, 52);
        } else if (MapleJob.is\u591c\u5149(a4.ob)) {
            a2 += Randomizer.rand(25, 40);
            a3 += Randomizer.rand(60, 100);
            if (a4.getTotalSkillLevel(20040221) > 0) {
                a3 += Randomizer.rand(10, 20);
            }
        } else if (MapleJob.is\u7149\u7344\u5deb\u5e2b(a4.ob)) {
            a2 += Randomizer.rand(40, 48);
            a3 += Randomizer.rand(38, 40);
        } else if (MapleJob.is\u9670\u967d\u5e2b(a4.ob) || MapleJob.is\u51f1\u5167\u897f\u65af(a4.ob)) {
            a2 += Randomizer.rand(48, 52);
        } else if (MapleJob.is\u5f13\u7bad\u624b(a4.ob) || MapleJob.is\u72c2\u8c79\u7375\u4eba(a4.ob) || MapleJob.is\u76dc\u8cca(a4.ob) && (MapleJob.is\u5192\u96aa\u5bb6(a4.ob) || MapleJob.is\u7687\u5bb6\u9a0e\u58eb\u5718(a4.ob))) {
            a2 += Randomizer.rand(20, 24);
            a3 += Randomizer.rand(14, 16);
        } else if (MapleJob.is\u5e7b\u5f71\u4fe0\u76dc(a4.ob)) {
            a2 += Randomizer.rand(56, 67);
            a3 += Randomizer.rand(74, 100);
        } else if (MapleJob.is\u62f3\u9738(a4.ob)) {
            a2 += Randomizer.rand(37, 41);
            a3 += Randomizer.rand(18, 22);
        } else if (MapleJob.is\u6d77\u76dc(a4.ob) && MapleJob.is\u5192\u96aa\u5bb6(a4.ob)) {
            a2 += Randomizer.rand(20, 24);
            a3 += Randomizer.rand(18, 22);
        } else if (MapleJob.is\u9583\u96f7\u608d\u5c07(a4.ob) || MapleJob.is\u6a5f\u7532\u6230\u795e(a4.ob)) {
            a2 += Randomizer.rand(56, 67);
            a3 += Randomizer.rand(34, 47);
        } else if (MapleJob.is\u96b1\u6708(a4.ob)) {
            a2 += Randomizer.rand(66, 77);
            a3 += Randomizer.rand(44, 57);
        } else if (MapleJob.is\u5091\u8afe(a4.ob)) {
            a2 += Randomizer.rand(100, 130);
            a3 += Randomizer.rand(10, 15);
        } else if (MapleJob.is\u5929\u4f7f\u7834\u58de\u8005(a4.ob)) {
            a2 += Randomizer.rand(56, 67);
        } else if (MapleJob.is\u5e7b\u7378\u5e2b(a4.ob)) {
            a2 += Randomizer.rand(37, 41);
            a3 += Randomizer.rand(20, 24);
        } else if (!MapleJob.is\u7ba1\u7406\u54e1(a4.ob)) {
            MapleCharacter mapleCharacter = a4;
            MapleCharacter mapleCharacter2 = a4;
            FileoutputUtil.logToFile(FixDropNullItem.ALLATORIxDEMO("*Y!Eis>U#F2\u0019\u676c\u8663\u7440\u5371\u7d5c~\u0016{\u0016\u00182N2"), FileoutputUtil.CurrentReadable_Time() + " \u73a9\u5bb6<" + mapleCharacter.cB + "> \u7b49\u7d1a<" + mapleCharacter.IC + "> \u8f49\u8077<" + mapleCharacter2.ob + "> \u4e2d\u6587\u8077\u696d<" + MapleJob.getById(mapleCharacter2.ob).name() + "> \u7248\u672c:" + GameSetConstants.MAPLE_VERSION + "\r\n");
            System.err.println("\u8077\u696d " + MapleJob.getById(a4.ob).name() + " \u672a\u8655\u7406\u5347\u7d1aHPMP\u589e\u52a0");
        }
        return new Pair<Integer, Integer>(a2, a3);
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ void setPrizeLog(String a) {
        var2_3 = DBConPool.getInstance().getDataSource().getConnection();
        try {
            v0 = var3_5 = var2_3.prepareStatement(MapleNodes.ALLATORIxDEMO("E`_k^z\fgBzC.\\|EtIbCi\f&MmOgH\"\flC}_gH'\fxMbYk_.\u00041\u00001\u0005"));
            v0.setInt(1, a.getClient().getAccID());
            var3_5.setString(2, a);
            v0.executeUpdate();
            var3_5.close();
            ** if (var2_3 == null) goto lbl-1000
        }
        catch (Throwable var3_6) {
            if (var2_3 == null) ** GOTO lbl24
            try {
                var2_3.close();
                v1 = var3_6;
                ** GOTO lbl25
            }
            catch (Throwable a) {
                try {
                    var3_6.addSuppressed(a);
lbl24:
                    // 2 sources

                    v1 = var3_6;
lbl25:
                    // 2 sources

                    throw v1;
                }
                catch (Exception var2_4) {
                    System.out.println(var2_4);
                }
            }
        }
lbl-1000:
        // 1 sources

        {
            var2_3.close();
            return;
        }
lbl-1000:
        // 1 sources

        {
        }
    }

    public /* synthetic */ void setRebuy(List<MapleShopItem> a2) {
        a.Ha = a2;
    }

    public /* synthetic */ void forceReAddItem_Flag(IItem a2, MapleInventoryType a3) {
        MapleCharacter a4;
        MapleInventoryType mapleInventoryType = a3;
        a4.forceReAddItem_NoUpdate(a2, mapleInventoryType);
        if (mapleInventoryType != MapleInventoryType.UNDEFINED) {
            a4.Cb.sendPacket(MaplePacketCreator.modifyInventory(false, new ModifyInventory(0, a2)));
        }
    }

    public /* synthetic */ void checkBuff() {
        MapleCharacter a2;
        block6: {
            if (a2.getCheatTracker().canCheckBuff()) break block6;
            return;
        }
        LinkedList<MapleBuffStat> linkedList = new LinkedList<MapleBuffStat>();
        LinkedList<MapleBuffStat> linkedList2 = new LinkedList<MapleBuffStat>();
        linkedList.add(MapleBuffStat.WATK);
        linkedList.add(MapleBuffStat.WDEF);
        linkedList.add(MapleBuffStat.MATK);
        linkedList.add(MapleBuffStat.MDEF);
        linkedList.add(MapleBuffStat.ACC);
        linkedList.add(MapleBuffStat.AVOID);
        linkedList.add(MapleBuffStat.HANDS);
        linkedList.add(MapleBuffStat.SPEED);
        linkedList.add(MapleBuffStat.JUMP);
        linkedList.add(MapleBuffStat.MAGIC_GUARD);
        linkedList.add(MapleBuffStat.DARKSIGHT);
        linkedList.add(MapleBuffStat.BOOSTER);
        linkedList.add(MapleBuffStat.POWERGUARD);
        linkedList.add(MapleBuffStat.MAXHP);
        linkedList.add(MapleBuffStat.MAXMP);
        linkedList.add(MapleBuffStat.INVINCIBLE);
        linkedList.add(MapleBuffStat.HOLY_SYMBOL);
        linkedList.add(MapleBuffStat.MAPLE_WARRIOR);
        linkedList.add(MapleBuffStat.HOLY_SHIELD);
        linkedList.add(MapleBuffStat.SHADOWPARTNER);
        linkedList.add(MapleBuffStat.SHARP_EYES);
        linkedList.add(MapleBuffStat.STANCE);
        Iterator iterator = linkedList.iterator();
        while (iterator.hasNext()) {
            MapleBuffStat mapleBuffStat = (MapleBuffStat)iterator.next();
            if (a2.getBuffSource(mapleBuffStat) != -1) continue;
            linkedList2.add(mapleBuffStat);
        }
        try {
            if (!linkedList2.isEmpty()) {
                a2.Cb.sendPacket(MaplePacketCreator.cancelBuff(linkedList2));
                return;
            }
        }
        catch (Exception exception) {
            exception.printStackTrace();
        }
    }

    public /* synthetic */ void saveToDB_Others(boolean a2, boolean a32) {
        MapleCharacter a4;
        List<MapleBuffStatValueHolder> list = a4.getCurrentBuffs();
        LinkedList<MapleBuffStatValueHolder> linkedList = new LinkedList<MapleBuffStatValueHolder>();
        if (GameSetConstants.SAVEBUFF && !a32 && a2 && list.size() > 0) {
            if (AB.containsKey(a4.getId())) {
                AB.remove(a4.getId());
            }
            for (MapleBuffStatValueHolder a32 : list) {
                if (a32.effect.skill && a32.effect.getSourceId() != 60001005 && a32.effect.getSourceId() != 60011005) continue;
                int n2 = (int)((long)a32.localDuration - (System.currentTimeMillis() - a32.startTime));
                MapleBuffStatValueHolder mapleBuffStatValueHolder = a32;
                linkedList.add(new MapleBuffStatValueHolder(mapleBuffStatValueHolder.effect, mapleBuffStatValueHolder.startTime, a32.value, n2, a32.cid));
            }
            AB.put(a4.getId(), linkedList);
        }
        MapleCharacter mapleCharacter = a4;
        ServerTempStorage.setCharacterSetTemp(mapleCharacter, mapleCharacter.getCharacterSetTemp());
    }

    public /* synthetic */ void addHyperRockMap() {
        MapleCharacter a2;
        if (a2.getHyperRockSize() >= 13) {
            return;
        }
        a2.RB[a2.getHyperRockSize()] = a2.getMapId();
        a2.KB = true;
    }

    public /* synthetic */ void setMerchantItemBack(boolean a2) {
        a.BB = a2;
    }

    public /* synthetic */ boolean hasLapidification() {
        MapleCharacter a2;
        return a2.Q;
    }

    public /* synthetic */ List<MapleBuffStatValueHolder> getCurrentBuffs() {
        MapleCharacter a2;
        return new ArrayList<MapleBuffStatValueHolder>(a2.kb.values());
    }

    private /* synthetic */ boolean ALLATORIxDEMO(List<MapleBuffStat> a2) {
        MapleCharacter a3;
        return a3.ALLATORIxDEMO(a2, 0);
    }

    public /* synthetic */ byte getSkinColor() {
        MapleCharacter a2;
        return a2.jd;
    }

    public /* synthetic */ long getPotential5() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u88ea\u8806\u85d3\u52d7\u5296\u6256"), false);
    }

    public /* synthetic */ void autoJob() {
        MapleCharacter a2;
        if (JobConstants.is\u5192\u96aa\u5bb6(a2.ob)) {
            a2.autoJob_\u5192\u96aa\u5bb6();
            return;
        }
        if (JobConstants.is\u7687\u5bb6\u9a0e\u58eb\u5718(a2.ob)) {
            a2.autoJob_\u7687\u5bb6();
            return;
        }
        MapleCharacter mapleCharacter = a2;
        if (JobConstants.is\u82f1\u96c4(a2.ob)) {
            mapleCharacter.autoJob_\u82f1\u96c4();
            return;
        }
        MapleCharacter mapleCharacter2 = a2;
        if (JobConstants.is\u672b\u65e5\u53cd\u6297\u8ecd(mapleCharacter.ob)) {
            mapleCharacter2.autoJob_\u672b\u65e5();
            return;
        }
        MapleCharacter mapleCharacter3 = a2;
        if (JobConstants.is\u7c73\u54c8\u9038(mapleCharacter2.ob)) {
            mapleCharacter3.autoJob_\u7c73\u54c8\u9038();
            return;
        }
        MapleCharacter mapleCharacter4 = a2;
        if (JobConstants.is\u7cbe\u9748\u904a\u4fe0(mapleCharacter3.ob)) {
            mapleCharacter4.autoJob_\u7cbe\u9748\u904a\u4fe0();
            return;
        }
        MapleCharacter mapleCharacter5 = a2;
        if (JobConstants.is\u66c9\u306e\u9663(mapleCharacter4.ob)) {
            mapleCharacter5.autoJob_\u6230\u570b();
            return;
        }
        MapleCharacter mapleCharacter6 = a2;
        if (JobConstants.is\u8d85\u65b0\u661f(mapleCharacter5.ob)) {
            mapleCharacter6.autoJob_\u8d85\u65b0\u661f();
            return;
        }
        if (JobConstants.is\u795e\u4e4b\u5b50(mapleCharacter6.ob) || JobConstants.is\u5e7b\u7378\u5e2b(a2.ob)) {
            // empty if block
        }
    }

    public /* synthetic */ MapleCarnivalParty getCarnivalParty() {
        MapleCharacter a2;
        return a2.YC;
    }

    public /* synthetic */ void setFace_Force(int a2) {
        MapleCharacter a3;
        if (World.Find.findChannel(a3.cB) <= 0) {
            a3.UpdateCharacter(FixDropNullItem.ALLATORIxDEMO("P'U#"), a2);
            return;
        }
        a2 = a3.dA;
    }

    public /* synthetic */ List<InnerSkillValueHolder> getInnerSkills() {
        MapleCharacter a2;
        return a2.u;
    }

    public /* synthetic */ MapleDragon getDragon() {
        MapleCharacter a2;
        return a2.PB;
    }

    public /* synthetic */ void setAutoPickup(boolean a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u81dc\u5293\u6489\u722f"), a2, false);
    }

    public /* synthetic */ void saveCharacterSet(Connection a22) {
        MapleCharacter a3;
        if (a3.DA && GameSetConstants.SAVE_CHARACTERSET) {
            PreparedStatement preparedStatement = null;
            StringBuilder stringBuilder = new StringBuilder();
            StringBuilder stringBuilder2 = new StringBuilder();
            if (a3.ga.size() > 0) {
                stringBuilder.append(MapleNodes.ALLATORIxDEMO("e@\u007fK~Z\fGbZc.LmD|sd_aBn\f&LgHn\u0000.Ld_aBn\u0005.zO`[i]\u0004"));
                if (a3.ga.size() > 0) {
                    stringBuilder.append(a3.XC).append(FixDropNullItem.ALLATORIxDEMO("\u001aa"));
                    stringBuilder.append(JsonMapConverter.MapToJsonLong(a3.ga));
                    stringBuilder.append(MapleNodes.ALLATORIxDEMO(")\u0005"));
                }
            }
            if (a3.Ca.size() > 0) {
                stringBuilder2.append(FixDropNullItem.ALLATORIxDEMO("\u000fx\u0015s\u0014bf\u007f\bb\t\u0016&W%U\u0019\\5Y(Vf\u001e&_\"Vj\u0016&\\5Y(Vo\u0016\u0010w\nc\u0003en"));
                if (a3.Ca.size() > 0) {
                    stringBuilder2.append(a3.nC).append(MapleNodes.ALLATORIxDEMO("\"\u000b"));
                    stringBuilder2.append(JsonMapConverter.MapToJsonLong(a3.Ca));
                    stringBuilder2.append(FixDropNullItem.ALLATORIxDEMO("\u0011o"));
                }
            }
            try {
                preparedStatement = a22.prepareStatement(MapleNodes.ALLATORIxDEMO("hK`KxK\fH~Aa.Of^QF}C`\fYdK~K\fgH.\u0011.\u0013"));
                preparedStatement.setInt(1, a3.XC);
                preparedStatement.execute();
                preparedStatement.close();
                preparedStatement = a22.prepareStatement(FixDropNullItem.ALLATORIxDEMO("\u0002s\ns\u0012sfp\u0014y\u000b\u0016'U%i,E)Xfa\u000es\u0014sf_\"\u0016{\u0016y"));
                preparedStatement.setInt(1, a3.nC);
                preparedStatement.execute();
                preparedStatement.close();
                if (!stringBuilder.toString().isEmpty()) {
                    preparedStatement = a22.prepareStatement(stringBuilder.toString());
                    preparedStatement.execute();
                    preparedStatement.close();
                }
                if (!stringBuilder2.toString().isEmpty()) {
                    preparedStatement = a22.prepareStatement(stringBuilder2.toString());
                    preparedStatement.execute();
                    preparedStatement.close();
                    return;
                }
            }
            catch (SQLException a22) {
                FilePrinter.printError(MapleNodes.ALLATORIxDEMO("}MxIMDo^oOzI|\u007fkX XvX"), a22, FixDropNullItem.ALLATORIxDEMO("m5W0S\u0005^'D'U2S4e#B\u001b"));
            }
        }
    }

    public /* synthetic */ void gainHSP(int a2, int a3) {
        MapleCharacter a4;
        MapleCharacter mapleCharacter = a4;
        int n2 = a2;
        mapleCharacter.yb[n2] = mapleCharacter.yb[n2] + a3;
        mapleCharacter.Cb.announce(MaplePacketCreator.updateHyperSp(a2, a3));
    }

    public /* synthetic */ void setTeleportName(String a2) {
        a.tb = a2;
    }

    public /* synthetic */ void setShadowKillCount(int a2) {
        MapleCharacter a3;
        a3.setSkillTemp(4221013, a2);
    }

    public /* synthetic */ Rectangle getBounds() {
        MapleCharacter a2;
        return new Rectangle(a2.getTruePosition().x - 25, a2.getTruePosition().y - 75, 50, 75);
    }

    public /* synthetic */ List<MechDoor> getMechDoors() {
        MapleCharacter a2;
        return new ArrayList<MechDoor>(a2.Dd);
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ int getMonsterPet(int a) {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [1[TRYBLOCK], 3[TRYBLOCK]], but top level block is 5[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ long getSpendMeso() {
        MapleCharacter a2;
        return a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u4ec4\u65c9\u82bf\u8c97\u695d\u5e4f"), false);
    }

    public /* synthetic */ void setmsg_Chat(boolean a2) {
        a.Jc = a2;
    }

    public /* synthetic */ void resetReChargeFalse() {
        a.i = 0;
    }

    public /* synthetic */ List<MapleCoolDownValueHolder> getCooldowns() {
        MapleCharacter a2;
        return new ArrayList<MapleCoolDownValueHolder>(a2.kA.values());
    }

    public /* synthetic */ void receivePartyMemberHP() {
        MapleCharacter a2;
        if (a2.ed == null) {
            return;
        }
        MapleCharacter mapleCharacter = a2;
        int n2 = mapleCharacter.Cb.getChannel();
        for (MaplePartyCharacter maplePartyCharacter : mapleCharacter.ed.getMembers()) {
            MapleCharacter mapleCharacter2;
            if (maplePartyCharacter.getMapid() != a2.getMapId() || maplePartyCharacter.getChannel() != n2 || (mapleCharacter2 = a2.Cb.getChannelServer().getPlayerStorage().getCharacterByName(maplePartyCharacter.getName())) == null) continue;
            a2.Cb.sendPacket(MaplePacketCreator.updatePartyMemberHP(mapleCharacter2.getId(), mapleCharacter2.getStat().getHp(), mapleCharacter2.getStat().getCurrentMaxHp()));
        }
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ void handleMonsterEffectCard() {
        MapleCharacter mapleCharacter;
        MapleCharacter a2;
        block11: {
            switch (a2.getBuffSource(MapleBuffStat.DROP_RATE)) {
                case 2382040: {
                    if (MapConstants.is\u7334\u5b50\u68ee\u6797(a2.getMapId())) break;
                    MapleCharacter mapleCharacter2 = a2;
                    mapleCharacter = mapleCharacter2;
                    mapleCharacter2.cancelEffectFromBuffStat(MapleBuffStat.DROP_RATE);
                    break block11;
                }
                case 2383006: 
                case 2383010: {
                    if (MapConstants.is\u9748\u85e5\u5e7b\u5883(a2.getMapId())) break;
                    MapleCharacter mapleCharacter3 = a2;
                    mapleCharacter = mapleCharacter3;
                    mapleCharacter3.cancelEffectFromBuffStat(MapleBuffStat.DROP_RATE);
                    break block11;
                }
                case 2382028: {
                    if (MapConstants.is\u8d6b\u723e\u5967\u65af\u5854(a2.getMapId())) break;
                    MapleCharacter mapleCharacter4 = a2;
                    mapleCharacter = mapleCharacter4;
                    mapleCharacter4.cancelEffectFromBuffStat(MapleBuffStat.DROP_RATE);
                    break block11;
                }
                case 2382001: 
                case 2382004: {
                    if (MapConstants.is\u611b\u5967\u65af\u5854(a2.getMapId())) break;
                    MapleCharacter mapleCharacter5 = a2;
                    mapleCharacter = mapleCharacter5;
                    mapleCharacter5.cancelEffectFromBuffStat(MapleBuffStat.DROP_RATE);
                    break block11;
                }
                case 2382052: 
                case 2383003: {
                    if (MapConstants.is\u96f2\u5f69\u516c\u5712(a2.getMapId())) break;
                    MapleCharacter mapleCharacter6 = a2;
                    mapleCharacter = mapleCharacter6;
                    mapleCharacter6.cancelEffectFromBuffStat(MapleBuffStat.DROP_RATE);
                    break block11;
                }
                case 2388000: {
                    if (MapConstants.is\u7dad\u591a\u5229\u4e9e\u6e2f\u5730\u57df(a2.getMapId())) break;
                    a2.cancelEffectFromBuffStat(MapleBuffStat.DROP_RATE);
                }
            }
            mapleCharacter = a2;
        }
        switch (mapleCharacter.getBuffSource(MapleBuffStat.MESO_RATE)) {
            case 2382005: 
            case 2382016: {
                if (MapConstants.is\u611b\u5967\u65af\u5854(a2.getMapId())) return;
                a2.cancelEffectFromBuffStat(MapleBuffStat.MESO_RATE);
                return;
            }
        }
    }

    public /* synthetic */ void setActivity(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u6d17\u8e83\u5e8a"), a2, false);
    }

    public /* synthetic */ void silentPartyUpdate() {
        MapleCharacter a2;
        if (a2.ed != null) {
            World.Party.updateParty(a2.ed.getId(), PartyOperation.SILENT_UPDATE, new MaplePartyCharacter(a2));
        }
    }

    public /* synthetic */ MapleMessenger getMessenger() {
        MapleCharacter a2;
        return a2.hB;
    }

    public /* synthetic */ String setFactionGood() {
        MapleCharacter a2;
        if (!a2.getFaction().isEmpty()) {
            return MapleNodes.ALLATORIxDEMO("\u6084\u5dfc\u528c\u516b\u95ac\u6d30\r");
        }
        a2.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6b55\u6d78"), 1L, false);
        return MapleNodes.ALLATORIxDEMO("\u6063\u55b0\u60a6\u6b4f\u5f01\u623c\u70b4\u6b4f\u6d30\u95ac\u5f9c\r");
    }

    public /* synthetic */ void removeChracterSet(String a2) {
        MapleCharacter a3;
        a3.ga.remove(a2);
    }

    public /* synthetic */ int getExpChairSelect() {
        MapleCharacter a2;
        return (int)a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u4f49\u756e\u7da5\u9a11\u6933\u0013\u007f\u0002"), false);
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ String addSignLog() {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Started 6 blocks at once
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.getStartingBlocks(Op04StructuredStatement.java:406)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:481)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public final /* synthetic */ int getNumQuest() {
        MapleCharacter a2;
        int n2 = 0;
        for (MapleQuestStatus mapleQuestStatus : a2.XB.values()) {
            if (mapleQuestStatus.getStatus() != 2 || mapleQuestStatus.isCustom()) continue;
            ++n2;
        }
        return n2;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ boolean setMonsterPetSkill(int a) {
        var2_3 = DBConPool.getInstance().getDataSource().getConnection();
        try {
            var3_5 = null;
            v0 = var3_5 = var2_3.prepareStatement(MapleNodes.ALLATORIxDEMO("[|JmZi.AaB}Xk^~Iz\f]iZ\fcC`_zI|_eEb@.\u0011.\u0013.{Fi\\i.OfM|MmXk^gH.\u0011.\u0013.M`H.AaB}Xk^gH.\u0011.\u0013"));
            var3_5.setInt(1, a);
            v0.setInt(2, a.XC);
            var3_5.setInt(3, a.getMonsterPet(1));
            v0.execute();
            var3_5.close();
            ** if (var2_3 == null) goto lbl-1000
        }
        catch (Throwable var3_6) {
            if (var2_3 == null) ** GOTO lbl25
            try {
                var2_3.close();
                v1 = var3_6;
                ** GOTO lbl26
            }
            catch (Throwable a) {
                try {
                    var3_6.addSuppressed(a);
lbl25:
                    // 2 sources

                    v1 = var3_6;
lbl26:
                    // 2 sources

                    throw v1;
                }
                catch (Exception var2_4) {
                    FilePrinter.printError(FixDropNullItem.ALLATORIxDEMO("5S2{)X5B#D\u0016S2\u00182N2"), var2_4);
                    return false;
                }
            }
        }
lbl-1000:
        // 1 sources

        {
            var2_3.close();
        }
lbl-1000:
        // 2 sources

        {
        }
        return true;
    }

    public /* synthetic */ boolean canUseFamilyBuff(MapleFamilyBuff.MapleFamilyBuffEntry a2) {
        MapleCharacter a3;
        a2 = a3.getQuestNAdd(MapleQuest.getInstance(((MapleFamilyBuff.MapleFamilyBuffEntry)a2).questID));
        if (((MapleQuestStatus)a2).getCustomData() == null) {
            ((MapleQuestStatus)a2).setCustomData(MapleNodes.ALLATORIxDEMO("\u001c"));
            a3.zb = true;
        }
        return Long.parseLong(((MapleQuestStatus)a2).getCustomData()) + 86400000L < System.currentTimeMillis();
    }

    public /* synthetic */ void gainSP(int a2, int a3) {
        MapleCharacter a4;
        MapleCharacter mapleCharacter = a4;
        int n2 = a3;
        mapleCharacter.nc[n2] = mapleCharacter.nc[n2] + a2;
        MapleCharacter mapleCharacter2 = a4;
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.updateSp(mapleCharacter2, false));
        mapleCharacter2.Cb.sendPacket(UIPacket.getSPMsg((byte)a2, a4.ob));
    }

    public /* synthetic */ void setBeansTime(int a2) {
        a.PA = a2;
    }

    public /* synthetic */ void startFishingTask() {
        MapleCharacter a2;
        a2.cancelFishingTask();
        a2.pa = System.currentTimeMillis();
    }

    public /* synthetic */ void doDemon() {
        MapleCharacter a2;
        int n2 = 0;
        MapleItemInformationProvider mapleItemInformationProvider = MapleItemInformationProvider.getInstance();
        MapleCharacter mapleCharacter = a2;
        MapleInventory mapleInventory = mapleCharacter.getInventory(MapleInventoryType.EQUIPPED);
        if (JobConstants.isDemon(mapleCharacter.ob)) {
            MapleItemInformationProvider mapleItemInformationProvider2;
            if (a2.ob == 3110 && a2.IC >= 30) {
                n2 = 1099002;
                mapleItemInformationProvider2 = mapleItemInformationProvider;
            } else if (a2.ob == 3111 && a2.IC >= 70) {
                n2 = 1099003;
                mapleItemInformationProvider2 = mapleItemInformationProvider;
            } else {
                if (a2.ob == 3112 && a2.IC >= 120) {
                    n2 = 1099004;
                }
                mapleItemInformationProvider2 = mapleItemInformationProvider;
            }
            IItem iItem = mapleItemInformationProvider2.getEquipById(n2);
            MapleCharacter mapleCharacter2 = a2;
            mapleCharacter2.getInventory(MapleInventoryType.EQUIPPED).removeItem(a2, (short)-10);
            iItem.setPosition((short)-10);
            mapleInventory.addFromDB(mapleCharacter2, iItem);
        }
    }

    public /* synthetic */ void setRemainingSp(int a2, int a3) {
        a.nc[a3] = a2;
    }

    public /* synthetic */ boolean getLevelNoCheck() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u7b0f\u7d2c\u4e4b\u6a94\u67a3"), false) > 0L;
    }

    public final /* synthetic */ void maxSkillsByJob() {
        MapleCharacter a2;
        HashMap<ISkill, SkillEntry> hashMap = new HashMap<ISkill, SkillEntry>();
        for (ISkill iSkill : SkillFactory.getAllSkills()) {
            if (iSkill.canBeLearnedBy(a2.ob)) {
                ISkill iSkill2 = iSkill;
                ISkill iSkill3 = iSkill;
                hashMap.put(iSkill3, new SkillEntry(iSkill3.getMaxLevel(), iSkill.getMaxLevel(), -1L));
                if (GameSetConstants.MAPLE_VERSION > 113) continue;
                ISkill iSkill4 = iSkill;
                a2.changeSkillLevel(iSkill4, (int)iSkill.getMaxLevel(), (int)iSkill4.getMaxLevel());
                continue;
            }
            hashMap.put(iSkill, new SkillEntry(0, 0, -1L));
        }
        if (GameSetConstants.MAPLE_VERSION > 113) {
            a2.changeSkillLevel(hashMap);
        }
    }

    public /* synthetic */ int getblood() {
        MapleCharacter a2;
        return a2.oA;
    }

    public /* synthetic */ void UpdateLottoryDate() {
        MapleCharacter a2;
        a2.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6a34\u9049\u62a3\u6cae\u65d3\u6759"), FileoutputUtil.NowTimeNumber(), false);
    }

    public /* synthetic */ long getFactionPoint() {
        MapleCharacter a2;
        return a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u958e\u6d12\u7a43\u522a"), false);
    }

    public /* synthetic */ long getMonsterPoint() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u6bf9\u65a3\u6265\u606c\u7344\u5fd1\u9ee8\u653e"), true);
    }

    public /* synthetic */ long getOnlineTotalMins() {
        MapleCharacter a2;
        return a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u5726\u7df6\u5208\u9434"), false);
    }

    public /* synthetic */ long getLottoryDate() {
        MapleCharacter a2;
        return a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u6a0c\u9023\u629b\u6cc4\u65eb\u6733"), false);
    }

    public /* synthetic */ void gainItem(int a2, int a3) {
        MapleCharacter a4;
        if (MapleItemInformationProvider.getInstance().itemExists(a2)) {
            if (a3 > 0) {
                MapleCharacter mapleCharacter = a4;
                MapleInventoryManipulator.addById(mapleCharacter.Cb, a2, (short)a3, null);
                mapleCharacter.dropMessage("\u60a8\u5df2\u7372\u5f97\u7269\u54c1:" + MapleItemInformationProvider.getInstance().getName(a2) + a3 + "\u500b");
                return;
            }
            MapleCharacter mapleCharacter = a4;
            MapleInventoryManipulator.removeById(mapleCharacter.Cb, GameConstants.getInventoryType(a2), a2, -a3, true, false);
            mapleCharacter.dropMessage("\u60a8\u5df2\u5931\u53bb\u7269\u54c1:" + MapleItemInformationProvider.getInstance().getName(a2) + a3 + "\u500b");
            return;
        }
        a4.dropMessage("\u6b64\u7269\u54c1\u4e0d\u5b58\u5728,\u8acb\u901a\u77e5\u7ba1\u7406\u54e1 \u7269\u54c1\u4ee3\u78bc:" + a2);
    }

    public final /* synthetic */ MaplePet getSummonedPet(int a2) {
        MapleCharacter a3;
        for (MaplePet maplePet : a3.getSummonedPets()) {
            if (maplePet.getSummonedValue() - 1 != a2) continue;
            return maplePet;
        }
        return null;
    }

    public final /* synthetic */ List<Integer> getFamedCharacters() {
        MapleCharacter a2;
        return a2.oC;
    }

    public /* synthetic */ boolean hasPQrewardUI() {
        MapleCharacter a2;
        return a2.za;
    }

    public /* synthetic */ boolean isFirstBuff() {
        MapleCharacter a2;
        return a2.oa;
    }

    public /* synthetic */ List<Integer> getExcludeItem() {
        MapleCharacter a2;
        LinkedList<Integer> linkedList = new LinkedList<Integer>();
        for (Map.Entry<String, Long> entry : a2.ga.entrySet()) {
            if (!entry.getKey().contains(MapleNodes.ALLATORIxDEMO("\u9040\u6fd2\u7267\u54ed"))) continue;
            long l2 = entry.getValue();
            linkedList.add((int)l2);
        }
        return linkedList;
    }

    public final /* synthetic */ MapleQuestStatus getQuest(MapleQuest a2) {
        MapleCharacter a3;
        if (!a3.XB.containsKey(a2)) {
            return new MapleQuestStatus(a2, 0);
        }
        return a3.XB.get(a2);
    }

    public /* synthetic */ void setMobMove_Count(int a2) {
        a.ta = a2;
    }

    public final /* synthetic */ void cloneLook() {
        MapleCharacter a2;
        if (a2.Hc) {
            return;
        }
        int n2 = a2.qb.length;
        if (n2 > 0) {
            int n3;
            int n4 = n3 = 0;
            while (n4 < n2) {
                if (a2.qb[n3].get() == null) {
                    MapleCharacter mapleCharacter = a2;
                    MapleCharacter mapleCharacter2 = mapleCharacter.cloneLooks();
                    mapleCharacter.rC.addPlayer(mapleCharacter2);
                    mapleCharacter.rC.broadcastMessage(MaplePacketCreator.updateCharLook(mapleCharacter2));
                    mapleCharacter.rC.movePlayer(mapleCharacter2, a2.getPosition());
                    mapleCharacter.qb[n3] = new WeakReference<MapleCharacter>(mapleCharacter2);
                    return;
                }
                n4 = ++n3;
            }
        }
    }

    public /* synthetic */ void updateUsingPortal(boolean a2) {
        a.E = a2 ? System.currentTimeMillis() : 0L;
    }

    public /* synthetic */ void gainVPoints(int a2) {
        MapleCharacter a3;
        a3.jc += a2;
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.dropMessage("\u60a8\u7684" + GameSetConstants.VPOINT_NAME + "\u9ede\u6578\u5df2\u7d93\u8b8a\u66f4\u81f3" + mapleCharacter.jc + "\u9ede!");
    }

    public /* synthetic */ boolean hasBlockedInventory(boolean a2) {
        MapleCharacter a3;
        boolean bl = false;
        if (a2) {
            bl = !a3.isAlive() || a3.getTrade() != null || a3.getConversation() > 0 || a3.getPlayerShop() != null;
            return bl;
        }
        bl = a3.getTrade() != null || a3.getConversation() > 0 || a3.getPlayerShop() != null;
        return bl;
    }

    public /* synthetic */ void addMobKill(int a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        long l2 = mapleCharacter.getMobKill(a2) + 1L;
        mapleCharacter.setCharacterSet("\u64ca\u6bba\u7e3d\u602a\u7269" + a2, l2, false);
        a3.setCharacterSet("\u6bcf\u65e5\u64ca\u6bba\u602a\u7269" + a2, l2, false);
        if (JobConstants.is\u5929\u4f7f\u7834\u58de\u8005(a3.getJob()) && !a3.getKillMob_Temp_using() && a3.getTotalSkillLevel(65100005) > 0 && l2 % (long)(a2 = SkillFactory.getSkill(65100005).getEffect(a3.getTotalSkillLevel(65100005))).getX() == 0L) {
            a3.setKillMob_Temp_using(true);
        }
    }

    public final /* synthetic */ void setTransferTime(long a2) {
        a.W = a2;
    }

    public /* synthetic */ void setTotalBattleExp(int a2) {
        MapleCharacter a3;
        int n2 = a3.CB;
        a3.CB = a2;
        if (a2 != n2) {
            MapleCharacter mapleCharacter = a3;
            MapleCharacter mapleCharacter2 = a3;
            mapleCharacter.GB.recalcPVPRank(mapleCharacter2);
            mapleCharacter.updateSingleStat(MapleStat.BATTLE_EXP, a3.GB.pvpExp);
            mapleCharacter2.updateSingleStat(MapleStat.BATTLE_RANK, a3.GB.pvpRank);
        }
    }

    public /* synthetic */ void addHPMP(int a2, int a3) {
        MapleCharacter a4;
        MapleCharacter mapleCharacter = a4;
        if (mapleCharacter.GB.setHp(mapleCharacter.GB.getHp() + a2)) {
            MapleCharacter mapleCharacter2 = a4;
            mapleCharacter2.updateSingleStat(MapleStat.HP, mapleCharacter2.GB.getHp());
        }
        MapleCharacter mapleCharacter3 = a4;
        if (mapleCharacter3.GB.setMp(mapleCharacter3.GB.getMp() + a3)) {
            MapleCharacter mapleCharacter4 = a4;
            mapleCharacter4.updateSingleStat(MapleStat.MP, mapleCharacter4.GB.getMp());
        }
    }

    public /* synthetic */ void toggleTestingDPM() {
        MapleCharacter a2;
        a2.Ra = !a2.Ra;
    }

    public /* synthetic */ void saveInventory(Connection a2) {
        int n2;
        MapleCharacter a3;
        ArrayList<Pair<IItem, MapleInventoryType>> arrayList = new ArrayList<Pair<IItem, MapleInventoryType>>();
        MapleInventory[] arrmapleInventory = a3.LA;
        int n3 = a3.LA.length;
        int n4 = n2 = 0;
        while (n4 < n3) {
            MapleInventory mapleInventory = arrmapleInventory[n2];
            Iterator<IItem> iterator = mapleInventory.list().iterator();
            while (iterator.hasNext()) {
                Iterator<IItem> iterator2;
                IItem iItem = iterator2.next();
                iterator = iterator2;
                arrayList.add(new Pair<IItem, MapleInventoryType>(iItem, mapleInventory.getType()));
            }
            n4 = ++n2;
        }
        if (a2 != null) {
            try {
                if (GameSetConstants.NEW_ITEM_SAVE) {
                    ItemLoader.INVENTORY.saveItemsNew(arrayList, a2, a3.XC, 0);
                    return;
                }
                Integer[] arrinteger = new Integer[1];
                arrinteger[0] = a3.XC;
                ItemLoader.INVENTORY.saveItems(arrayList, a2, arrinteger);
                return;
            }
            catch (SQLException sQLException) {
                FilePrinter.printError(MapleNodes.ALLATORIxDEMO("CM~@kofM|MmXk^ XvX"), sQLException, FixDropNullItem.ALLATORIxDEMO("\u001dE'@#\u007f(@#X2Y4O\u001b"));
                return;
            }
        }
        try {
            if (GameSetConstants.NEW_ITEM_SAVE) {
                ItemLoader.INVENTORY.saveItemsNew(arrayList, a3.XC, 0);
                return;
            }
            Integer[] arrinteger = new Integer[1];
            arrinteger[0] = a3.XC;
            ItemLoader.INVENTORY.saveItems(arrayList, arrinteger);
            return;
        }
        catch (SQLException sQLException) {
            FilePrinter.printError(MapleNodes.ALLATORIxDEMO("CM~@kofM|MmXk^ XvX"), sQLException, FixDropNullItem.ALLATORIxDEMO("\u001dE'@#\u007f(@#X2Y4O\u001b"));
            return;
        }
    }

    public /* synthetic */ double getAllMesoRate() {
        MapleCharacter a2;
        double d2 = a2.Cb.getChannelServer().getMesoRate(a2.getWorld());
        if (GameSetConstants.MAPLE_VERSION >= 134) {
            d2 += (double)a2.getStat().incMesoProp / 100.0;
        }
        return d2;
    }

    public /* synthetic */ void setBeanConsume(int a2) {
        a.pb = a2;
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ void handleMapQuest(int a2) {
        switch (a2) {
            case 914100000: {
                MapleCharacter a3;
                if (a3.getQuestStatus(22579) != 2 || a3.getQuestStatus(22599) == 1) return;
                MapleQuest.getInstance(22599).forceStart(a3, 0, "1");
                return;
            }
        }
    }

    public /* synthetic */ int getTotalSkillLevel(ISkill a2) {
        MapleCharacter a3;
        if (a2 == null) {
            return 0;
        }
        SkillEntry skillEntry = a3.sB.get(a2);
        if (skillEntry == null || skillEntry.skillevel <= 0) {
            return 0;
        }
        if (SkillConstants.is\u5de8\u5927\u85e5\u6c34\u6280\u80fd(a2.getId()) || SkillConstants.is\u6b66\u9675\u9053\u5834\u6280\u80fd(a2.getId()) || SkillConstants.is\u6cd5\u8001\u7684\u61a4\u6012\u653b\u64ca(a2.getId())) {
            return 1;
        }
        return Math.min(a2.getTrueMax(), skillEntry.skillevel + (a2.isBeginnerSkill() ? 0 : a3.GB.combatOrders + (a2.getMaxLevel() > 10 ? a3.GB.incAllskill : 0) + a3.GB.getSkillIncrement(a2.getId())));
    }

    public /* synthetic */ boolean isLoggedIn() {
        MapleCharacter a2;
        return a2.I;
    }

    public /* synthetic */ boolean canFish(long a2) {
        MapleCharacter a3;
        if (World.hasFishing(a3.nC) != null) {
            return false;
        }
        MapleCharacter mapleCharacter = a3;
        int n2 = GameConstants.getFishingTime(mapleCharacter.getcheck_FishingVip(), a3.isGM());
        return mapleCharacter.pa > 0L && a3.pa + (long)n2 < a2;
    }

    public /* synthetic */ void setLuk(int a2) {
        MapleCharacter a3;
        a3.GB.luk = (short)a2;
        a3.GB.recalcLocalStats(false);
    }

    public /* synthetic */ void spawnClones() {
        int n2;
        MapleCharacter a2;
        if (a2.LC == 0 && a2.GB.hasClone) {
            a2.cloneLook();
        }
        int n3 = n2 = 0;
        while (n3 < a2.LC) {
            a2.cloneLook();
            n3 = ++n2;
        }
        a2.LC = 0;
    }

    public /* synthetic */ void setLastCombo(long a2) {
        a.wC = a2;
    }

    public static /* synthetic */ String secondToTime(long a2) {
        long l2 = a2 / 86400L;
        long l3 = (a2 %= 86400L) / 3600L;
        long l4 = (a2 %= 3600L) / 60L;
        a2 %= 60L;
        if (l2 > 0L) {
            return l2 + "\u5929" + l3 + ":" + l4 + ":" + a2;
        }
        return l3 + ":" + l4 + ":" + a2;
    }

    public /* synthetic */ int getCashMod() {
        MapleCharacter a2;
        return a2.GB.cashMod;
    }

    public /* synthetic */ Triple<List<MapleRing>, List<MapleRing>, List<MapleRing>> getRingsTriple(boolean a2) {
        MapleRing mapleRing;
        Equip equip;
        MapleCharacter a3;
        MapleInventory mapleInventory = a3.getInventory(MapleInventoryType.EQUIPPED);
        List<IItem> list = mapleInventory.newList();
        Collections.sort(list);
        ArrayList<MapleRing> arrayList = new ArrayList<MapleRing>();
        ArrayList<MapleRing> arrayList2 = new ArrayList<MapleRing>();
        ArrayList<MapleRing> arrayList3 = new ArrayList<MapleRing>();
        for (IItem iItem : list) {
            equip = (Equip)iItem;
            if (equip.getRing() == null) continue;
            Equip equip2 = equip;
            mapleRing = equip2.getRing();
            mapleRing.setEquipped(true);
            if (!GameConstants.isEffectRing(equip2.getItemId())) continue;
            if (a2) {
                if (GameConstants.isCrushRing(equip.getItemId())) {
                    arrayList.add(mapleRing);
                    continue;
                }
                if (GameConstants.isFriendshipRing(equip.getItemId())) {
                    arrayList2.add(mapleRing);
                    continue;
                }
                if (!GameConstants.isMarriageRing(equip.getItemId())) continue;
                arrayList3.add(mapleRing);
                continue;
            }
            if (arrayList.size() == 0 && GameConstants.isCrushRing(equip.getItemId())) {
                arrayList.add(mapleRing);
                continue;
            }
            if (arrayList2.size() == 0 && GameConstants.isFriendshipRing(equip.getItemId())) {
                arrayList2.add(mapleRing);
                continue;
            }
            if (arrayList3.size() != 0 || !GameConstants.isMarriageRing(equip.getItemId())) continue;
            arrayList3.add(mapleRing);
        }
        if (a2) {
            mapleInventory = a3.getInventory(MapleInventoryType.EQUIP);
            for (IItem iItem : mapleInventory.list()) {
                equip = (Equip)iItem;
                if (equip.getRing() == null || !GameConstants.isCrushRing(equip.getItemId())) continue;
                Equip equip3 = equip;
                mapleRing = equip3.getRing();
                mapleRing.setEquipped(false);
                if (GameConstants.isFriendshipRing(equip3.getItemId())) {
                    arrayList2.add(mapleRing);
                    continue;
                }
                if (GameConstants.isCrushRing(equip.getItemId())) {
                    arrayList.add(mapleRing);
                    continue;
                }
                if (!GameConstants.isMarriageRing(equip.getItemId())) continue;
                arrayList3.add(mapleRing);
            }
        }
        Collections.sort(arrayList2, new MapleRing.RingComparator());
        Collections.sort(arrayList, new MapleRing.RingComparator());
        Collections.sort(arrayList3, new MapleRing.RingComparator());
        return new Triple<List<MapleRing>, List<MapleRing>, List<MapleRing>>(arrayList, arrayList2, arrayList3);
    }

    public /* synthetic */ boolean SaveKeyCs() {
        MapleCharacter a2;
        CharSequence charSequence = new StringBuilder();
        if (a2.nd != null) {
            charSequence.append(a2.nd.getKey());
        }
        if (a2.N.equals(charSequence = charSequence.toString())) {
            boolean bl = true;
            return true;
        }
        a2.N = charSequence;
        boolean bl = false;
        return false;
    }

    private /* synthetic */ void H(Connection a2, String a3, String a4) throws SQLException {
        MapleCharacter a5;
        MapleCharacter.deletefunctionAcccountId(a2, a3, a5.nC, a4);
    }

    public /* synthetic */ long getCharacterSet(String a2, boolean a3) {
        long l2;
        block2: {
            boolean bl;
            MapleCharacter a4;
            block4: {
                block3: {
                    l2 = 0L;
                    if (a4.Ca == null || a4.ga == null) break block2;
                    if (!a3) break block3;
                    if (!a4.Ca.containsKey(a2)) break block2;
                    bl = a3;
                    break block4;
                }
                if (!a4.ga.containsKey(a2)) break block2;
                bl = a3;
            }
            l2 = bl ? a4.Ca.get(a2) : a4.ga.get(a2);
        }
        return l2;
    }

    public /* synthetic */ void setSkinColor_Force(byte a2) {
        MapleCharacter a3;
        if (World.Find.findChannel(a3.cB) <= 0) {
            a3.UpdateCharacter(FixDropNullItem.ALLATORIxDEMO("5]/X%Y*Y4"), a2);
            return;
        }
        a3.jd = a2;
    }

    public /* synthetic */ void applyIceGage(int a2) {
        MapleCharacter a3;
        a3.updateSingleStat(MapleStat.ICE_GAGE, a2);
    }

    public /* synthetic */ boolean isActiveBuffedValue(int a2) {
        MapleCharacter a3;
        for (MapleBuffStatValueHolder mapleBuffStatValueHolder : new LinkedList<MapleBuffStatValueHolder>(a3.kb.values())) {
            if (!mapleBuffStatValueHolder.effect.isSkill() || mapleBuffStatValueHolder.effect.getSourceId() != a2) continue;
            return true;
        }
        return false;
    }

    public /* synthetic */ SkillEntry getSkillEntry(ISkill a2) {
        MapleCharacter a3;
        SkillEntry skillEntry = null;
        for (ISkill iSkill : a3.sB.keySet()) {
            if (iSkill.getId() != a2.getId()) continue;
            skillEntry = a3.sB.get(iSkill);
        }
        return skillEntry;
    }

    public /* synthetic */ void setSpeakTime() {
        a.ra = System.currentTimeMillis();
    }

    public /* synthetic */ boolean isLineChatNotice() {
        MapleCharacter a2;
        return a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("Be@i\u8a04\u6043\u63de\u91be"), false) >= 1L;
    }

    public /* synthetic */ void setUseCube(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u4f49\u756e\u5971\u5e3d\u658f\u580c"), a2, false);
    }

    public /* synthetic */ void addReChargeFalse() {
        MapleCharacter a2;
        ++a2.i;
    }

    public /* synthetic */ void setSecondHair(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u0015S%Y(R\u0019~'_4"), a2);
    }

    public /* synthetic */ long getItemCooldown(int a2) {
        MapleCharacter a3;
        long l2 = a3.getCharacterSetTemp("cool_" + a2);
        if (l2 <= System.currentTimeMillis()) {
            a3.setCharacterSetTemp("cool_" + a2, 0L);
            l2 = -1L;
        }
        return l2;
    }

    public /* synthetic */ long getSpeedTime(String a2) {
        MapleCharacter a3;
        return a3.getCharacterSet(a2, false);
    }

    public /* synthetic */ List<IItem> getSell() {
        MapleCharacter a2;
        return a2.ea;
    }

    public /* synthetic */ void updateUsingMoveSkill(boolean a2) {
        a.g = a2 ? System.currentTimeMillis() : 0L;
    }

    public /* synthetic */ long getPotential7() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u5081\u5bf5\u6e2d\u510b"), false);
    }

    public /* synthetic */ String setFactionEvil() {
        MapleCharacter a2;
        if (!a2.getFaction().isEmpty()) {
            return FixDropNullItem.ALLATORIxDEMO("\u60ee\u5dc4\u52e6\u5153\u95c6\u6d08g");
        }
        a2.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u90a4\u6d12"), 1L, false);
        return FixDropNullItem.ALLATORIxDEMO("\u605b\u55da\u609e\u6b25\u5f39\u6256\u708c\u90ec\u6d08\u95c6\u5fa4g");
    }

    public /* synthetic */ boolean isPirate() {
        MapleCharacter a2;
        return a2.ob >= 500 && a2.ob <= 522 || a2.ob >= 1500 && a2.ob <= 1512;
    }

    public /* synthetic */ void setMonsterPoint(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u6bc1\u65c9\u625d\u6006\u737c\u5fbb\u9ed0\u6554"), a2, true);
    }

    public /* synthetic */ CheatTracker getCheatTracker() {
        MapleCharacter a2;
        return a2.LB;
    }

    public /* synthetic */ int getJunior2() {
        MapleCharacter a2;
        if (a2.JC == null) {
            return 0;
        }
        return a2.JC.getJunior2();
    }

    public /* synthetic */ int getLightGauge() {
        MapleCharacter a2;
        return a2.A;
    }

    public /* synthetic */ boolean canLevelUp() {
        MapleCharacter a2;
        if (JobConstants.is\u9f8d\u9b54\u5c0e\u58eb(a2.ob)) {
            if (a2.ob == 2200 && a2.IC + 1 > 20) {
                return false;
            }
            if (a2.ob == 2210 && a2.IC + 1 > 30) {
                return false;
            }
            if (a2.ob == 2211 && a2.IC + 1 > 40) {
                return false;
            }
            if (a2.ob == 2212 && a2.IC + 1 > 50) {
                return false;
            }
            if (a2.ob == 2213 && a2.IC + 1 > 60) {
                return false;
            }
            if (a2.ob == 2214 && a2.IC + 1 > 80) {
                return false;
            }
            if (a2.ob == 2215 && a2.IC + 1 > 100) {
                return false;
            }
            if (a2.ob == 2216 && a2.IC + 1 > 120) {
                return false;
            }
            return a2.ob != 2217 || a2.IC + 1 <= 160;
        }
        if (JobConstants.is\u5f71\u6b66\u8005(a2.ob) && a2.getSubcategory() == 1) {
            if (a2.ob == 400 && a2.IC + 1 > 20) {
                return false;
            }
            if (a2.ob == 430 && a2.IC + 1 > 30) {
                return false;
            }
            if (a2.ob == 431 && a2.IC + 1 > 55) {
                return false;
            }
            if (a2.ob == 432 && a2.IC + 1 > 70) {
                return false;
            }
            return a2.ob != 433 || a2.IC + 1 <= 120;
        }
        Object object = JobConstants.getJobLeveList().entrySet();
        short s2 = -1;
        int n2 = -1;
        object = object.iterator();
        while (object.hasNext()) {
            Map.Entry entry = (Map.Entry)object.next();
            s2 = ((Integer)entry.getKey()).intValue();
            n2 = (Integer)entry.getValue();
            if (a2.ob != s2 || a2.IC + 1 <= n2) continue;
            return false;
        }
        return true;
    }

    public /* synthetic */ long getSkillTemp(int a2) {
        MapleCharacter a3;
        return a3.getCharacterSetTemp(Integer.toString(a2));
    }

    public /* synthetic */ boolean checkUsingPortal() {
        boolean bl;
        MapleCharacter a2;
        boolean bl2 = a2.E > 0L;
        boolean bl3 = bl = a2.E + 2000L < System.currentTimeMillis();
        if (!bl2) {
            return bl2;
        }
        return !bl2 || !bl;
    }

    public /* synthetic */ void setCanDice(boolean a2) {
        a.Ub = a2;
    }

    public /* synthetic */ boolean getMerchantItemBack() {
        MapleCharacter a2;
        return a2.BB;
    }

    public /* synthetic */ int getItemEffect() {
        MapleCharacter a2;
        return a2.nA;
    }

    public /* synthetic */ int getJunior1() {
        MapleCharacter a2;
        if (a2.JC == null) {
            return 0;
        }
        return a2.JC.getJunior1();
    }

    public /* synthetic */ void setcheck_FishingVip(boolean a2) {
        a.gd = a2;
    }

    public /* synthetic */ void registerEffect(MapleStatEffect a2, long a3, List<Pair<MapleBuffStat, Integer>> a4, int a5, int a6) {
        int n2;
        int n3;
        MapleCharacter a7;
        if (a2.isHide() && a7.isGM()) {
            a7.Bc = true;
            MapleCharacter mapleCharacter = a7;
            a7.rC.broadcastNONGMMessage(mapleCharacter, MaplePacketCreator.removePlayerFromMap(mapleCharacter.getId()), false);
        } else if (a2.isDragonBlood()) {
            a7.E();
        } else if (a2.isBerserk()) {
            a7.doBerserk();
        } else {
            MapleCharacter mapleCharacter = a7;
            if (a2.isRecovery()) {
                mapleCharacter.I();
            } else if (GameConstants.isAran(mapleCharacter.getJob())) {
                n3 = a7.CountAranCombo(a2.getSourceId());
                if (n3 > 0) {
                    if (a7.getCombo() - n3 < 0 && GameSetConstants.ARAN_COMBO_CHECK) {
                        a7.getCheatTracker().registerOffense(CheatingOffense.ARAN_COMBO_HACK, "COMBO\u6578\u91cf" + a7.getCombo() + "\u4f7f\u7528\u9700\u8981" + n3 + " COMBO\u7684\u6280\u80fd(" + a2.getSourceId() + ")");
                    }
                    MapleCharacter mapleCharacter2 = a7;
                    if (a7.getCombo() - n3 < 0) {
                        mapleCharacter2.setCombo(0);
                    } else {
                        mapleCharacter2.setCombo(a7.getCombo() - n3);
                    }
                }
            } else if (a2.getSourceId() == 11111001) {
                a7.dispelSkill(11001004);
            } else if (a2.getSourceId() == 11001004) {
                a7.dispelSkill(11111001);
            }
        }
        n3 = 0;
        for (Pair<MapleBuffStat, Integer> pair : a4) {
            if (pair.getLeft() == MapleBuffStat.ILLUSION) {
                n3 = pair.getRight();
            }
            int n4 = pair.getRight();
            if (pair.getLeft() == MapleBuffStat.MONSTER_RIDING && a2.getSourceId() == 5221006) {
                a7.FB = a7.maxBattleshipHP(5221006);
            }
            MapleBuffStatValueHolder mapleBuffStatValueHolder = new MapleBuffStatValueHolder(a2, a3, n4, a5, a6);
            if (GameSetConstants.MAPLE_VERSION >= 142) {
                if (pair.getLeft().canStack() && !SkillConstants.isSpecialStackBuff(pair.getLeft())) {
                    a7.p.add(new SpecialBuffInfo(a2.getSourceId(), pair.getLeft(), mapleBuffStatValueHolder));
                    continue;
                }
                a7.kb.put(pair.getLeft(), mapleBuffStatValueHolder);
                continue;
            }
            a7.kb.put(pair.getLeft(), mapleBuffStatValueHolder);
        }
        if (n3 > 0 && n3 > (n2 = Math.max(a7.getNumClones(), a7.getCloneSize()))) {
            int n5;
            int n6 = n5 = 0;
            while (n6 < n3 - n2) {
                a7.cloneLook();
                n6 = ++n5;
            }
        }
        MapleCharacter mapleCharacter = a7;
        mapleCharacter.GB.recalcLocalStats();
        if (mapleCharacter.getDebugMessage()) {
            Iterator<Pair<MapleBuffStat, Integer>> iterator = a4.iterator();
            Iterator<Pair<MapleBuffStat, Integer>> iterator2 = iterator;
            while (iterator2.hasNext()) {
                Pair<MapleBuffStat, Integer> pair = iterator.next();
                a7.dropMessage(6, "[\u7cfb\u7d71\u63d0\u793a]\u0010" + pair.getLeft().toString() + "(0x" + HexTool.toString(pair.getLeft().getValue()) + ")");
                iterator2 = iterator;
            }
        }
        if (a7.isShowInfo()) {
            MapleCharacter mapleCharacter3 = a7;
            mapleCharacter3.dropDebugMessage(MapleNodes.ALLATORIxDEMO("\u8a17\u5184\u4e2c\u8222n[jH\u6564\u6792\f#\f\u7578\u5261LyHj\u7e33\u6554\uff14\f") + a7.kb.size() + FixDropNullItem.ALLATORIxDEMO("f\u62b6\u80bb\uff2cf") + a2.getSourceId());
            mapleCharacter3.dropDebugMessage(new StringBuilder().insert(0, MapleNodes.ALLATORIxDEMO("\u8a17\u5184\u582a\u7584n[jH\u6564\u6792\f#\f\u7578\u5261LyHj\u7e33\u6554\uff14\f")).append(a7.p.size()).append(FixDropNullItem.ALLATORIxDEMO("f\u62b6\u80bb\uff2cf")).append(a2.getSourceId()).toString());
        }
    }

    public /* synthetic */ void endTradeMsg(String a2) {
        MapleCharacter a3;
        if (GameSetConstants.LOG_TRADE) {
            FileoutputUtil.logToFile(FixDropNullItem.ALLATORIxDEMO("*Y!Eir'B'\u0019\u65f6\u4e92\u6655\u7d36\u9342\u00182N2"), a3.tC);
        }
        if (a3.Cb.isMonitored()) {
            FileoutputUtil.logToFile("logs/Hack/\u5371\u96aa\u5e33\u865f\u64cd\u4f5c/" + a3.getName() + "/\u5404\u5f0f\u64cd\u4f5c.txt", a3.tC);
        }
        a3.tC = "";
    }

    public /* synthetic */ void removeChracterSetAcc(String a2) {
        MapleCharacter a3;
        a3.Ca.remove(a2);
    }

    public /* synthetic */ boolean checkSoulWeapon() {
        MapleCharacter a2;
        Equip equip = (Equip)a2.getInventory(MapleInventoryType.EQUIPPED).getItem((short)-11);
        return equip != null && equip.getSoulEnchanter() != 0;
    }

    public /* synthetic */ int getLottoryNumber2() {
        MapleCharacter a2;
        return (int)a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u6a2e\u9001\u7b00\u4e82\u5027\u8651\u7890"), false);
    }

    public /* synthetic */ int getMobCount() {
        MapleCharacter a2;
        return a2.Nb;
    }

    public /* synthetic */ void setHair(int a2) {
        MapleCharacter a3;
        if (a3.zc != a2) {
            a3.YB = true;
        }
        a3.zc = a2;
    }

    public /* synthetic */ boolean getmsg_MobVac() {
        MapleCharacter a2;
        return a2.Rc;
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ long getofflinetime() {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [3[TRYBLOCK]], but top level block is 5[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ boolean inMapleLand() {
        MapleCharacter a2;
        return MapConstants.isMapleLand(a2.getMapId());
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ void autoJob_\u5192\u96aa\u5bb6() {
        MapleCharacter a2;
        if (JobConstants.is\u82f1\u96c4(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(111);
                return;
            }
            if (a2.getLevel() != GameConstants.getCharacter4thJobLevel(a2.ob)) return;
            a2.changeJob(112);
            return;
        } else if (JobConstants.is\u8056\u9a0e\u58eb(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(121);
                return;
            }
            if (a2.getLevel() != GameConstants.getCharacter4thJobLevel(a2.ob)) return;
            a2.changeJob(122);
            return;
        } else if (JobConstants.is\u9ed1\u9a0e\u58eb(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(131);
                return;
            }
            if (a2.getLevel() != GameConstants.getCharacter4thJobLevel(a2.ob)) return;
            a2.changeJob(132);
            return;
        } else if (JobConstants.is\u5927\u9b54\u5c0e\u58eb_\u706b\u6bd2(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(211);
                return;
            }
            if (a2.getLevel() != GameConstants.getCharacter4thJobLevel(a2.ob)) return;
            a2.changeJob(212);
            return;
        } else if (JobConstants.is\u5927\u9b54\u5c0e\u58eb_\u51b0\u96f7(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(221);
                return;
            }
            if (a2.getLevel() != GameConstants.getCharacter4thJobLevel(a2.ob)) return;
            a2.changeJob(222);
            return;
        } else if (JobConstants.is\u4e3b\u6559(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(231);
                return;
            }
            if (a2.getLevel() != GameConstants.getCharacter4thJobLevel(a2.ob)) return;
            a2.changeJob(232);
            return;
        } else if (JobConstants.is\u7bad\u795e(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(311);
                return;
            }
            if (a2.getLevel() != GameConstants.getCharacter4thJobLevel(a2.ob)) return;
            a2.changeJob(312);
            return;
        } else if (JobConstants.is\u795e\u5c04\u624b(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(321);
                return;
            }
            if (a2.getLevel() != GameConstants.getCharacter4thJobLevel(a2.ob)) return;
            a2.changeJob(322);
            return;
        } else if (JobConstants.is\u591c\u4f7f\u8005(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(411);
                return;
            }
            if (a2.getLevel() != GameConstants.getCharacter4thJobLevel(a2.ob)) return;
            a2.changeJob(412);
            return;
        } else if (JobConstants.is\u6697\u5f71\u795e\u5077(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(421);
                return;
            }
            if (a2.getLevel() != GameConstants.getCharacter4thJobLevel(a2.ob)) return;
            a2.changeJob(422);
            return;
        } else if (JobConstants.is\u5f71\u6b66\u8005(a2.ob) || a2.zC == 1 && a2.ob == 400) {
            switch (a2.getLevel()) {
                case 20: {
                    a2.changeJob(430);
                    return;
                }
                case 30: {
                    a2.changeJob(431);
                    return;
                }
                case 55: {
                    a2.changeJob(432);
                    return;
                }
            }
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(433);
                return;
            }
            if (a2.getLevel() != GameConstants.getCharacter4thJobLevel(a2.ob)) return;
            a2.changeJob(434);
            return;
        } else if (JobConstants.is\u62f3\u9738(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(511);
                return;
            }
            if (a2.getLevel() != GameConstants.getCharacter4thJobLevel(a2.ob)) return;
            a2.changeJob(512);
            return;
        } else if (JobConstants.is\u69cd\u795e(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(521);
                return;
            }
            if (a2.getLevel() != GameConstants.getCharacter4thJobLevel(a2.ob)) return;
            a2.changeJob(522);
            return;
        } else if (JobConstants.is\u91cd\u7832\u6307\u63ee\u5b98(a2.ob)) {
            if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                a2.changeJob(530);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(531);
                return;
            }
            if (a2.getLevel() != GameConstants.getCharacter4thJobLevel(a2.ob)) return;
            a2.changeJob(532);
            return;
        } else {
            if (!JobConstants.is\u84bc\u9f8d\u4fe0\u5ba2(a2.ob)) return;
            if (a2.getLevel() == GameConstants.getCharacter2ndJobLevel(a2.ob)) {
                a2.changeJob(570);
                return;
            }
            if (a2.getLevel() == GameConstants.getCharacter3rdJobLevel(a2.ob)) {
                a2.changeJob(571);
                return;
            }
            if (a2.getLevel() != GameConstants.getCharacter4thJobLevel(a2.ob)) return;
            a2.changeJob(572);
        }
    }

    public final /* synthetic */ void updateQuest(int a22) {
        MapleCharacter a3;
        MapleQuest a22 = MapleQuest.getInstance(a22);
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.updateQuest(mapleCharacter.getQuest(a22), false);
    }

    public /* synthetic */ int getEXPMod() {
        MapleCharacter a2;
        return a2.GB.expMod;
    }

    public /* synthetic */ boolean isClone() {
        MapleCharacter a2;
        return a2.Hc;
    }

    /*
     * Exception decompiling
     */
    public static /* synthetic */ int getIdByName(String a) {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [4[TRYBLOCK], 2[TRYBLOCK]], but top level block is 7[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ int[] getFaceAlbums() {
        MapleCharacter a2;
        return a2.getFaceAlbum().stream().mapToInt(Integer::intValue).toArray();
    }

    public /* synthetic */ int getStr() {
        MapleCharacter a2;
        return a2.getStat().getStr();
    }

    public /* synthetic */ List<Integer> getFinishedAchievements() {
        MapleCharacter a2;
        return a2.lc;
    }

    public /* synthetic */ int getSummonsSize() {
        MapleCharacter a2;
        return a2.Hb.size();
    }

    public /* synthetic */ int getMobVac_Count() {
        MapleCharacter a2;
        return a2.Sa;
    }

    public final /* synthetic */ int getGreenSaver() {
        MapleCharacter a2;
        return a2.KC;
    }

    public /* synthetic */ int getFirstLinkMid() {
        MapleCharacter a2;
        Iterator<Integer> iterator = a2.Ka.keySet().iterator();
        if (iterator.hasNext()) {
            return iterator.next();
        }
        return 0;
    }

    public /* synthetic */ void setAndroid(MapleAndroid a2) {
        MapleCharacter a3;
        if (a3.checkHearts()) {
            a3.Da = a2;
            if (a3.rC != null && a2 != null) {
                MapleCharacter mapleCharacter = a3;
                a3.rC.broadcastMessage(MaplePacketCreator.spawnAndroid(mapleCharacter, a2));
                mapleCharacter.rC.broadcastMessage(MaplePacketCreator.showAndroidEmotion(a3.getId(), Randomizer.nextInt(17) + 1));
            }
        }
    }

    public /* synthetic */ void setBuddyCapacity(byte a2) {
        MapleCharacter a3;
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.tB.setCapacity(a2);
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.updateBuddyCapacity(a2));
    }

    public /* synthetic */ void addRegRockMap() {
        MapleCharacter a2;
        if (a2.getRegRockSize() >= 5) {
            return;
        }
        a2.ZC[a2.getRegRockSize()] = a2.getMapId();
        a2.dd = true;
    }

    public /* synthetic */ int getEXPRate() {
        MapleCharacter a2;
        return a2.GB.expRate;
    }

    public /* synthetic */ void setSpendMeso(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u4efc\u65a3\u8287\u8cfd\u6965\u5e25"), a2, false);
    }

    public /* synthetic */ boolean canSpeak() {
        MapleCharacter a2;
        return System.currentTimeMillis() - a2.ra > 500L;
    }

    public /* synthetic */ void forceReAddItem_Equip(IItem a2, MapleInventoryType a3, boolean a4) {
        MapleCharacter a5;
        if (a3 != MapleInventoryType.UNDEFINED) {
            if (a5.getInventory(a3).countById(a2.getItemId()) >= 1) {
                a5.Cb.sendPacket(MaplePacketCreator.modifyInventory(false, new ModifyInventory(3, a2, a3 == MapleInventoryType.EQUIPPED ? (short)1 : (short)a3.getType()), a5));
            }
            a5.Cb.sendPacket(MaplePacketCreator.modifyInventory(false, new ModifyInventory(0, a2, a3 == MapleInventoryType.EQUIPPED ? (short)1 : (short)a3.getType()), a5));
        }
        if (a4) {
            a5.forceReAddItem_NoUpdate(a2, a3);
        }
    }

    public /* synthetic */ void handleForceGain(int a2, int a3) {
        MapleCharacter a4;
        a4.handleForceGain(a2, a3, 0);
    }

    public /* synthetic */ long getOnlineTime() {
        MapleCharacter a2;
        return a2.getOnlineMins();
    }

    public /* synthetic */ int getEquipMesoRate() {
        MapleCharacter a2;
        return a2.GB.EquipMeso;
    }

    public /* synthetic */ int getVipDropRate() {
        MapleCharacter a2;
        int n2 = a2.getVip();
        int n3 = 0;
        if (GameSetConstants.VIPDROP) {
            if (n2 <= 20) {
                n3 = (int)((double)n2 * GameSetConstants.VIPDROP_INTERVAL * 100.0);
                return n3;
            }
            n2 = 20;
            n3 = (int)((double)20 * GameSetConstants.VIPDROP_INTERVAL * 100.0);
        }
        return n3;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ void resetPrizeLog(String a) {
        var2_2 = DBConPool.getInstance().getDataSource().getConnection();
        try {
            var3_4 = false;
            v0 = var4_6 = var2_2.prepareStatement(MapleNodes.ALLATORIxDEMO("hK`KxK\fh^aA.\\|EtIbCi\fyDk^k\foOmEj\f3\f1\foBj\flC}_gH.\u0011.\u0013"));
            v0.setInt(1, a.getClient().getAccID());
            var4_6.setString(2, a);
            v0.executeUpdate();
            var4_6.close();
            ** if (var2_2 == null) goto lbl-1000
        }
        catch (Throwable var3_5) {
            if (var2_2 == null) ** GOTO lbl25
            try {
                var2_2.close();
                v1 = var3_5;
                ** GOTO lbl26
            }
            catch (Throwable var4_7) {
                try {
                    var3_5.addSuppressed(var4_7);
lbl25:
                    // 2 sources

                    v1 = var3_5;
lbl26:
                    // 2 sources

                    throw v1;
                }
                catch (Exception var2_3) {
                    System.out.println(var2_3);
                }
            }
        }
lbl-1000:
        // 1 sources

        {
            var2_2.close();
            return;
        }
lbl-1000:
        // 1 sources

        {
        }
    }

    public /* synthetic */ void renewGuildMsg() {
        MapleCharacter a2;
        if (a2.getGuildId() > 0) {
            a2.Cb.sendPacket(MaplePacketCreator.showGuildInfo(a2));
            return;
        }
        a2.Cb.sendPacket(MaplePacketCreator.\u52f3\u7ae0(a2));
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ int getMonsterPetKill(int a) {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Tried to end blocks [3[TRYBLOCK], 1[TRYBLOCK]], but top level block is 5[TRYBLOCK]
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.processEndingBlocks(Op04StructuredStatement.java:429)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:478)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ int getRemainingSpSize() {
        MapleCharacter a2;
        int n2;
        int n3 = 0;
        int n4 = n2 = 0;
        while (n4 < a2.nc.length) {
            if (a2.nc[n2] > 0) {
                ++n3;
            }
            n4 = ++n2;
        }
        return n3;
    }

    public /* synthetic */ int getNoJuniors() {
        MapleCharacter a2;
        if (a2.JC == null) {
            return 0;
        }
        return a2.JC.getNoJuniors();
    }

    public /* synthetic */ void addReChargeFalse_2() {
        MapleCharacter a2;
        ++a2.J;
    }

    public /* synthetic */ List<Integer> getFaceAlbum() {
        MapleCharacter a2;
        int n2;
        ArrayList<Integer> arrayList = new ArrayList<Integer>();
        int n3 = n2 = 0;
        while (n3 < a2.Cd.length) {
            if (a2.Cd[n2] > 0) {
                arrayList.add(a2.Cd[n2]);
            }
            n3 = ++n2;
        }
        a2.Oc = arrayList;
        return arrayList;
    }

    public /* synthetic */ void setJob_Force(short a2) {
        MapleCharacter a3;
        if (World.Find.findChannel(a3.cB) <= 0) {
            a3.UpdateCharacter(MapleNodes.ALLATORIxDEMO("FaN"), a2);
            return;
        }
        a3.ob = a2;
    }

    public /* synthetic */ boolean doReborn(int a2, boolean a3) {
        MapleCharacter mapleCharacter;
        MapleCharacter a4;
        if (a4.getInventory(MapleInventoryType.EQUIP).getNumFreeSlot() < 33) {
            return false;
        }
        MapleBuffStat[] arrmapleBuffStat = new MapleBuffStat[1];
        arrmapleBuffStat[0] = MapleBuffStat.MAXHP;
        a4.cancelBuffStats(arrmapleBuffStat);
        MapleBuffStat[] arrmapleBuffStat2 = new MapleBuffStat[1];
        arrmapleBuffStat2[0] = MapleBuffStat.MAXMP;
        a4.cancelBuffStats(arrmapleBuffStat2);
        MapleCharacter mapleCharacter2 = a4;
        mapleCharacter2.unequips();
        mapleCharacter2.dispel();
        int n2 = mapleCharacter2.getHp() * 1 / 3;
        int n3 = mapleCharacter2.getMp() * 1 / 3;
        int n4 = n2;
        int n5 = n3;
        int n6 = 0;
        mapleCharacter2.setLevel((short)5);
        mapleCharacter2.setExp(0);
        mapleCharacter2.setHp(n4);
        mapleCharacter2.setMp(n5);
        mapleCharacter2.setMaxHp(n2);
        mapleCharacter2.setMaxMp(n3);
        mapleCharacter2.setStr(4);
        mapleCharacter2.setDex(4);
        mapleCharacter2.setInt(4);
        mapleCharacter2.setLuk(4);
        mapleCharacter2.setRemainingAp((short)0);
        mapleCharacter2.setRemainingSp(0);
        mapleCharacter2.removeAllQuest();
        if (a2 == 2) {
            MapleCharacter mapleCharacter3 = a4;
            mapleCharacter = mapleCharacter3;
            MapleCharacter mapleCharacter4 = a4;
            mapleCharacter4.setQuestAdd(MapleQuest.getInstance(20022), (byte)1, "1");
            mapleCharacter3.setQuestAdd(MapleQuest.getInstance(20010), (byte)1, null);
            mapleCharacter4.changeJob(MapleJob.\u8cb4\u65cf.getId());
        } else if (a2 == 3) {
            MapleCharacter mapleCharacter5 = a4;
            mapleCharacter = mapleCharacter5;
            mapleCharacter5.changeJob(MapleJob.\u50b3\u8aaa.getId());
        } else if (a2 == 4) {
            MapleCharacter mapleCharacter6 = a4;
            mapleCharacter = mapleCharacter6;
            mapleCharacter6.changeJob(MapleJob.\u9f8d\u9b54\u5c0e\u58eb0\u8f49.getId());
        } else {
            MapleCharacter mapleCharacter7 = a4;
            mapleCharacter = mapleCharacter7;
            mapleCharacter7.changeJob(MapleJob.\u521d\u5fc3\u8005.getId());
        }
        mapleCharacter.updateSingleStat(MapleStat.LEVEL, 1);
        MapleCharacter mapleCharacter8 = a4;
        mapleCharacter8.updateSingleStat(MapleStat.EXP, 0);
        mapleCharacter8.updateSingleStat(MapleStat.HP, n4);
        mapleCharacter8.updateSingleStat(MapleStat.MP, n5);
        mapleCharacter8.updateSingleStat(MapleStat.MAXHP, n2);
        mapleCharacter8.updateSingleStat(MapleStat.MAXMP, n3);
        mapleCharacter8.updateSingleStat(MapleStat.STR, 4);
        mapleCharacter8.updateSingleStat(MapleStat.DEX, 4);
        mapleCharacter8.updateSingleStat(MapleStat.INT, 4);
        mapleCharacter8.updateSingleStat(MapleStat.LUK, 4);
        mapleCharacter8.updateSingleStat(MapleStat.AVAILABLEAP, n6);
        mapleCharacter8.updateSingleStat(MapleStat.AVAILABLESP, 0);
        if (a3) {
            MapleCharacter mapleCharacter9;
            MapleCharacter mapleCharacter10 = a4;
            mapleCharacter10.clearSkills();
            PlayerHandler.ResetSkillMacro(mapleCharacter10);
            try {
                MapleCharacter mapleCharacter11 = a4;
                mapleCharacter11.Pd.DeleteKeys(mapleCharacter11.XC);
                mapleCharacter9 = a4;
            }
            catch (SQLException sQLException) {
                System.err.println("Error doReborn" + sQLException);
                FileoutputUtil.outError(MapleNodes.ALLATORIxDEMO("@aK}\u0003jC\\IlC|B XvX"), sQLException);
                mapleCharacter9 = a4;
            }
            mapleCharacter9.Pd.clearKeyMap();
        }
        MapleCharacter mapleCharacter12 = a4;
        mapleCharacter12.addReborn();
        if (!mapleCharacter12.isLevelBurnUp()) {
            a4.setLevelBurnUp(true);
        }
        MapleCharacter mapleCharacter13 = a4;
        long l2 = mapleCharacter13.getReborn();
        mapleCharacter13.Cb.sendPacket(MaplePacketCreator.getKeymap(a4.getKeyLayout()));
        mapleCharacter13.Cb.sendPacket(MaplePacketCreator.serverNotice("[\u8f49\u751f]: \u606d\u8cc0 " + a4.getName() + " \u8f49\u751f\u7b2c " + l2 + " \u6b21\u6210\u529f!"));
        if (a2 == 2) {
            MapleCharacter mapleCharacter14 = a4;
            mapleCharacter14.updateSingleStat(MapleStat.JOB, 1000);
            mapleCharacter14.MapReload(130030000);
        } else if (a2 == 3) {
            MapleCharacter mapleCharacter15 = a4;
            mapleCharacter15.updateSingleStat(MapleStat.JOB, 2000);
            mapleCharacter15.MapReload(914000100);
        } else {
            a4.updateSingleStat(MapleStat.JOB, 0);
            a4.MapReload(10000);
        }
        return true;
    }

    private /* synthetic */ int ALLATORIxDEMO(int a2) {
        int n2;
        MapleCharacter a3;
        if (GameSetConstants.MARRY_EXP_BONUS > 1.0) {
            Iterator<MapleCharacter> iterator = a3.getMap().getCharactersThreadsafe().iterator();
            while (iterator.hasNext()) {
                if (iterator.next().getId() != a3.getMarriageId()) continue;
                a2 = (int)((double)a2 * GameSetConstants.MARRY_EXP_BONUS);
            }
        }
        if (a3.getExtraExp() > 10000L) {
            a2 = (int)((double)((long)a2 * a3.getExtraExp()) * 1.0E-4);
        }
        int n3 = n2 = 0;
        while (n3 < GameSetConstants.EXTRA_EXPMAP.length) {
            if (a3.Qc == GameSetConstants.EXTRA_EXPMAP[n2][0]) {
                a2 = (int)((double)((long)a2 * (long)GameSetConstants.EXTRA_EXPMAP[n2][1]) * 1.0E-4);
                break;
            }
            n3 = ++n2;
        }
        if (GameSetConstants.SERVER_NAME.equals(FixDropNullItem.ALLATORIxDEMO("\u4ec9\u54ec\u549c\u8c71"))) {
            int n4 = n2 = 0;
            while (n4 < a3.getReborn()) {
                a2 = (int)((double)a2 * 0.995);
                n4 = ++n2;
            }
        }
        return a2;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ void gainDonate(int a) {
        var2_3 = DBConPool.getInstance().getDataSource().getConnection();
        try {
            v0 = var3_5 = var2_3.prepareStatement(MapleNodes.ALLATORIxDEMO("Gb]i\\x.e@xA\fnHaBoXkL.\u0004nEjL\"\fnY}I|BoAkL\"\fnMcC{BzL\"\fn\\oUcI`XCIzDaHn\u0000.LjMzIn\u0005.zO`[i]\f&b[`B\u0000.\u0013\"\f1\u0000.\u0013\"\fMy\\~KbZsZeCi]xOa^\u0005"));
            var3_5.setString(1, a.getClient().getAccountName());
            v0.setInt(2, a);
            v0.setString(3, a.getName() + "NPC\u65b0\u589e");
            v1 = var3_5;
            v1.execute();
            v1.close();
            ** if (var2_3 == null) goto lbl-1000
        }
        catch (Throwable var3_6) {
            if (var2_3 == null) ** GOTO lbl26
            try {
                var2_3.close();
                v2 = var3_6;
                ** GOTO lbl27
            }
            catch (Throwable a) {
                try {
                    var3_6.addSuppressed(a);
lbl26:
                    // 2 sources

                    v2 = var3_6;
lbl27:
                    // 2 sources

                    throw v2;
                }
                catch (Exception var2_4) {
                    var2_4.printStackTrace();
                }
            }
        }
lbl-1000:
        // 1 sources

        {
            var2_3.close();
            return;
        }
lbl-1000:
        // 1 sources

        {
        }
    }

    public /* synthetic */ boolean isGlidingDragon() {
        MapleCharacter a2;
        return a2.WB;
    }

    public /* synthetic */ boolean hasGmLevel(int a2) {
        MapleCharacter a3;
        return a3.id >= a2;
    }

    public /* synthetic */ void setconstellation(int a2) {
        a.Lc = a2;
    }

    public /* synthetic */ Map<Integer, Integer> getMosterKillInMap() {
        MapleCharacter a2;
        return a2.la;
    }

    public /* synthetic */ MapleCharacter cloneLooks() {
        MapleCharacter a2;
        Object object = new MapleClient(null, null, new MockIOSession());
        int n2 = a2.getId() + Randomizer.nextInt(a2.getId());
        MapleCharacter mapleCharacter = new MapleCharacter(true);
        MapleCharacter mapleCharacter2 = a2;
        MapleCharacter mapleCharacter3 = mapleCharacter;
        MapleCharacter mapleCharacter4 = a2;
        MapleCharacter mapleCharacter5 = a2;
        MapleCharacter mapleCharacter6 = mapleCharacter;
        MapleCharacter mapleCharacter7 = mapleCharacter;
        MapleCharacter mapleCharacter8 = a2;
        MapleCharacter mapleCharacter9 = mapleCharacter;
        MapleCharacter mapleCharacter10 = a2;
        MapleCharacter mapleCharacter11 = mapleCharacter;
        MapleCharacter mapleCharacter12 = a2;
        MapleCharacter mapleCharacter13 = mapleCharacter;
        MapleCharacter mapleCharacter14 = a2;
        MapleCharacter mapleCharacter15 = mapleCharacter;
        MapleCharacter mapleCharacter16 = mapleCharacter;
        MapleCharacter mapleCharacter17 = a2;
        MapleCharacter mapleCharacter18 = mapleCharacter;
        MapleCharacter mapleCharacter19 = a2;
        MapleCharacter mapleCharacter20 = mapleCharacter;
        MapleCharacter mapleCharacter21 = mapleCharacter;
        MapleCharacter mapleCharacter22 = mapleCharacter;
        mapleCharacter22.XC = n2;
        mapleCharacter22.Cb = object;
        mapleCharacter21.RC = 0;
        mapleCharacter21.vA = 0;
        mapleCharacter20.VB = a2.VB;
        mapleCharacter20.oA = a2.oA;
        mapleCharacter.pB = mapleCharacter19.pB;
        mapleCharacter18.QA = mapleCharacter19.QA;
        mapleCharacter18.SA = a2.SA;
        mapleCharacter.xc = mapleCharacter17.xc;
        mapleCharacter16.Lc = mapleCharacter17.Lc;
        mapleCharacter16.iA = 0;
        mapleCharacter15.IB = 0;
        mapleCharacter15.nC = a2.Cb.getAccID();
        mapleCharacter.cB = mapleCharacter14.cB;
        mapleCharacter13.IC = mapleCharacter14.IC;
        mapleCharacter13.IB = a2.IB;
        mapleCharacter.ob = mapleCharacter12.ob;
        mapleCharacter11.zc = mapleCharacter12.zc;
        mapleCharacter11.dA = a2.dA;
        mapleCharacter.jd = mapleCharacter10.jd;
        mapleCharacter9.kB = mapleCharacter10.kB;
        mapleCharacter9.qA = a2.qA;
        mapleCharacter7.bc = mapleCharacter8.bc;
        mapleCharacter7.Vc = new PlayerRandomStream();
        mapleCharacter6.id = mapleCharacter8.id;
        mapleCharacter6.WA = a2.WA;
        mapleCharacter.Qc = mapleCharacter5.rC.getId();
        mapleCharacter.rC = mapleCharacter5.rC;
        mapleCharacter.setStance(a2.getStance());
        mapleCharacter.kC = mapleCharacter4.kC;
        mapleCharacter3.nA = mapleCharacter4.nA;
        mapleCharacter3.RA = a2.RA;
        mapleCharacter.sC = mapleCharacter2.sC;
        mapleCharacter.cA = mapleCharacter2.cA;
        mapleCharacter.GB = a2.GB;
        mapleCharacter.kb.putAll(a2.kb);
        mapleCharacter.p.addAll(a2.p);
        if (mapleCharacter.kb.get(MapleBuffStat.ILLUSION) != null) {
            mapleCharacter.kb.remove(MapleBuffStat.ILLUSION);
        }
        if (mapleCharacter.kb.get(MapleBuffStat.SUMMON) != null) {
            mapleCharacter.kb.remove(MapleBuffStat.SUMMON);
        }
        if (mapleCharacter.kb.get(MapleBuffStat.PUPPET) != null) {
            mapleCharacter.kb.remove(MapleBuffStat.PUPPET);
        }
        MapleCharacter mapleCharacter23 = mapleCharacter;
        MapleCharacter mapleCharacter24 = a2;
        mapleCharacter.aB = mapleCharacter24.aB;
        mapleCharacter23.jB = mapleCharacter24.jB;
        mapleCharacter23.Bc = a2.Bc;
        mapleCharacter.setPosition(new Point(a2.getPosition()));
        Object object2 = object = a2.getInventory(MapleInventoryType.EQUIPPED).iterator();
        while (object2.hasNext()) {
            IItem iItem = (IItem)object.next();
            object2 = object;
            mapleCharacter.getInventory(MapleInventoryType.EQUIPPED).addFromDB(mapleCharacter, iItem);
        }
        MapleCharacter mapleCharacter25 = mapleCharacter;
        MapleCharacter mapleCharacter26 = a2;
        MapleCharacter mapleCharacter27 = mapleCharacter;
        MapleCharacter mapleCharacter28 = a2;
        MapleCharacter mapleCharacter29 = mapleCharacter;
        MapleCharacter mapleCharacter30 = a2;
        MapleCharacter mapleCharacter31 = mapleCharacter;
        MapleCharacter mapleCharacter32 = a2;
        MapleCharacter mapleCharacter33 = mapleCharacter;
        MapleCharacter mapleCharacter34 = a2;
        mapleCharacter.rA = mapleCharacter34.rA;
        mapleCharacter33.Pd = mapleCharacter34.Pd;
        mapleCharacter33.CA = a2.CA;
        mapleCharacter.Gb = mapleCharacter32.Gb;
        mapleCharacter31.FC = mapleCharacter32.FC;
        mapleCharacter31.DB = a2.DB;
        mapleCharacter.ZC = mapleCharacter30.ZC;
        mapleCharacter29.tB = mapleCharacter30.tB;
        mapleCharacter29.bC = 0L;
        mapleCharacter.oC = mapleCharacter28.oC;
        mapleCharacter27.eb = mapleCharacter28.eb;
        mapleCharacter27.gb = a2.gb;
        mapleCharacter.nd = mapleCharacter26.nd;
        mapleCharacter.Cb.setAccountName(a2.Cb.getAccountName());
        mapleCharacter25.Ab = mapleCharacter26.Ab;
        mapleCharacter25.Hc = true;
        mapleCharacter.Cb.setChannel(a2.Cb.getChannel());
        MapleCharacter mapleCharacter35 = a2;
        while (mapleCharacter35.rC.getCharacterById(mapleCharacter.XC) != null || a2.Cb.getChannelServer().getPlayerStorage().getCharacterById(mapleCharacter.XC) != null) {
            ++mapleCharacter.XC;
            mapleCharacter35 = a2;
        }
        MapleCharacter mapleCharacter36 = mapleCharacter;
        mapleCharacter36.Cb.setPlayer(mapleCharacter);
        return mapleCharacter36;
    }

    public final /* synthetic */ void updateQuest(MapleQuestStatus a2) {
        MapleCharacter a3;
        a3.updateQuest(a2, false);
    }

    public /* synthetic */ boolean getExpZeroNotice() {
        MapleCharacter a2;
        return a2.ha;
    }

    public /* synthetic */ long getSpendPoint() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u4efc\u65a3\u8287\u8cfd\u7d33\u526f"), false);
    }

    public /* synthetic */ boolean isPetVac() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u5bb3\u725f\u512e\u5720\u547e"), false) >= 1L;
    }

    public /* synthetic */ void reloadC() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        MapleCharacter mapleCharacter2 = a2;
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.getCharInfo(mapleCharacter2.Cb.getPlayer()));
        mapleCharacter.Cb.getPlayer().getMap().removePlayer(a2.Cb.getPlayer());
        mapleCharacter2.Cb.getPlayer().getMap().addPlayer(a2.Cb.getPlayer());
    }

    public /* synthetic */ void dispelBuff(int a2) {
        MapleCharacter a3;
        for (MapleBuffStatValueHolder mapleBuffStatValueHolder : new LinkedList<MapleBuffStatValueHolder>(a3.kb.values())) {
            if (mapleBuffStatValueHolder.effect.getSourceId() != a2) continue;
            a3.cancelEffect(mapleBuffStatValueHolder.effect, false, mapleBuffStatValueHolder.startTime);
            return;
        }
    }

    public /* synthetic */ long getLinePoint() {
        MapleCharacter a2;
        return a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("z\u000fx\u0003\u9ee8\u653e"), false);
    }

    public /* synthetic */ int getMasterLevel(int a2) {
        MapleCharacter a3;
        return a3.getMasterLevel(SkillFactory.getSkill(a2));
    }

    public /* synthetic */ void setFollowInitiator(boolean a2) {
        a.IA = a2;
    }

    public /* synthetic */ void SetExpZeroNotice(boolean a2) {
        a.ha = a2;
    }

    public /* synthetic */ void handleRechargeEffect(MapleStatEffect a2, int a3, boolean a4) {
        MapleCharacter mapleCharacter;
        int n2;
        MapleCharacter a5;
        boolean bl;
        block11: {
            block12: {
                block9: {
                    block10: {
                        MapleCharacter mapleCharacter2;
                        bl = true;
                        if (a3 == 65121007 || a3 == 65121008) {
                            a2 = SkillFactory.getSkill(65121101).getEffect(a5.getTotalSkillLevel(65121101));
                            mapleCharacter2 = a5;
                        } else {
                            if (a3 == 0 || a3 == 65111007) {
                                return;
                            }
                            mapleCharacter2 = a5;
                        }
                        n2 = mapleCharacter2.getRechargeAdd(a2);
                        if (n2 <= -1) break block9;
                        bl = Randomizer.isSuccess(n2);
                        if (a5.getTotalSkillLevel(65120006) > 0) {
                            if (bl || !Randomizer.isSuccess(SkillFactory.getSkill(65120006).getEffect(a5.getTotalSkillLevel(65120006)).getX()) || (bl = Randomizer.isSuccess(n2))) {
                                // empty if block
                            }
                            if (bl && Randomizer.isSuccess(50)) {
                                SkillFactory.getSkill(65120006).getEffect(a5.getTotalSkillLevel(65120006)).applyTo(a5);
                            }
                        }
                        if (!bl) break block10;
                        MapleCharacter mapleCharacter3 = a5;
                        mapleCharacter = mapleCharacter3;
                        mapleCharacter3.Cb.sendPacket(JobPacket.AngelicPacket.unlockSkill());
                        mapleCharacter3.Cb.sendPacket(JobPacket.AngelicPacket.showRechargeEffect());
                        break block11;
                    }
                    if (a4) break block12;
                    MapleCharacter mapleCharacter4 = a5;
                    mapleCharacter = mapleCharacter4;
                    mapleCharacter4.Cb.sendPacket(JobPacket.AngelicPacket.lockSkill(a3));
                    break block11;
                }
                if (!a4) {
                    a5.Cb.sendPacket(JobPacket.AngelicPacket.lockSkill(a3));
                }
                bl = false;
            }
            mapleCharacter = a5;
        }
        if (mapleCharacter.isStaff()) {
            a5.dropDebugMessage("\u6280\u80fd: " + SkillFactory.getSkillName(a2.getSourceId()) + "(" + a2.getSourceId() + ") \u5145\u80fd\u6700\u7d42\u6210\u529f\u7387: " + n2 + " \u7d50\u679c:" + bl + " \u7279\u6b8a: " + a4);
        }
        MapleCharacter mapleCharacter5 = a5;
        if (!bl) {
            mapleCharacter5.addReChargeFalse();
            a5.addReChargeFalse_2();
            return;
        }
        mapleCharacter5.resetReChargeFalse();
        a5.resetReChargeFalse_2();
    }

    public /* synthetic */ void updateAndroid(int a2, int a3) {
        MapleCharacter a4;
        if (a4.rC != null) {
            a4.rC.broadcastMessage(MaplePacketCreator.updateAndroidLook(a4.getId(), a2, a3));
        }
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    public /* synthetic */ boolean SaveKeyInventory() {
        boolean bl = false;
        try {
            int n2;
            MapleCharacter a2;
            StringBuilder stringBuilder = new StringBuilder();
            Object object = a2.LA;
            int n3 = a2.LA.length;
            int n4 = n2 = 0;
            while (n4 < n3) {
                Iterator<IItem> iterator = object[n2].list().iterator();
                while (iterator.hasNext()) {
                    Iterator<IItem> iterator2;
                    IItem iItem = iterator2.next();
                    iterator = iterator2;
                    stringBuilder.append(iItem.getKey());
                }
                n4 = ++n2;
            }
            object = stringBuilder.toString();
            if (a2.S.equals(object)) {
                return true;
            }
            a2.S = object;
            return false;
        }
        catch (Exception exception) {
            exception.printStackTrace();
        }
        return bl;
    }

    public final /* synthetic */ MapleInventory getInventory(MapleInventoryType a2) {
        MapleCharacter a3;
        return a3.LA[a2.ordinal()];
    }

    public final /* synthetic */ void handleEnergyCharge(int a2, int a3) {
        MapleCharacter a4;
        Object object = SkillFactory.getSkill(a2);
        int n2 = a4.getSkillLevel((ISkill)object);
        if (n2 > 0) {
            object = object.getEffect(n2);
            if (a3 > 0) {
                if (a4.getBuffedValue(MapleBuffStat.ENERGY_CHARGE) == null) {
                    ((MapleStatEffect)object).applyEnergyBuff(a4, true);
                    return;
                }
                Integer n3 = a4.getBuffedValue(MapleBuffStat.ENERGY_CHARGE);
                if (n3 < 10000) {
                    n3 = n3 + ((MapleStatEffect)object).getX() * a3;
                    MapleCharacter mapleCharacter = a4;
                    mapleCharacter.Cb.sendPacket(MaplePacketCreator.showOwnBuffEffect(a2, 2, a4.getLevel(), n2));
                    if (mapleCharacter.getBuffedValue(MapleBuffStat.MORPH) == null) {
                        MapleCharacter mapleCharacter2 = a4;
                        a4.rC.broadcastMessage(mapleCharacter2, MaplePacketCreator.showBuffEffect(mapleCharacter2.XC, a2, 2, a4.getLevel(), n2), false);
                    }
                    if (n3 >= 10000) {
                        n3 = 10000;
                    }
                    MapleCharacter mapleCharacter3 = a4;
                    mapleCharacter3.Cb.sendPacket(MaplePacketCreator.giveEnergyCharge(a4.getBuffSource(MapleBuffStat.ENERGY_CHARGE), n3, ((MapleStatEffect)object).getDuration() / 1000));
                    mapleCharacter3.setBuffedValue(MapleBuffStat.ENERGY_CHARGE, n3);
                    return;
                }
                if (n3 == 10000) {
                    MapleCharacter mapleCharacter = a4;
                    ((MapleStatEffect)object).applyEnergyBuff(mapleCharacter, false);
                    mapleCharacter.setBuffedValue(MapleBuffStat.ENERGY_CHARGE, 10001);
                }
            }
        }
    }

    public final /* synthetic */ void handleBattleshipHP(int a22) {
        MapleCharacter a3;
        if (a3.isActiveBuffedValue(5221006)) {
            if (a3.getDebugMessage()) {
                MapleCharacter mapleCharacter = a3;
                mapleCharacter.dropMessage("\u6d77\u76dc\u8239HP : " + (a3.FB + a22) + " \u53d7\u5230\u50b7\u5bb3: " + a22 * -1 + " \u539f\u59cbHP: " + mapleCharacter.FB);
            }
            MapleCharacter mapleCharacter = a3;
            mapleCharacter.FB -= a22;
            if (mapleCharacter.FB <= 0) {
                MapleCharacter mapleCharacter2;
                MapleCharacter mapleCharacter3 = a3;
                mapleCharacter3.FB = 0;
                MapleStatEffect a22 = mapleCharacter3.getStatForBuff(MapleBuffStat.MONSTER_RIDING);
                if (mapleCharacter3.isAdmin() && a3.isInvincible()) {
                    MapleCharacter mapleCharacter4 = a3;
                    mapleCharacter4.dropMessage("\u4f3a\u670d\u5668\u7ba1\u7406\u54e1\u7121\u6575\u72c0\u614b\u6d88\u9664\u6280\u80fd\u51b7\u537b[" + SkillFactory.getName(5221006) + "(5221006)]\uff0c\u6301\u7e8c\u6642\u9593\uff1a" + a22.getCooldown(mapleCharacter4) + "\u79d2");
                    mapleCharacter2 = a3;
                } else {
                    mapleCharacter2 = a3;
                    MapleCharacter mapleCharacter5 = a3;
                    mapleCharacter5.Cb.sendPacket(MaplePacketCreator.skillCooldown(5221006, a22.getCooldown(a3)));
                    mapleCharacter5.addCooldown(5221006, System.currentTimeMillis(), a22.getCooldown(a3) * 1000);
                }
                mapleCharacter2.dispelSkill(5221006);
            }
        }
    }

    public /* synthetic */ void addMaxHP(int a2) {
        MapleCharacter a3;
        a2 = a3.GB.getMaxHp() + a2;
        ArrayList<Pair<MapleStat, Integer>> arrayList = new ArrayList<Pair<MapleStat, Integer>>();
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.MAXHP, a2));
        MapleCharacter mapleCharacter = a3;
        mapleCharacter.GB.setMaxHp(a2);
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.updatePlayerStats(arrayList, a3));
    }

    public /* synthetic */ void updateWarpingMap(boolean a2) {
        a.e = a2 ? System.currentTimeMillis() : 0L;
    }

    public /* synthetic */ boolean getCanClone() {
        MapleCharacter a2;
        return a2.qB;
    }

    public /* synthetic */ void healHP(int a2) {
        MapleCharacter a3;
        a3.healHP(a2, false);
    }

    public /* synthetic */ void addTradeMsg(String a2, String a3) {
        MapleCharacter a4;
        a4.tC = a4.tC + FileoutputUtil.CurrentReadable_Time() + " " + a2 + " : " + a3;
    }

    /*
     * Exception decompiling
     */
    public /* synthetic */ int getAcash(MapleCharacter a) {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * org.benf.cfr.reader.util.ConfusedCFRException: Started 2 blocks at once
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.getStartingBlocks(Op04StructuredStatement.java:406)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op04StructuredStatement.buildNestedBlocks(Op04StructuredStatement.java:481)
         * org.benf.cfr.reader.bytecode.analysis.opgraph.Op03SimpleStatement.createInitialStructuredBlock(Op03SimpleStatement.java:728)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:806)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:258)
         * org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:192)
         * org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         * org.benf.cfr.reader.entities.Method.analyse(Method.java:521)
         * org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1030)
         * org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:922)
         * org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:253)
         * org.benf.cfr.reader.Driver.doJar(Driver.java:135)
         * org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:65)
         * org.benf.cfr.reader.Main.main(Main.java:49)
         */
        throw new IllegalStateException(Decompilation failed);
    }

    public /* synthetic */ int getPetVac() {
        MapleCharacter a2;
        return (int)a2.getCharacterSet(FixDropNullItem.ALLATORIxDEMO("\u5bb3\u725f\u512e\u5720\u547e"), false);
    }

    public /* synthetic */ void setGender_Force(byte a2) {
        MapleCharacter a3;
        if (World.Find.findChannel(a3.cB) <= 0) {
            a3.UpdateCharacter(FixDropNullItem.ALLATORIxDEMO("Q#X\"S4"), a2);
            return;
        }
        a3.WA = a2;
    }

    public /* synthetic */ void setExcludeItem(long a2) {
        MapleCharacter a3;
        int n2 = 1;
        Iterator<Map.Entry<String, Long>> iterator = a3.ga.entrySet().iterator();
        while (iterator.hasNext()) {
            if (!iterator.next().getKey().contains(MapleNodes.ALLATORIxDEMO("\u9040\u6fd2\u7267\u54ed"))) continue;
            ++n2;
        }
        a3.ga.put("\u904e\u6ffe\u7269\u54c1" + n2, a2);
        a3.DA = true;
    }

    public /* synthetic */ void setMaxHp(int a2) {
        MapleCharacter a3;
        a3.getStat().setMaxHp((short)a2);
    }

    public /* synthetic */ void setCheckSelectionMax(int a2) {
        a.l = a2;
    }

    public /* synthetic */ void sendFishKingResult(int a2, int a3, int a4) {
        MapleCharacter a5;
        Iterator<Map.Entry<Integer, Integer>> iterator;
        LinkedList<Pair<Integer, Integer>> linkedList = new LinkedList<Pair<Integer, Integer>>();
        Iterator<Map.Entry<Integer, Integer>> iterator2 = iterator = a5.la.entrySet().iterator();
        while (iterator2.hasNext()) {
            Map.Entry<Integer, Integer> entry = iterator.next();
            iterator2 = iterator;
            linkedList.add(new Pair<Integer, Integer>(entry.getKey(), entry.getValue()));
        }
        MapleCharacter mapleCharacter = a5;
        ++mapleCharacter.Ja;
        if (mapleCharacter.Ba > a5.Ea) {
            MapleCharacter mapleCharacter2 = a5;
            mapleCharacter2.da = true;
            mapleCharacter2.Ea = mapleCharacter2.Ba;
            mapleCharacter2.H();
        }
        MapleCharacter mapleCharacter3 = a5;
        a5.getClient().sendPacket(MaplePacketCreator.FishKingResult(mapleCharacter3.Ba, mapleCharacter3.Ea, a5.Ja, a2, a3, a4, linkedList));
        a5.Ba = 0;
    }

    public /* synthetic */ void sendNote(String a2, String a3) {
        MapleCharacter a4;
        a4.sendNote(a2, a3, 0);
    }

    public /* synthetic */ void setInt_Force(int a2) {
        MapleCharacter a3;
        if (World.Find.findChannel(a3.cB) <= 0) {
            a3.UpdateCharacter(MapleNodes.ALLATORIxDEMO("E`X"), a2);
            return;
        }
        a3.GB.int_ = (short)a2;
        a3.GB.recalcLocalStats(false);
    }

    public final /* synthetic */ void forceupdateQuest(MapleQuestStatus a2) {
        MapleCharacter a3;
        a3.forceupdateQuest(a2, false);
    }

    public /* synthetic */ Map<String, Long> getAllSpeedToday() {
        MapleCharacter a2;
        HashMap<String, Long> hashMap = new HashMap<String, Long>();
        for (Map.Entry<String, Long> entry : a2.ga.entrySet()) {
            if (!entry.getKey().contains(FixDropNullItem.ALLATORIxDEMO("\u65d3\u8a4e")) || !entry.getKey().contains(FileoutputUtil.NowDay())) continue;
            hashMap.put(entry.getKey(), entry.getValue());
        }
        return hashMap;
    }

    public /* synthetic */ boolean isAdmin() {
        MapleCharacter a2;
        return a2.id >= 5;
    }

    public /* synthetic */ int getMobVac() {
        MapleCharacter a2;
        return a2.MC;
    }

    public /* synthetic */ boolean BlockedLoggedIn() {
        MapleCharacter a2;
        boolean bl;
        boolean bl2 = bl = a2.getTrade() != null || a2.getConversation() > 0 || a2.getPlayerShop() != null || a2.isOperateStorage();
        if (bl) {
            a2.Cb.setMonitored(true);
        }
        return bl;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    public /* synthetic */ void DoLevelMsg() {
        if (GameSetConstants.isLevelMsg(a.IC) && !a.isGM()) {
            var1_1 = new StringBuilder(FixDropNullItem.ALLATORIxDEMO("\u001d\u605b\u55dakf"));
            var2_2 = a.getInventory(MapleInventoryType.EQUIPPED).getItem((short)-21);
            if (var2_2 != null) {
                var1_1.append(MapleNodes.ALLATORIxDEMO("\u0010"));
                var1_1.append(MapleItemInformationProvider.getInstance().getName(var2_2.getItemId()));
                var1_1.append(FixDropNullItem.ALLATORIxDEMO("\bf"));
            }
            v0 = var1_1;
            v1 = a;
            v0.append(v1.getName());
            v0.append(" \u9054\u5230\u4e86\u7b49\u7d1a" + v1.IC + "\u7d1a\uff01\u8acb\u5927\u5bb6\u4e00\u8d77\u606d\u559c\u4ed6\uff01");
            World.Broadcast.broadcastMessage(MaplePacketCreator.getItemNotice(var1_1.toString()));
        }
        if (!GameConstants.isAran(a.ob)) ** GOTO lbl-1000
        switch (a.IC) {
            case 30: {
                v2 = a;
                v3 = v2;
                v2.Cb.sendPacket(MaplePacketCreator.startMapEffect(MapleNodes.ALLATORIxDEMO("\u6063\u55b0\u905a\u521c=\u001c\u7b47\u8ae7\u56d0\u7472\u6067\u5cda\u4e82\u8f65\u5429\u302e"), 5120000, true));
                break;
            }
            case 70: {
                v4 = a;
                v3 = v4;
                v4.Cb.sendPacket(MaplePacketCreator.startMapEffect(FixDropNullItem.ALLATORIxDEMO("\u602b\u55aa\u9012\u5206q\u0006\u7b0f\u8afd\u5276\u5186\u53d9\u96dc\u5799\u9541\u8047\u515a\u996e\u4e3f\u8f0f\u5411\u3044"), 5120000, true));
                break;
            }
            case 120: {
                a.Cb.sendPacket(MaplePacketCreator.startMapEffect(MapleNodes.ALLATORIxDEMO("\u6041\u5592\u9078\u523e\u001d<\u001c\u7b47\u8ae7\u56d0\u7972\u6726\u677d\u7963\u53d4\u68e0\u67bb\u56d5\u8f65\u5429\u302e"), 5120000, true));
            }
            default: lbl-1000:
            // 2 sources

            {
                v3 = a;
            }
        }
        if (GameConstants.isKOC(v3.ob) == false) return;
        if (a.IC != 70) return;
        a.Cb.sendPacket(MaplePacketCreator.startMapEffect(FixDropNullItem.ALLATORIxDEMO("\u605b\u55da\u9062\u5276\u0001v\u7b7f\u8a8d\u56e8\u8070\u96c1\u5f51\u4e3f\u8f0f\u5411\u3044"), 5120000, true));
    }

    public /* synthetic */ boolean isStaff() {
        MapleCharacter a2;
        return a2.id > ServerConstants.PlayerGMRank.\u666e\u901a\u73a9\u5bb6.getLevel();
    }

    public /* synthetic */ void changeMap(MapleMap a2) {
        MapleCharacter a3;
        MapleMap mapleMap = a2;
        a3.ALLATORIxDEMO(mapleMap, a2.getRandomPortal().getPosition(), MaplePacketCreator.getWarpToMap(mapleMap, mapleMap.getRandomPortal().getId(), a3), null);
    }

    public /* synthetic */ void resetShadowKillCount() {
        MapleCharacter a2;
        a2.setSkillTemp(4221013, 0);
    }

    public /* synthetic */ void setGachExp(int a2) {
        a.wB = a2;
    }

    public final /* synthetic */ short getFame() {
        MapleCharacter a2;
        return a2.IB;
    }

    public /* synthetic */ void setPetVac(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u5bd9\u7267\u5144\u5718\u5414"), a2, false);
    }

    public /* synthetic */ void handleJobAttack(MapleMonster a2, AttackInfo a3) {
        MapleCharacter a4;
        if (JobConstants.is\u72c2\u72fc\u52c7\u58eb(a4.getJob())) {
            PlayerHandler.AranCombo(a4.getClient(), a4, a3.hits);
            return;
        }
        if (JobConstants.is\u60e1\u9b54\u6bba\u624b(a4.getJob())) {
            a4.handleForceGain(a2.getObjectId(), a3.skill);
            return;
        }
        MapleCharacter mapleCharacter = a4;
        if (JobConstants.is\u51f1\u6492(a4.getJob())) {
            mapleCharacter.handleKaiserCombo();
            return;
        }
        MapleCharacter mapleCharacter2 = a4;
        if (JobConstants.is\u591c\u5149(mapleCharacter.getJob())) {
            mapleCharacter2.handleLuminous(a3.skill);
            MapleCharacter mapleCharacter3 = a4;
            mapleCharacter3.handleDarkCrescendo();
            mapleCharacter3.handleBlackBless();
            return;
        }
        if (JobConstants.is\u5e7b\u5f71\u4fe0\u76dc(mapleCharacter2.getJob()) && a3.skill != 24120002 && a3.skill != 24100003) {
            a4.handleCardStack();
        }
    }

    public /* synthetic */ void setCombo(int a2) {
        MapleCharacter a3;
        a3.AC = a2;
        a3.wC = System.currentTimeMillis();
        int n2 = a2;
        a3.getClient().getSession().writeAndFlush((Object)MaplePacketCreator.updateCombo(n2));
        if (n2 % 10 == 0 && a2 >= 10 && a2 <= 100) {
            if (a3.getSkillLevel(21000000) < a2 / 10) {
                return;
            }
            if (a2 == 9 && a3.getQuestStatus(10370) == 0) {
                a3.giftMedal(1142134);
                MapleCharacter mapleCharacter = a3;
                MapleQuest.getInstance(10370).forceComplete(mapleCharacter, 0);
                mapleCharacter.dropMessage(5, FixDropNullItem.ALLATORIxDEMO("\u609e\u521d\u627b\u62b9\u5206\u4ec0\u9015\u7eca\u62b6\u9a9e\u627d\u52b5\u7ad6\u3044"));
            }
            if (a2 == 4999 && a3.getQuestStatus(10371) == 0) {
                a3.giftMedal(1142135);
                MapleCharacter mapleCharacter = a3;
                MapleQuest.getInstance(10371).forceComplete(mapleCharacter, 0);
                mapleCharacter.dropMessage(5, MapleNodes.ALLATORIxDEMO("\u60a6\u5277\u6243\u62d3\u523e\u4eaa\u902d\u7ea0\u628e\u9078\u4eb4\u52df\u7aee\u302e"));
            }
            if (a2 == 14999 && a3.getQuestStatus(10372) == 0) {
                a3.giftMedal(1142136);
                MapleCharacter mapleCharacter = a3;
                MapleQuest.getInstance(10372).forceComplete(mapleCharacter, 0);
                mapleCharacter.dropMessage(5, FixDropNullItem.ALLATORIxDEMO("\u609e\u521d\u627b\u62b9\u5206\u4ec0\u9015\u7eca\u62b6\u4e0d\u73bd\u52b5\u7ad6\u3044"));
            }
            SkillFactory.getSkill(21000000).getEffect(a2 / 10).applyComboBuff(a3, a2);
            return;
        }
        if (a2 < 10) {
            SkillFactory.getSkill(21000000).getEffect(a2 / 10).applyComboBuff(a3, 0);
        }
    }

    public /* synthetic */ void clearAddMove() {
        a.H = 0;
    }

    public /* synthetic */ void handleForceGain(int a2, int a3, int a4) {
        MapleCharacter mapleCharacter;
        MapleCharacter a5;
        if (!SkillConstants.isForceIncrease(a3) && a4 <= 0) {
            return;
        }
        a3 = 1;
        if (a5.getLevel() >= 30 && a5.getLevel() < 70) {
            a3 = 2;
            mapleCharacter = a5;
        } else if (a5.getLevel() >= 70 && a5.getLevel() < 120) {
            a3 = 3;
            mapleCharacter = a5;
        } else {
            if (a5.getLevel() >= 120) {
                a3 = 4;
            }
            mapleCharacter = a5;
        }
        mapleCharacter.Xc = (short)(mapleCharacter.Xc + 1);
        a5.addMP(a4 > 0 ? a4 : a3);
        MapleCharacter mapleCharacter2 = a5;
        a5.getClient().sendPacket(MaplePacketCreator.gainForce(mapleCharacter2, a2, a5.Xc, a3));
        if (mapleCharacter2.GB.mpRecoverProp > 0 && a4 <= 0 && Randomizer.nextInt(100) <= a5.GB.mpRecoverProp) {
            MapleCharacter mapleCharacter3 = a5;
            mapleCharacter3.Xc = (short)(mapleCharacter3.Xc + 1);
            mapleCharacter3.addMP(mapleCharacter3.GB.mpRecover);
            MapleCharacter mapleCharacter4 = a5;
            mapleCharacter3.getClient().sendPacket(MaplePacketCreator.gainForce(mapleCharacter4, a2, a5.Xc, mapleCharacter4.GB.mpRecover));
        }
    }

    public /* synthetic */ void setMap_Force(int a2) {
        MapleCharacter a3;
        if (World.Find.findChannel(a3.cB) <= 0) {
            a3.UpdateCharacter(MapleNodes.ALLATORIxDEMO("Ao\\"), a2);
            return;
        }
        a3.Qc = a2;
    }

    public /* synthetic */ int getPvpMaxHp() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        return JobConstants.getPvpMaxHp(mapleCharacter, mapleCharacter.ob);
    }

    public /* synthetic */ boolean isAutoPickup() {
        MapleCharacter a2;
        return a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u81e4\u52f9\u64b1\u7245"), false) == 1L;
    }

    public /* synthetic */ void setMonsterPet(MapleMonsterPet a2) {
        a.ka = a2;
    }

    public /* synthetic */ long getDonateMeso() {
        MapleCharacter a2;
        return a2.getCharacterSet(MapleNodes.ALLATORIxDEMO("\u635e\u7357\u695d\u5e4f"), false);
    }

    public final /* synthetic */ List<Pair<Integer, Long>> getCompletedMedals() {
        MapleCharacter a2;
        ArrayList<Pair<Integer, Long>> arrayList = new ArrayList<Pair<Integer, Long>>();
        for (MapleQuestStatus mapleQuestStatus : a2.XB.values()) {
            if (mapleQuestStatus.getStatus() != 2 || mapleQuestStatus.isCustom() || mapleQuestStatus.getQuest().isBlocked() || mapleQuestStatus.getQuest().getMedalItem() <= 0 || GameConstants.getInventoryType(mapleQuestStatus.getQuest().getMedalItem()) != MapleInventoryType.EQUIP) continue;
            arrayList.add(new Pair<Integer, Long>(mapleQuestStatus.getQuest().getId(), mapleQuestStatus.getCompletionTime()));
        }
        return arrayList;
    }

    public /* synthetic */ String getNpcPotentialMessage() {
        MapleCharacter a2;
        return a2.M;
    }

    public /* synthetic */ void forceReAddItem_NoUpdate(IItem a2, MapleInventoryType a3) {
        MapleCharacter a4;
        MapleInventoryType mapleInventoryType = a3;
        MapleCharacter mapleCharacter = a4;
        a4.getInventory(mapleInventoryType).removeSlot(mapleCharacter, a2.getPosition());
        mapleCharacter.getInventory(mapleInventoryType).addFromDB(a4, a2);
    }

    public /* synthetic */ void removeCharacterSet(String a2) {
        MapleCharacter a3;
        a3.ga.remove(a2);
        a3.DA = true;
    }

    public /* synthetic */ void addMobVac_X() {
        MapleCharacter a2;
        ++a2.QC;
    }

    public /* synthetic */ void updateAllStats() {
        MapleCharacter a2;
        ArrayList<Pair<MapleStat, Integer>> arrayList = new ArrayList<Pair<MapleStat, Integer>>();
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.MAXHP, a2.getStat().getMaxHp()));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.MAXMP, a2.getStat().getMaxMp()));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.HP, a2.getStat().getHp()));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.MP, a2.getStat().getMp()));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.EXP, a2.getExp()));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.LEVEL, Integer.valueOf(a2.getLevel())));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.AVAILABLEAP, Integer.valueOf(a2.getRemainingAp())));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.STR, Integer.valueOf(a2.getStat().getStr())));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.DEX, Integer.valueOf(a2.getStat().getDex())));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.INT, Integer.valueOf(a2.getStat().getInt())));
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.LUK, Integer.valueOf(a2.getStat().getLuk())));
        if (a2.Ic) {
            arrayList.add(new Pair<MapleStat, Integer>(MapleStat.FACE, a2.getFace()));
        }
        if (a2.YB) {
            arrayList.add(new Pair<MapleStat, Integer>(MapleStat.HAIR, a2.getHair()));
        }
        arrayList.add(new Pair<MapleStat, Integer>(MapleStat.FAME, Integer.valueOf(a2.getFame())));
        MapleCharacter mapleCharacter = a2;
        mapleCharacter.updateSingleStat(MapleStat.MESO, mapleCharacter.vA);
        mapleCharacter.getClient().sendPacket(MaplePacketCreator.updatePlayerStats(arrayList, a2));
    }

    public final /* synthetic */ void expirationTask() {
        MapleCharacter a2;
        a2.expirationTask(false);
    }

    public /* synthetic */ String getSaveKeyStorage() {
        MapleCharacter a2;
        return a2.R;
    }

    public /* synthetic */ void gainPoints(int a2) {
        MapleCharacter mapleCharacter;
        MapleCharacter a3;
        int n2 = a2;
        a3.sA += n2;
        if (n2 < 0) {
            MapleCharacter mapleCharacter2 = a3;
            mapleCharacter = mapleCharacter2;
            mapleCharacter2.addSpendPoint(a2);
        } else {
            MapleCharacter mapleCharacter3 = a3;
            mapleCharacter = mapleCharacter3;
            mapleCharacter3.addEarnPoint(a2);
        }
        mapleCharacter.dropMessage("\u60a8\u7684" + GameSetConstants.POINT_NAME + "\u9ede\u6578\u5df2\u7d93\u8b8a\u66f4\u81f3" + a3.sA + "\u9ede!");
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    public /* synthetic */ void addStolenSkill(int a2, int a3) {
        MapleCharacter a4;
        if (a4.skillisCooling(20031208) || a4.y == null) {
            a4.dropMessage(-6, FixDropNullItem.ALLATORIxDEMO("\u76a8\u527b\u8613\u658a\u51f1\u534d\u6759\u95a5\uff4a\u8afd\u7a4b\u502f\u51cb\u8a50\u3044"));
            return;
        }
        Pair<Integer, Boolean> pair = new Pair<Integer, Boolean>(a2, true);
        ISkill iSkill = SkillFactory.getSkill(a2);
        if (!a4.y.contains(pair) && SkillConstants.canSteal(iSkill)) {
            pair.right = false;
            a3 = Math.min(iSkill.getMaxLevel(), a3);
            int n2 = JobConstants.getJobNumber(a2 / 10000);
            if (!a4.y.contains(pair) && a4.getSkillLevel(SkillConstants.getStealSkill(n2)) > 0) {
                int n3 = 0;
                MapleCharacter mapleCharacter = a4;
                a3 = Math.min(mapleCharacter.getSkillLevel(SkillConstants.getStealSkill(n2)), a3);
                Iterator<Pair<Integer, Boolean>> iterator = mapleCharacter.y.iterator();
                while (iterator.hasNext()) {
                    if (JobConstants.getJobNumber((Integer)iterator.next().left / 10000) != n2) continue;
                    ++n3;
                }
                if (n3 >= SkillConstants.getNumSteal(n2)) return;
                a4.y.add(pair);
                MapleCharacter mapleCharacter2 = a4;
                a4.gC = true;
                mapleCharacter2.zA = true;
                mapleCharacter2.changeSkillLevel_Skip(iSkill.getId(), (byte)a3, (byte)a3);
                mapleCharacter2.Cb.sendPacket(JobPacket.PhantomPacket.addStolenSkill(n2, n3, a2, a3));
                return;
            }
            MapleCharacter mapleCharacter = a4;
            mapleCharacter.Cb.getPlayer().dropMessage(5, MapleNodes.ALLATORIxDEMO("\u8a7c\u505b\u53d8\u7b8d\u7408\u5dde\u7d9d\u6ed3\u628e\u80d1\uff02\u623a\u800b\u6084\u5dfc\u7dbf\u6707\u9035\u5005\u62ac\u80f3\u302e"));
            mapleCharacter.Cb.sendPacket(MaplePacketCreator.enableActions());
            return;
        }
        MapleCharacter mapleCharacter = a4;
        mapleCharacter.Cb.getPlayer().dropMessage(5, FixDropNullItem.ALLATORIxDEMO("\u8a44\u5031\u53e0\u7be7\u7430\u5db4\u7da5\u6eb9\u62b6\u80bb\uff3a\u6250\u8033\u60ee\u5dc4\u7dd5\u673f\u905f\u503d\u62c6\u80cb\u3044"));
        mapleCharacter.Cb.sendPacket(MaplePacketCreator.enableActions());
    }

    /*
     * Enabled aggressive block sorting
     */
    public /* synthetic */ void LevelupGiveSP() {
        boolean bl;
        MapleCharacter a2;
        block18: {
            boolean bl2 = false;
            switch (a2.ob) {
                case 100: 
                case 200: 
                case 300: 
                case 400: 
                case 500: 
                case 1100: 
                case 1200: 
                case 1300: 
                case 1400: 
                case 1500: 
                case 2100: 
                case 3200: 
                case 3300: 
                case 3500: {
                    if (a2.IC <= 30) {
                        bl = bl2;
                        MapleCharacter mapleCharacter = a2;
                        int[] arrn = a2.nc;
                        int n2 = GameConstants.getSkillBook(mapleCharacter.ob);
                        arrn[n2] = arrn[n2] + 3;
                        mapleCharacter.Cb.sendPacket(MaplePacketCreator.updateSp(a2, false));
                    } else {
                        bl = bl2 = true;
                    }
                    break block18;
                }
                case 110: 
                case 120: 
                case 130: 
                case 210: 
                case 220: 
                case 230: 
                case 310: 
                case 320: 
                case 410: 
                case 420: 
                case 510: 
                case 520: 
                case 1110: 
                case 1210: 
                case 1310: 
                case 1410: 
                case 1510: 
                case 2110: 
                case 3210: 
                case 3310: 
                case 3510: {
                    if (a2.IC <= 70) {
                        bl = bl2;
                        MapleCharacter mapleCharacter = a2;
                        int[] arrn = a2.nc;
                        int n3 = GameConstants.getSkillBook(mapleCharacter.ob);
                        arrn[n3] = arrn[n3] + 3;
                        mapleCharacter.Cb.sendPacket(MaplePacketCreator.updateSp(a2, false));
                    } else {
                        bl = bl2 = true;
                    }
                    break block18;
                }
                case 111: 
                case 121: 
                case 131: 
                case 211: 
                case 221: 
                case 231: 
                case 311: 
                case 321: 
                case 411: 
                case 421: 
                case 511: 
                case 521: 
                case 3211: 
                case 3311: 
                case 3511: {
                    if (a2.IC <= 120) {
                        bl = bl2;
                        MapleCharacter mapleCharacter = a2;
                        int[] arrn = a2.nc;
                        int n4 = GameConstants.getSkillBook(mapleCharacter.ob);
                        arrn[n4] = arrn[n4] + 3;
                        mapleCharacter.Cb.sendPacket(MaplePacketCreator.updateSp(a2, false));
                    } else {
                        bl = bl2 = true;
                    }
                    break block18;
                }
                case 1111: 
                case 1211: 
                case 1311: 
                case 1411: 
                case 1511: {
                    if (a2.IC > 120) break;
                    bl = bl2;
                    MapleCharacter mapleCharacter = a2;
                    int[] arrn = a2.nc;
                    int n5 = GameConstants.getSkillBook(mapleCharacter.ob);
                    arrn[n5] = arrn[n5] + 3;
                    mapleCharacter.Cb.sendPacket(MaplePacketCreator.updateSp(a2, false));
                    break block18;
                }
                case 2111: {
                    if (a2.IC <= 120) {
                        bl = bl2;
                        MapleCharacter mapleCharacter = a2;
                        int[] arrn = a2.nc;
                        int n6 = GameConstants.getSkillBook(mapleCharacter.ob);
                        arrn[n6] = arrn[n6] + 3;
                        mapleCharacter.Cb.sendPacket(MaplePacketCreator.updateSp(a2, false));
                    } else {
                        bl = bl2 = true;
                    }
                    break block18;
                }
                case 112: 
                case 122: 
                case 132: 
                case 212: 
                case 222: 
                case 232: 
                case 312: 
                case 322: 
                case 412: 
                case 422: 
                case 512: 
                case 522: 
                case 1112: 
                case 1212: 
                case 1312: 
                case 1412: 
                case 1512: 
                case 2112: 
                case 3212: 
                case 3312: 
                case 3512: {
                    if (a2.IC > 200) break;
                    bl = bl2;
                    MapleCharacter mapleCharacter = a2;
                    int[] arrn = a2.nc;
                    int n7 = GameConstants.getSkillBook(mapleCharacter.ob);
                    arrn[n7] = arrn[n7] + 3;
                    mapleCharacter.Cb.sendPacket(MaplePacketCreator.updateSp(a2, false));
                    break block18;
                }
                case 430: 
                case 431: 
                case 432: 
                case 433: 
                case 434: 
                case 2200: 
                case 2210: 
                case 2211: 
                case 2212: 
                case 2213: 
                case 2214: 
                case 2215: 
                case 2216: 
                case 2217: 
                case 2218: {
                    MapleCharacter mapleCharacter = a2;
                    int[] arrn = mapleCharacter.nc;
                    int n8 = GameConstants.getSkillBook(mapleCharacter.ob, a2.IC);
                    arrn[n8] = arrn[n8] + 3;
                    mapleCharacter.Cb.sendPacket(MaplePacketCreator.updateSp(a2, false));
                }
            }
            bl = bl2;
        }
        if (bl) {
            a2.dropMessage(FixDropNullItem.ALLATORIxDEMO("\u6396\u91a4\u60ee\u5dc4\u8dcc\u7b7f\u5c5c\u671c\u8f0f\u8041j\u669d\u6604\u7117\u6c93\u51bb\u7334\u5fa1\u62c6\u80cb\u9e98\u654e\u3044"));
        }
    }

    public /* synthetic */ String getNick() {
        MapleCharacter a2;
        Object object = "";
        if (GameSetConstants.FACTION_SYSTEM) {
            object = a2.getFaction();
            return object;
        }
        if (GameSetConstants.REBORN_SYSTEM) {
            object = "<" + a2.getReborn() + "\u8f49>";
            return object;
        }
        if (GameSetConstants.VIPSYSTEM && GameSetConstants.USE_VIPNAME && a2.getVipMedal() && a2.getVip() >= 0) {
            object = (String)object + a2.getVipName();
        }
        return object;
    }

    public /* synthetic */ void setAp_Force(short a2) {
        MapleCharacter a3;
        if (World.Find.findChannel(a3.cB) <= 0) {
            a3.UpdateCharacter(FixDropNullItem.ALLATORIxDEMO("W6"), a2);
            return;
        }
        a3.iA = a2;
        a3.updateSingleStat(MapleStat.AVAILABLEAP, a3.iA);
    }

    public /* synthetic */ int getJobRankMove() {
        MapleCharacter a2;
        return a2.ld;
    }

    public /* synthetic */ void gainItem(int a2, int a3, String a4) {
        MapleCharacter a5;
        if (MapleItemInformationProvider.getInstance().itemExists(a2)) {
            if (a3 > 0) {
                MapleCharacter mapleCharacter = a5;
                MapleInventoryManipulator.addById(mapleCharacter.Cb, a2, (short)a3, a4);
                mapleCharacter.dropMessage("\u60a8\u5df2\u7372\u5f97\u7269\u54c1:" + MapleItemInformationProvider.getInstance().getName(a2) + a3 + "\u500b");
                return;
            }
            MapleCharacter mapleCharacter = a5;
            MapleInventoryManipulator.removeById(mapleCharacter.Cb, GameConstants.getInventoryType(a2), a2, -a3, true, false);
            mapleCharacter.dropMessage("\u60a8\u5df2\u5931\u53bb\u7269\u54c1:" + MapleItemInformationProvider.getInstance().getName(a2) + a3 + "\u500b");
            return;
        }
        a5.dropMessage("\u6b64\u7269\u54c1\u4e0d\u5b58\u5728,\u8acb\u901a\u77e5\u7ba1\u7406\u54e1 \u7269\u54c1\u4ee3\u78bc:" + a2);
    }

    public /* synthetic */ void setOldPosition(Point a2) {
        a.cC = a2;
    }

    public /* synthetic */ void setCarnivalParty(MapleCarnivalParty a2) {
        a.YC = a2;
    }

    public /* synthetic */ int getGMLevel() {
        MapleCharacter a2;
        return a2.id;
    }

    public /* synthetic */ void setLastMonth(int a2) {
        MapleCharacter a3;
        a3.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u672c\u5f82\u4e26\u7dd4\u5444"), a2, false);
    }

    public /* synthetic */ void setDressingUp(boolean a2) {
        a.TC = a2;
    }

    public /* synthetic */ void updateBeans() {
        MapleCharacter a2;
        a2.getClient().sendPacket(BeansPacket.updateBalls(a2.getId(), a2.VB));
    }

    public final /* synthetic */ void equipChanged() {
        int n2;
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        MapleCharacter mapleCharacter2 = a2;
        mapleCharacter.rC.broadcastMessage(mapleCharacter2, MaplePacketCreator.updateCharLook(a2), false);
        mapleCharacter.GB.recalcLocalStats();
        if (mapleCharacter2.getMessenger() != null) {
            World.Messenger.updateMessenger(a2.getMessenger().getId(), a2.getName(), a2.Cb.getWorld(), a2.Cb.getChannel());
        }
        WeakReference<MapleCharacter>[] arrweakReference = a2.getClones();
        int n3 = n2 = 0;
        while (n3 < arrweakReference.length) {
            if (arrweakReference[n2].get() != null) {
                final MapleCharacter mapleCharacter3 = (MapleCharacter)arrweakReference[n2].get();
                Timer.CloneTimer.getInstance().schedule(new Runnable(){
                    {
                        4 a3;
                    }

                    @Override
                    public /* synthetic */ void run() {
                        4 a2;
                        4 v0 = a2;
                        a2.mapleCharacter3.getMap().broadcastMessage(a2.mapleCharacter3, MaplePacketCreator.updateCharLook(v0.mapleCharacter3), false);
                        v0.mapleCharacter3.getStat().recalcLocalStats();
                    }
                }, 500 * n2 + 500);
            }
            n3 = ++n2;
        }
    }

    public /* synthetic */ void useHpWash() {
        MapleCharacter a2;
        MapleCharacter mapleCharacter = a2;
        long l2 = mapleCharacter.getHpWash() - 1L;
        mapleCharacter.setCharacterSet(MapleNodes.ALLATORIxDEMO("\u6d19\u886c\u626d\u886c\u6b2f\u6554"), l2, false);
    }

    public /* synthetic */ String getPrefix() {
        MapleCharacter a2;
        return a2.OB;
    }

    /*
     * Unable to fully structure code
     * Enabled aggressive block sorting
     * Lifted jumps to return sites
     */
    public /* synthetic */ void gainMeso(int a, boolean a, boolean a, boolean a, boolean a) {
        if (a.vA + a < 0) {
            a.Cb.sendPacket(MaplePacketCreator.enableActions());
            return;
        }
        var6_6 = a.vA;
        if (GameSetConstants.CHECK_MESO && (var7_7 = ServerTempStorage.getCharacterMeso(a)) != 0 && a > 1000000 && var6_6 != var7_7 && !a.isGM()) {
            FileoutputUtil.logToFile(MapleNodes.ALLATORIxDEMO("@aK}\u0003FMmG!\u697f\u5e6d\u66d8\u52db\u755c\u5e36\u0003\u695d\u5e4f\u7d0e\u9328 XvX"), FileoutputUtil.NowTime() + "\u89d2\u8272\u540d\u5b57:" + a.getName() + "\u6953\u5e63\u66f4\u52d5\u7570\u5e38,\u6b63\u5e38\u61c9\u6709\u6953\u5e63: " + var7_7 + ",\u73a9\u5bb6\u64c1\u6709:" + var6_6 + "\u6253\u7b97\u518d\u7372\u5f97: " + a + "\r\n");
            World.Broadcast.broadcastGMMessage(MaplePacketCreator.getItemNotice("[GM\u5bc6\u8a9e] " + a.getName() + "\u6953\u5e63\u66f4\u52d5\u7570\u5e38,\u6b63\u5e38\u61c9\u6709\u6953\u5e63: " + var7_7 + ",\u73a9\u5bb6\u64c1\u6709:" + var6_6 + "\u6253\u7b97\u518d\u7372\u5f97: " + a));
            a.Cb.sendPacket(MaplePacketCreator.enableActions());
            return;
        }
        v0 = a;
        v0.vA += a;
        v0.updateSingleStat(MapleStat.MESO, a.vA, a);
        if (GameSetConstants.CHECK_MESO) {
            v1 = a;
            ServerTempStorage.setCharacterMeso(v1, v1.vA);
        }
        if (a) {
            a.Cb.sendPacket(MaplePacketCreator.showMesoGain(a, a));
        }
        if (a) ** GOTO lbl25
        v2 = a;
        if (a > 0) {
            v2.addEarnMeso(a);
            v3 = a;
        } else {
            v2.addSpendMeso(a);
lbl25:
            // 2 sources

            v3 = a;
        }
        if (v3.Cb.isMonitored() == false) return;
        v4 = a;
        FileoutputUtil.logToFile("logs/Hack/\u5371\u96aa\u5e33\u865f\u64cd\u4f5c/" + a.getName() + "/\u6953\u5e63\u66f4\u52d5\u7d00\u9304.txt", v4.getChrInfo("\u539f\u59cb\u6953\u5e63: " + var6_6 + " \u7372\u5f97\u6953\u5e63: " + a + " \u7e3d\u6953\u5e63\u91cf\u66f4\u8b8a\u70ba: " + v4.vA));
    }

    public static final class FameStatus
    extends Enum<FameStatus> {
        public static final /* synthetic */ /* enum */ FameStatus NOT_THIS_MONTH;
        public static final /* synthetic */ /* enum */ FameStatus OK;
        public static final /* synthetic */ /* enum */ FameStatus NOT_TODAY;
        private static final /* synthetic */ FameStatus[] ALLATORIxDEMO;

        public static /* synthetic */ {
            OK = new FameStatus(MaplePet.ALLATORIxDEMO("xw"), 0);
            NOT_TODAY = new FameStatus(GMCommand.ALLATORIxDEMO(",}6m6}&s;"), 1);
            NOT_THIS_MONTH = new FameStatus(MaplePet.ALLATORIxDEMO("ysccct~ohqxrct"), 2);
            FameStatus[] arrfameStatus = new FameStatus[3];
            arrfameStatus[0] = OK;
            arrfameStatus[1] = NOT_TODAY;
            arrfameStatus[2] = NOT_THIS_MONTH;
            ALLATORIxDEMO = arrfameStatus;
        }

        /*
         * WARNING - Possible parameter corruption
         * WARNING - void declaration
         */
        private /* synthetic */ FameStatus() {
            void var2_-1;
            void var1_-1;
            FameStatus a2;
        }

        public static /* synthetic */ FameStatus[] values() {
            return (FameStatus[])ALLATORIxDEMO.clone();
        }

        public static /* synthetic */ FameStatus valueOf(String a2) {
            return Enum.valueOf(FameStatus.class, a2);
        }
    }
}

